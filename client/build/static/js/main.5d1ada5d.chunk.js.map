{"version":3,"sources":["components/img/human-image1.png","i18n.js","components/context/UserContext.js","components/auth/errormsg.js","components/auth/AuthOptions.js","components/nav.js","components/auth/login1.js","components/footer.js","components/homepage.js","components/inteview.js","components/internalMedContext.js","components/inteviewForms/form2.js","components/inteviewForms/form1.js","components/inteviewForms/form3.js","components/inteviewForms/form4.js","components/inteviewForms/form5.js","components/inteviewForms/form6.js","components/inteviewForms/form7.js","components/InternalMedcine.js","components/diaLect/dialect.js","components/diaLect/wakayama.js","components/diaLect/fontDetails.js","components/diaLect/findDetails.js","components/diaLect/basicSentences.js","components/ObstetricgynecologyContext.js","components/ObstetricgynecologyForms/form2.js","components/ObstetricgynecologyForms/form1.js","components/ObstetricgynecologyForms/form3.js","components/ObstetricgynecologyForms/form4.js","components/ObstetricgynecologyForms/form5.js","components/ObstetricgynecologyForms/form6.js","components/ObstetricgynecologyForms/form7.js","components/ObstetricgynecologyForms/form8.js","components/Obstetricgynecology.js","components/disclaimer.js","components/context/covid19Context.js","components/covid-19.js","components/context/cardiologyContext.js","components/CardiologyForms/form2.js","components/CardiologyForms/form1.js","components/CardiologyForms/form3.js","components/CardiologyForms/form4.js","components/CardiologyForms/form5.js","components/CardiologyForms/form6.js","components/CardiologyForms/cardiology.js","components/GastrologyForm/form2.js","components/GastrologyForm/form1.js","components/GastrologyForm/form3.js","components/GastrologyForm/form4.js","components/GastrologyForm/form5.js","components/GastrologyForm/form6.js","components/context/gastrologyContext.js","components/GastrologyForm/gastrology.js","components/context/logfileContext.js","components/diaLect/wordDetails.js","components/diaLect/dictionary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","createContext","errormsg","props","className","message","onClick","clearError","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","user","IconButton","token","undefined","localStorage","setItem","color","push","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","inputInput","padding","paddingLeft","transition","transitions","create","width","sectionDesktop","sectionMobile","PrimarySearchAppBar","menu","React","createRef","classes","useTranslation","t","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","changelanguage","lang","changeLanguage","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","ref","aria-label","aria-controls","aria-haspopup","AppBar","position","style","backgroundColor","Toolbar","Typography","variant","noWrap","to","Button","fontSize","edge","button","margin","minHeight","minWidth","borderRadius","labelAligne","textAlign","marginLeft","paper","content","paddingBottom","paddingTop","Login1","email","setEmail","password","setPassword","error","setError","submit","e","a","preventDefault","loginUser","Axios","post","loginRes","console","log","data","response","msg","Grid","item","xs","height","onSubmit","FormControl","InputLabel","htmlFor","Input","type","onChange","target","value","PrimaryFooter","handleMenuClose","Homepage","authAxios","baseURL","headers","useEffect","loginfo","inteviewName","userName","language","contentSentence","date","Date","userId","logFunction","err","disableElevation","Inteview","MedContext","InternalMedContext","name","DateOfBirth","weight","sex","allergis","foods","medcine","problemtoday","stools","stoolfrequency","symptomoccur","symptomlike","scale1to10","symptomstart","symtomstarttime","onMedication","onmedications","doctorcare","doctorCare","hadsurgerys","hadsurgery","smokeregularly","smokeday","amount","duration","yearStop","drinkregularly","drinkeday","beer","nobeer","japsake","nojapsake","wisky","nowisky","wine","nowine","other","noOther","pregnant","breastfeeding","medicalexpenses","haveinterpreter","otherssss","bodyPart","values","setValues","Provider","children","root","gridList","ListItemIcon","CenteredGrid","setDate","question","handleToggleFood","currentIndex","indexOf","newChecked","splice","handleToggleMedecin","container","Paper","fullWidth","defaultValue","utils","DateFnsUtils","justify","label","format","KeyboardButtonProps","formControl","Select","labelId","GridList","cellHeight","cols","map","ListItem","key","role","dense","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","instructions","marginTop","marginBottom","problemtodays","setCheckedProblemtoday","setCheckedStool","setFrequency","object","setCheckedBodyParts","src","HumanImage","paddingRight","symptomoccurs","symptomlikes","setCheckedSymptomoccurs","setCheckedSymptomlikes","setTime","time","ondoctorcares","setMedication","setMedicationType","setDoctorcares","setDoctorcaresType","setHadsurgerys","setHadsurgerysType","component","RadioGroup","row","FormControlLabel","control","Radio","FormLabel","lineHeight","setYear","setSmokeregularly","setDrinkregularly","setFrequencyDuration","others","setBeerFrequency","setWiskyFrequency","setJapsakeFrequency","setWineFrequency","setOthersFrequency","handleChangeCheckDrink","marginRigh","border","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderColor","FormHelperText","handleChangeCheckSpecialRequest","palette","text","secondary","GetStepContent","activeStep","HorizontalLinearStepper","setActiveStep","Set","skipped","setSkipped","steps","datas","isStepOptional","step","isStepSkipped","has","Fragment","CssBaseline","Container","fixed","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","length","disabled","prevActiveStep","Error","prevSkipped","newSkipped","add","axios","then","res","delete","DialectTest","Wakayama","div1","textDecoration","p1","p2","getQueryVariable","variable","vars","window","location","search","substring","split","i","pair","BasicSentences","letter","decodeURI","page","Number","h1","h2","request","list","totalpage","Math","ceil","span","document","getElementById","a1","a2","innerText","catch","phrase","code","phraseOri","phraseAft","innerHTML","fontWeight","href","float","FindDetails","find","div2","findVal","count","remark","get","TextField","textFiled","ObstetricContext","ObstetricgynecologyContext","menstrualPeriod","ageStart","ageLast","daysCycle","irregular","periodsLast","usualFlow","painduringyourperiods","painkiller","dateLastPeriod","haveSexualIntercourse","hadUterineCancerTest","dateHadUterineCancerTest","takenBirthControlPills","pregnantOrPossiblyPregnant","noWeeks","doNotKnow","Areyoubreastfeeding","PregnantHistory","YesPregnancyHistory","delivery","hadMiscarriage","hadAbnomalPregnancy","weeksPregnanncy","problemDuringDelivery","problemDelivery","haveBabyAtThisHuspital","symptomLike","symptomLikeValue","symptomstartDate","symptomStartTime","setCheckedFood","setCheckedMedecine","update","handleChange","fields","setFields","field","idx","borderWidth","values1","handleChangeDate","handleChangeRadio","handleChangehadMiscarriage","handleChangehadAbnomalPregnancy","handleChangeweeksPregnanncy","handleRemove","handleAdd","handleToggleProblem","handleToggleProblemSymptomLikeValue","CovidContext","Covid19Context","checkBoxApplicable1","checkBoxApplicable2","checkBoxApplicable3","haveSymptoms1","Cough","Phlegm","Shortnessofbreath","Senseoffatigue","Abnormalityinthesenseofsmell","Unabletoappreciatetaste","VomitingNausea","Diarrhea","Noappetite","CardiologyContext","CardioContext","setName","setHeight","setWeight","setSex","GastrologyContext","LogfileContext","LogContext","foot","bottom","p3","p4","WordDetails","words","explain","detail","hidden","p","Dictionary","App","getItem","userRes","checkLoggedIn","exact","path","Covid19","Hompage","Nav","Disclaimer","InternalMedcine","Obstetricgynecology","Cardiology","Gastrology","Dialect","FontDetails","hostname","match","ReactDOM","render","StrictMode","fallback","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,0C,kOCU3CC,IAGGC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,UAhBc,CAAC,KAAM,KAAM,KAAM,MAkBjCC,cAAe,CACbC,aAAa,KAKJV,EAAf,EAAeA,I,iBC9BAW,0BAAc,M,oDCSdC,EATE,SAACC,GACd,OACI,yBAAKC,UAAU,gBACX,8BAAOD,EAAME,SACb,4BAAQC,QAASH,EAAMI,YAAvB,O,kHC2BGC,EA3BK,WAAO,IAAD,EACYC,qBAAWC,GAArCC,EADc,EACdA,SAAUC,EADI,EACJA,YACZC,EAAUC,cAWhB,OACI,6BAEQH,EAASI,KACL,kBAACC,EAAA,EAAD,CAAYV,QAXb,WACXM,EAAY,CACRK,WAAOC,EACPH,UAAMG,IAEVC,aAAaC,QAAQ,aAAc,KAMMC,MAAM,UAAUjB,UAAU,iBAAgB,0CAEnE,oCACI,kBAACY,EAAA,EAAD,CAAYV,QAhBnB,kBAAMO,EAAQS,KAAK,cAgBmBD,MAAM,UAAUjB,UAAU,iBAAgB,2CACzE,kBAACY,EAAA,EAAD,CAAYV,QAhBrB,kBAAMO,EAAQS,KAAK,YAgBmBD,MAAM,UAAUjB,UAAU,iBAAgB,4CCR7FmB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJC,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAKbG,UAAW,CACTd,MAAO,WAETe,WAAW,aACTC,QAASZ,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCQ,YAAY,cAAD,OAAgBb,EAAMK,QAAQ,GAA9B,OACXS,WAAYd,EAAMe,YAAYC,OAAO,SACrCC,MAAO,QACNjB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BQ,MAAO,SAGXC,eAAe,aACbX,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbY,cAAc,aACZZ,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,aAKA,SAASa,IACtB,IAAMC,EAAOC,IAAMC,YACbC,EAAU1B,IAF4B,EAGxB2B,cAAT5D,GAHiC,EAGpC6D,EAHoC,EAGjC7D,MAHiC,EAIZyD,IAAMK,SAAS,MAJH,mBAIrCC,EAJqC,KAI3BC,EAJ2B,OAKQP,IAAMK,SAAS,MALvB,mBAKrCG,EALqC,KAKjBC,EALiB,KAOtCC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAwB,SAACC,GAC7BP,EAAYO,EAAMC,gBAGdC,EAAwB,WAC5BP,EAAsB,OAYlBQ,EAAiB,SAACC,GAAD,OAAU,WAC/B3E,EAAK4E,eAAeD,KAGhBE,EAAS,8BACTC,EACJ,kBAACC,EAAA,EAAD,CACEhB,SAAUA,EACViB,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIN,EACJO,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMnB,EACNoB,QAtBoB,WACtBvB,EAAY,MACZS,MAsBE,kBAACe,EAAA,EAAD,CAAUxE,QAAS0D,EAAe,OAAlC,MACA,kBAACc,EAAA,EAAD,CAAUxE,QAAS0D,EAAe,OAAlC,MACA,kBAACc,EAAA,EAAD,CAAUxE,QAAS0D,EAAe,OAAlC,MACA,kBAACc,EAAA,EAAD,CAAUxE,QAAS0D,EAAe,OAAlC,OAKEe,EACJ,kBAACV,EAAA,EAAD,CACEW,IAAKlC,EACLO,SAAUE,EACVe,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GANiB,qCAOjBC,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMjB,EACNkB,QAASd,GAGT,kBAACe,EAAA,EAAD,CAAUxE,QAASsD,GACjB,kBAAC5C,EAAA,EAAD,CACEiE,aAAW,0BACXC,gBAAc,8BACdC,gBAAc,OACd9D,MAAM,WAEN,kBAAC,IAAD,OAEF,wCAvEsC,EA4EtB0B,IAAMK,SAAS,IA5EO,6BAkF5C,OACE,yBAAKhD,UAAW6C,EAAQvB,MACtB,kBAAC0D,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAACC,gBAAgB,cAChD,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,GACzD,kBAAC,IAAD,CAAMC,GAAG,aAAa,kBAACC,EAAA,EAAD,CAAQP,MAAO,CAACQ,SAAS,GAAIzE,MAAO,UAApC,SAGtB,yBAAKjB,UAAW6C,EAAQvB,OACxB,yBAAKtB,UAAW6C,EAAQN,gBACtB,kBAAC,EAAD,MACA,kBAAC3B,EAAA,EAAD,CACE+E,KAAK,MACLd,aAAW,0BACXC,gBAAef,EACfgB,gBAAc,OACd7E,QAASsD,EACTvC,MAAM,WACP,8BACC,8BAAM,kBAAC,IAAD,OACN,6CAIJ,yBAAKjB,UAAW6C,EAAQL,eACtB,kBAAC5B,EAAA,EAAD,CACEiE,aAAW,YACXC,gBA7DS,qCA8DTC,gBAAc,OACd7E,QAzFiB,SAACuD,GAC5BL,EAAsBK,EAAMC,gBAyFlBzC,MAAM,WAEN,kBAAC,IAAD,UAKP0D,EACAX,GCzKP,IAAM7C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,OACR5E,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBC,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhBC,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,aAErBkB,QAAS,CACLC,cAAe,QACfC,WAAY,YAKL,SAASC,IAAU,IAAD,EACT1D,cAAZC,EADqB,EACrBA,EACFF,GAFuB,EAClB3D,KACKiC,KAFa,EAGH6B,qBAHG,mBAGtByD,EAHsB,KAGfC,EAHe,OAIG1D,qBAJH,mBAItB2D,EAJsB,KAIZC,EAJY,OAKH5D,mBAAS,IALN,mBAKtB6D,EALsB,KAKfC,EALe,KAOrBtG,EAAgBH,qBAAWC,GAA3BE,YACFC,EAAUC,cAGVqG,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACXD,EAAEE,iBADS,SAGLC,EAAY,CAACV,QAAOE,YAHf,SAIYS,IAAMC,KAAN,UALH,GAKG,eAGnBF,GAPO,OAILG,EAJK,OASRC,QAAQC,IAAR,UAViB,KAWpBhH,EAAY,CACRK,MAAOyG,EAASG,KAAK5G,MACrBF,KAAM2G,EAASG,KAAK9G,OAExBI,aAAaC,QAAQ,aAAcsG,EAASG,KAAK5G,OACjDJ,EAAQS,KAAK,aAfF,kDAkBX,KAAIwG,SAASD,KAAKE,KAAOb,EAAS,KAAIY,SAASD,KAAKE,KAlBzC,0DAAH,sDAsBZ,OACI,yBAAK3H,UAAU,aACX,kBAAC,EAAD,MACN,6BACK,kBAAC4H,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,wBAAI9H,UAAU,OAAOkF,MAAO,CAAEgB,UAAW,SAAU5D,MAAM,IAAK6C,gBAAgB,UAAWlE,MAAM,QAAS+E,aAAa,EAAG+B,OAAO,KAAOhF,EAAE,uBACvI8D,GACA,kBAAC,EAAD,CAAU5G,QAAS4G,EAAO1G,WAAY,kBAAM2G,OAAShG,MAEvD,0BAAMd,UAAU,OAAOgI,SAAUjB,GAChC,kBAACkB,EAAA,EAAD,CAAcjI,UAAU,IACpB,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,eAAepF,EAAE,uBACrC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,cACHgE,KAAK,QACLC,SAAU,SAACtB,GAAD,OAAON,EAASM,EAAEuB,OAAOC,WAG1C,6BACD,kBAACP,EAAA,EAAD,CAAcjI,UAAU,IACpB,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,kBAAkBpF,EAAE,0BACxC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,iBACHgE,KAAK,WACLC,SAAU,SAACtB,GAAD,OAAOJ,EAAYI,EAAEuB,OAAOC,WAG7C,6BACT,2BAAOH,KAAK,SAASG,MAAM,cC5FlC,IAAMrH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJC,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAKbG,UAAW,CACTd,MAAO,WAETe,WAAW,aACTC,QAASZ,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCQ,YAAY,cAAD,OAAgBb,EAAMK,QAAQ,GAA9B,OACXS,WAAYd,EAAMe,YAAYC,OAAO,SACrCC,MAAO,QACNjB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BQ,MAAO,SAGXC,eAAe,aACbX,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbY,cAAc,aACZZ,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,aAKA,SAAS6G,IACtB,IAAM5F,EAAU1B,IADsB,EAENwB,IAAMK,SAAS,MAFT,mBAE/BC,EAF+B,KAErBC,EAFqB,OAGcP,IAAMK,SAAS,MAH7B,mBAG/BG,EAH+B,KAGXC,EAHW,KAKhCC,EAAaC,QAAQL,GAWrByF,GAVmBpF,QAAQH,GAUT,WACtBD,EAAY,MAJZE,EAAsB,QAalBY,EACJ,kBAACC,EAAA,EAAD,CACEhB,SAAUA,EACViB,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GALW,8BAMXC,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMnB,EACNoB,QAASiE,GAET,kBAAChE,EAAA,EAAD,CAAUxE,QAASwI,GAAnB,WACA,kBAAChE,EAAA,EAAD,CAAUxE,QAASwI,GAAnB,eAOJ,OACE,yBAAK1I,UAAW6C,EAAQvB,MACtB,kBAAC0D,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAACC,gBAAgB,cAChD,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAChD,YAAa,UAA/E,mEAIA,yBAAKlC,UAAW6C,EAAQvB,SAM3B0C,GClGP,IAAM7C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,OAAQ,CACNC,OAAQ,OACR5E,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAEhBK,QAAS,CACPC,cAAe,QACfC,WAAY,YA0EDoC,MAtEf,WACE,IAAM9F,EAAU1B,IADE,EAEE2B,cAAZC,EAFU,EAEVA,EAAG7D,EAFO,EAEPA,KACHqB,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEVkI,EAAYxB,IAAM/E,OAAO,CAC7BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAgC7B,OA5BAkI,qBAAU,WAGR,GAFKxI,EAASI,MAAMF,EAAQS,KAAK,WACrCqG,QAAQC,IAAIjH,GACJA,EAASI,KACX,KACmB,uCAAG,4BAAAsG,EAAA,6DACZ+B,EAAU,CACdC,aAAc,YACdC,SAAU3I,EAASI,KAAKuI,SACxBC,SAAUjK,EAAKiK,SACfC,gBAAiB,GACjBC,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPN,SASOuE,EAAUvB,KACjC,kBACA2B,GAXgB,yDAAH,qDAcjBQ,GACA,MAAOC,GACRlC,QAAQC,IAAIiC,OAQf,yBAAKzJ,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAW6C,EAAQwD,QAASnB,MAAO,IAEtC,kBAAC,IAAD,CAAMM,GAAG,oBAAmB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA2F3G,EAAE,qBACzH,kBAAC,IAAD,CAAMyC,GAAG,wBAAuB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,yBAC5H,kBAAC,IAAD,CAAMyC,GAAG,eAAc,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,gBACnH,kBAAC,IAAD,CAAMyC,GAAG,eAAc,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,sBACnH,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,eAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,eAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,YAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,oBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,gBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,sBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,iBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,mBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,eAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,YAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,gBAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,wBAC5F,kBAAC,IAAD,CAAMyC,GAAG,sBAAqB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,cAE5H,kBAAC,EAAD,QC/ES4G,MATf,WACE,OACE,yBAAK3J,UAAU,OACV,kBAAC,EAAD,MACF,0C,mGCNM4J,GAAa/J,0BAEbgK,GAAqB,SAAA9J,GAAU,IAAD,EACXiD,mBAAS,CACjC8G,KAAO,GACPC,YAAc,IAAIT,KAClBvB,OAAS,GACTiC,OAAS,GACTC,IAAM,GACNC,SAAW,CACPC,MAAQ,GACRC,QAAU,IAGdC,aAAe,GACfC,OAAS,GACTC,eAAiB,GAEjBC,aAAe,GACfC,YAAc,GACdC,WAAa,GACbC,aAAe,IAAIrB,KACnBsB,gBAAkB,IAAItB,KAEtBuB,aAAe,GACfC,cAAe,GAEfC,WAAY,GACZC,WAAa,GAEbC,YAAa,GACbC,WAAY,GAGZC,eAAiB,GACjBC,SAAW,CACPC,OAAS,GACTC,SAAW,GACXC,SAAW,IAEfC,eAAgB,GAChBC,UAAW,CACPC,MAAO,EACPC,OAAS,GACTC,SAAU,EACVC,UAAY,GACZC,OAAQ,EACRC,QAAU,GACVC,MAAO,EACPC,OAAS,GACTC,OAAQ,EACRC,QAAU,IAEdC,SAAW,GACXC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAClBC,WAAY,EAEZC,SAAW,KAzDwB,mBAChCC,EADgC,KACxBC,EADwB,KA6DvC,OACI,kBAAC/C,GAAWgD,SAAZ,CAAqBpE,MAAO,CAACkE,EAAQC,IAChC5M,EAAM8M,W,wCCzCb1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFvL,SAAU,GAEd6E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,SAEX8L,SAAU,CACNzK,MAAO,IACPyF,OAAQ,IACR7B,UAAW,SACXL,OAAO,GACP5D,QAAQ,IAEV+K,aAAc,CACVjH,SAAS,QAoRJkH,GAhRM,WAEjB,IAFuB,EA4BK5M,qBAAWuJ,IA5BhB,mBA4BhB8C,EA5BgB,KA4BRC,EA5BQ,OA6BH7J,cAAZC,EA7Be,EA6BfA,EAAG7D,EA7BY,EA6BZA,KACL2D,EAAU1B,KA9BO,EAgCC6B,mBAAS,IAhCV,gCAiCKA,mBAAS,KAjCd,gCAkCKA,mBAAS,KAlCd,gCAmCCA,mBAAS,KAnCV,mBAmCVkK,GAnCU,aAoCDlK,mBAAS,IApCR,gCAsCeL,IAAMK,SAAS,KAtC9B,gCAuCuBL,IAAMK,SAAS,KAvCtC,mBAwCfzC,GAxCe,UAwCFF,qBAAWC,GAAxBC,UACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,yBAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAeXoE,EAAmB,SAAC5E,GAAD,OAAW,WAChC,IAAM6E,EAAeX,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OACnD+E,EAAU,YAAOb,EAAOxC,SAASC,QAEjB,IAAlBkD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAIpCV,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBC,MAAMoD,OAC1D/D,EAAY,mBAIViE,EAAsB,SAACjF,GAAD,OAAW,WACnC,IAAM6E,EAAeX,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OACrD+E,EAAU,YAAOb,EAAOxC,SAASE,UAEjB,IAAlBiD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAIpCV,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBE,QAAQmD,OAC5D/D,EAAY,uBAUpBjC,QAAQC,IAAIkF,GA2BR,OACI,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4CAEpD,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAEX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,iCAA9B,4FACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,OAELwF,aAAcnB,EAAO5C,KACrBxB,SA/CL,SAACtB,GAEhB2F,EAAU,eAAID,EAAL,CAAa5C,KAAK9C,EAAEuB,OAAOC,SACpCgB,EAAY,oBA+CA,kBAAC,KAAD,CAAyBsE,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIJ,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO3C,YACdzB,SAzCT,SAACe,GAChB6D,EAAQ7D,GACRsD,EAAU,eAAID,EAAL,CAAa3C,YAAYV,KAClCG,EAAY,kBAuCY2E,oBAAqB,CACjB,aAAc,mBAO9B,kBAACvG,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAACgG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IACpC,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SAELwF,aAAcnB,EAAO3E,OACrBO,SAtEP,SAACtB,GAElB2F,EAAU,eAAID,EAAL,CAAa3E,OAAOf,EAAEuB,OAAOC,SACtCgB,EAAY,wBA0EJ,kBAAC5B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IAC5B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SAELwF,aAAcnB,EAAO1C,OACrB1B,SA/EP,SAACtB,GAElB2F,EAAU,eAAID,EAAL,CAAa1C,OAAOhD,EAAEuB,OAAOC,SACtCgB,EAAY,sBA+EA,kBAACvB,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wBAC7C,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOzC,IACd3B,SA5EN,SAAC7E,GAEfkJ,EAAU,eAAID,EAAL,CAAazC,IAAIxG,EAAM8E,OAAOC,SACvCgB,EAAY,iBA2EQ,kBAAC9E,EAAA,EAAD,CAAU8D,MAAM,QAAQzF,EAAE,yBAC1B,kBAAC2B,EAAA,EAAD,CAAU8D,MAAM,UAAUzF,EAAE,8BAK5C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4BAAP,uCAE7C,6BACA,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,+CACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAxNzD,CAChB,CAAE3E,KAAM,wBAAetB,MAAO,YAC9B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,sEAAqBtB,MAAO,QACpC,CAAEsB,KAAM,iBAAatB,MAAO,UAC5B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,wBAAetB,MAAO,WAC9B,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,sBAAatB,MAAO,SAC5B,CAAEsB,KAAM,oBAAWtB,MAAO,OAC1B,CAAEsB,KAAM,gCAAkBtB,MAAO,aACjC,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,qBAAYtB,MAAO,QAC3B,CAAEsB,KAAM,iFAAwEtB,MAAO,qEACvF,CAAEsB,KAAM,2GAAgDtB,MAAO,iCA2MlCkG,KAAI,SAAClG,GACd,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASkN,EAAiB5E,IAC/E,kBAACwE,GAAA,EAAD,CAAchN,UAAW6C,EAAQmK,cAC7B,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAyD,IAAhDtC,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OAC7CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQjE,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,mDACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,EAAGvJ,MAAO,CAAChD,YAAa,KAhO5E,CACrB,CAAC4H,KAAK,0CAAkBtB,MAAM,WAC9B,CAACsB,KAAK,oCAAsBtB,MAAM,iBAClC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,sDAAwCtB,MAAM,mCACpD,CAACsB,KAAK,iCAAmBtB,MAAM,gBA2NGkG,KAAI,SAAClG,GACnB,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASuN,EAAoBjF,IAClF,kBAACwE,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAA2D,IAAlDtC,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OAC/CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,kBC7R3E3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAO,GACP5D,QAAQ,GAEZ2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA4MAgM,GArMM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KACLuQ,EAAgB,CAClB,CAAC3F,KAAM/G,EAAE,yBAA2B,gBAAOyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,yBAAyB,UAAMyF,MAAM,SAC9C,CAACsB,KAAM/G,EAAE,6BAA8B,gBAAOyF,MAAM,aACpD,CAACsB,KAAM/G,EAAE,0BAA2B,UAAMyF,MAAM,UAChD,CAACsB,KAAM/G,EAAE,uCAAuC,kCAAUyF,MAAM,uBAChE,CAACsB,KAAM/G,EAAE,+BAA+B,iBAAQyF,MAAM,eACtD,CAACsB,KAAM/G,EAAE,gCAAgC,yCAAYyF,MAAM,gBAC3D,CAACsB,KAAM/G,EAAE,kCAAkC,kCAAUyF,MAAM,kBAC3D,CAACsB,KAAM/G,EAAE,+BAA+B,sBAAQyF,MAAM,uBACtD,CAACsB,KAAM/G,EAAE,6BAA6B,uBAASyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,gCAAgC,mCAAWyF,MAAM,gBAC1D,CAACsB,KAAM/G,EAAE,4BAA4B,gBAAOyF,MAAM,YAClD,CAACsB,KAAM/G,EAAE,+BAA+B,gBAAOyF,MAAM,eACrD,CAACsB,KAAM/G,EAAE,4BAA4B,gBAAOyF,MAAM,qBAClD,CAACsB,KAAM/G,EAAE,+BAA+B,gBAAOyF,MAAM,eACrD,CAACsB,KAAM/G,EAAE,8BAA8B,4BAASyF,MAAM,cACtD,CAACsB,KAAM/G,EAAE,+BAA+B,4BAASyF,MAAM,eACvD,CAACsB,KAAM/G,EAAE,gCAAgC,sBAAQyF,MAAM,gBACvD,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,4BAA4B,sBAAQyF,MAAM,YACnD,CAACsB,KAAM/G,EAAE,yBAAyB,kCAAUyF,MAAM,SAClD,CAACsB,KAAM/G,EAAE,4BAA8ByF,MAAM,YAC7C,CAACsB,KAAM/G,EAAE,4BAA4B,sBAAQyF,MAAM,YACnD,CAACsB,KAAM/G,EAAE,0BAA0B,sBAAQyF,MAAM,UACjD,CAACsB,KAAM/G,EAAE,4BAA4B,gBAAOyF,MAAM,YAClD,CAACsB,KAAM/G,EAAE,6BAA6B,sBAAQyF,MAAM,aACpD,CAACsB,KAAM/G,EAAE,wBAAwB,gBAAOyF,MAAM,QAC9C,CAACsB,KAAM/G,EAAE,yBAA0B,4BAASyF,MAAM,WAI7C8B,EAAS,CACd,CAACR,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,yBAA0B,gBAAOyF,MAAM,SAChD,CAACsB,KAAM/G,EAAE,0BAA2B,gBAAOyF,MAAM,UACjD,CAACsB,KAAM/G,EAAE,0BAA2B,gBAAOyF,MAAM,UACjD,CAACsB,KAAM/G,EAAE,wBAAyB,gBAAOyF,MAAM,QAC/C,CAACsB,KAAM/G,EAAE,wBAAyB,sBAAQyF,MAAM,SAzC7B,EA6CKnI,qBAAWuJ,IA7ChB,mBA6ChB8C,EA7CgB,KA6CRC,EA7CQ,KA8CjB9J,EAAU1B,KA9CO,EA+C+BwB,IAAMK,SAAS,IA/C9C,mBA+CK0M,GA/CL,aAgDiB/M,IAAMK,SAAS,IAhDhC,mBAgDF2M,GAhDE,aAiDWhN,IAAMK,SAAS,IAjD1B,mBAiDL4M,GAjDK,WAkDfrP,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,0BAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAmDjB,OAEI,6BACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAgC,6BAAvC,gNAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC9C,kBAACsM,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAC6C,OAAO,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACrGgB,EAAcf,KAAI,SAAClG,GAChB,IAhDUqH,EAgDJvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAnDnD2P,EAmDqFrH,EAnD1E,WACzC,IAAM6E,EAAeX,EAAOrC,aAAaiD,QAAQuC,EAAOrH,OAClD+E,EAAU,YAAOb,EAAOrC,eAER,IAAlBgD,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCqC,EAAuBnC,GACvBZ,EAAU,eAAID,EAAL,CAAarC,aAAakD,KACnC/D,EAAY,gCAwCgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAuD,IAA9CtC,EAAOrC,aAAaiD,QAAQ9E,EAAMA,OAC3CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAO7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,sEAA2C,6BAA3C,iFAG7C,kBAACmI,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAC6C,OAAO,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACrGnE,EAAOoE,KAAI,SAAClG,GACT,IA3DGqH,EA2DGvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA9D1D2P,EA8DqFrH,EA9D1E,WAClC,IAAM6E,EAAeX,EAAOpC,OAAOgD,QAAQuC,EAAOrH,OAC5C+E,EAAU,YAAOb,EAAOpC,SAER,IAAlB+C,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCsC,EAAgBpC,GAChBZ,EAAU,eAAID,EAAL,CAAapC,OAAOiD,KAC7B/D,EAAY,6BAmDgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAiD,IAAxCtC,EAAOpC,OAAOgD,QAAQ9E,EAAMA,OACrCyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAM7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAW6C,EAAQuL,aAC7C,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,kCAA7C,sDACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOnC,eACdjC,SAtEA,SAAC7E,GACrBmM,EAAanM,EAAM8E,OAAOC,OAC1BmE,EAAU,eAAID,EAAL,CAAanC,eAAe9G,EAAM8E,OAAOC,SAClDgB,EAAY,iCAqEQ,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,a,qBCxNtBrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA6HAgM,GAzHM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EA8BKmB,qBAAWuJ,IA9BhB,mBA8BhB8C,EA9BgB,KA8BRC,EA9BQ,OAgCyBhK,IAAMK,SAAS,IAhCxC,mBAgCE8M,GAhCF,WAiCjBjN,EAAU1B,KACRZ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIvB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACZ+B,EAAU,CACZC,aAAc,0BAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPR,SASSuE,EAAUvB,KACjC,kBACA2B,GAXc,yDAAH,sDA+BnB,OAEQ,6BACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAM1C,MAAO,CAAC6C,OAAO,IAAKwH,WAAW,GAAIpK,gBAAiB,UACtD,yBAAK4K,IAAKC,KAAY1N,MAAM,SAGhC,kBAACsF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEC,gBAAiB,UACzC,kBAACwI,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,0CAGpD,kBAACwL,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAE6C,OAAQ,IAAK7F,YAAa,GAAG+N,aAAc,GAAI1J,WAAY,GAAID,cAAe,GAAInB,gBAAiB,SAAWqJ,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GA1FhM,CACd,CAAE3E,KAAM,kBAActB,MAAO,QAC7B,CAAEsB,KAAM,gCAAuBtB,MAAO,QACtC,CAAEsB,KAAM,+BAAsBtB,MAAO,SACrC,CAAEsB,KAAM,gCAAuBtB,MAAO,QACtC,CAAEsB,KAAM,+BAAsBtB,MAAO,QACrC,CAAEsB,KAAM,kBAActB,MAAO,QAC7B,CAAEsB,KAAM,mBAAetB,MAAO,SAC9B,CAAEsB,KAAM,0BAAiBtB,MAAO,UAChC,CAAEsB,KAAM,kBAActB,MAAO,YAC7B,CAAEsB,KAAM,sBAAkBtB,MAAO,WACjC,CAAEsB,KAAM,mBAAetB,MAAO,QAC9B,CAAEsB,KAAM,oBAAgBtB,MAAO,SAC/B,CAAEsB,KAAM,uBAAmBtB,MAAO,YAClC,CAAEsB,KAAM,4CAAoBtB,MAAO,SACnC,CAAEsB,KAAM,iCAAwBtB,MAAO,QACvC,CAAEsB,KAAM,gCAAuBtB,MAAO,QACtC,CAAEsB,KAAM,kCAAyBtB,MAAO,SACxC,CAAEsB,KAAM,iCAAwBtB,MAAO,SACvC,CAAEsB,KAAM,oBAAgBtB,MAAO,SAC/B,CAAEsB,KAAM,uBAAmBtB,MAAO,YAClC,CAAEsB,KAAM,iCAAwBtB,MAAO,QACvC,CAAEsB,KAAM,gCAAuBtB,MAAO,QACtC,CAAEsB,KAAM,kCAAyBtB,MAAO,SACxC,CAAEsB,KAAM,iCAAwBtB,MAAO,SACvC,CAAEsB,KAAM,kCAAyBtB,MAAO,SACxC,CAAEsB,KAAM,iCAAwBtB,MAAO,UAiERkG,KAAI,SAAClG,GACZ,IA/BGqH,EA+BGvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAlC1D2P,EAkCyFrH,EAlC9E,WACtC,IAAM6E,EAAeX,EAAOD,SAASa,QAAQuC,EAAOrH,OAC9C+E,EAAU,YAAOb,EAAOD,WAER,IAAlBY,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCyC,EAAoBvC,GACpBZ,EAAU,eAAID,EAAL,CAAaD,SAASc,KAC/B/D,EAAY,mDAuBoB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAmD,IAA1CtC,EAAOD,SAASa,QAAQ9E,EAAMA,OACvCyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,iB,UC5H/E3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAmOAgM,GA/NM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KACLgR,EAAgB,CAClB,CAAEpG,KAAM/G,EAAE,2BAA6B,WAAOyF,MAAO,WACrD,CAAEsB,KAAM/G,EAAE,2BAA6B,WAAOyF,MAAO,WACrD,CAAEsB,KAAM/G,EAAE,2BAA6B,iBAAQyF,MAAO,WACtD,CAAEsB,KAAM/G,EAAE,8BAAgC,uBAASyF,MAAO,cAC1D,CAAEsB,KAAM/G,EAAE,gCAAkC,WAAOyF,MAAO,gBAC1D,CAAEsB,KAAM/G,EAAE,6BAA+B,WAAOyF,MAAO,aACvD,CAAEsB,KAAM/G,EAAE,yBAA2B,WAAOyF,MAAO,UAGjD2H,EAAe,CACjB,CAAErG,KAAM/G,EAAE,4BAA8B,uEAAiByF,MAAO,YAChE,CAAEsB,KAAM/G,EAAE,oCAAsC,yFAAoByF,MAAO,oBAC3E,CAAEsB,KAAM/G,EAAE,6CAA+C,uEAAiByF,MAAO,6BACjF,CAAEsB,KAAM/G,EAAE,yBAA2B,uBAASyF,MAAO,UAhBlC,EAmBKnI,qBAAWuJ,IAnBhB,mBAmBhB8C,EAnBgB,KAmBRC,EAnBQ,KAoBjB9J,EAAU1B,KApBO,EAqBiCwB,IAAMK,SAAS,IArBhD,mBAqBMoN,GArBN,aAsB+BzN,IAAMK,SAAS,IAtB9C,mBAsBKqN,GAtBL,aAuBW1N,IAAMK,SAAS,IAvB1B,mBAuBL4M,GAvBK,aAwBC5M,mBAAS,IAAIsG,MAxBd,mBAwBV4D,GAxBU,aAyBClK,mBAAS,IAAIsG,MAzBd,mBAyBVgH,GAzBU,WA0Bf/P,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIvB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACZ+B,EAAU,CACZC,aAAc,yBAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPR,SASSuE,EAAUvB,KACjC,kBACA2B,GAXc,yDAAH,sDA6DnB,OACI,6BACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAE1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAP,KAAyC,6BAAzC,sFAG7C,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAC7FyB,EAAcxB,KAAI,SAAClG,GAChB,IA1CWqH,EA0CLvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA7ClD2P,EA6CqFrH,EA7C1E,WAC1C,IAAM6E,EAAeX,EAAOlC,aAAa8C,QAAQuC,EAAOrH,OAClD+E,EAAU,YAAOb,EAAOlC,eAER,IAAlB6C,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpC+C,EAAwB7C,GACxBZ,EAAU,eAAID,EAAL,CAAalC,aAAa+C,KACnC/D,EAAY,mCAkCgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAuD,IAA9CtC,EAAOlC,aAAa8C,QAAQ9E,EAAMA,OAC3CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAO7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,+BAAP,KAAwC,6BAAxC,oHAG7C,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,GAAI9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAC5F0B,EAAazB,KAAI,SAAClG,GACf,IAnFUqH,EAmFJvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAtFnD2P,EAsFqFrH,EAtF1E,WACzC,IAAM6E,EAAeX,EAAOjC,YAAY6C,QAAQuC,EAAOrH,OACjD+E,EAAU,YAAOb,EAAOjC,cAER,IAAlB4C,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCgD,EAAuB9C,GACvBZ,EAAU,eAAID,EAAL,CAAajC,YAAY8C,KAClC/D,EAAY,8BA2EgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAsD,IAA7CtC,EAAOjC,YAAY6C,QAAQ9E,EAAMA,OAC1CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAO7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,8BAA8B,6BAArC,gOAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAW6C,EAAQuL,aAC7C,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAAf,UACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOhC,WACdpC,SArFJ,SAAC7E,GACrBmM,EAAanM,EAAM8E,OAAOC,OAC1BmE,EAAU,eAAID,EAAL,CAAahC,WAAWjH,EAAM8E,OAAOC,SAC9CgB,EAAY,kGAoFY,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAOZ,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAP,IAAwC,6BAAxC,6FAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,CAAyBgG,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIlG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO/B,aACdrC,SA3Gb,SAACe,GAChB6D,EAAQ7D,GACRsD,EAAU,eAAID,EAAL,CAAa/B,aAAatB,KACnCG,EAAY,oCAyGgB2E,oBAAqB,CACjB,aAAc,iBAGtB,kBAAC,KAAD,CACIrG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,cACH4J,MAAM,cACNzF,MAAOkE,EAAO9B,gBACdtC,SAlHb,SAACiI,GAChBD,EAAQC,GACR5D,EAAU,eAAID,EAAL,CAAa9B,gBAAgB2F,KACtC/G,EAAY,oCAgHgB2E,oBAAqB,CACjB,aAAc,wB,wCCjPhDhN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAySAgM,GAtSM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KAEL+L,EAAc,CAChB,CAACnB,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,wBAAyB,WAAOyF,MAAM,QAC/C,CAACsB,KAAM/G,EAAE,yBAA0B,WAAOyF,MAAM,SAChD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,wBAAyB,iBAAQyF,MAAM,QAChD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,2BAA4B,WAAOyF,MAAM,WAClD,CAACsB,KAAM/G,EAAE,8BAA+B,iBAAQyF,MAAM,cACtD,CAACsB,KAAM/G,EAAE,yBAA0B,kBAASyF,MAAM,SAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,YACpD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,kCAAmC,uBAASyF,MAAM,qBAC3D,CAACsB,KAAM/G,EAAE,0BAA2B,uBAASyF,MAAM,WAGjDsC,EAAgB,CAClB,CAAChB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,gCAAiC,6BAAUyF,MAAM,gBAC1D,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,oCAAqC,6BAAUyF,MAAM,oBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,6BAAUyF,MAAM,gBAGpDgI,EAAgB,CACrB,CAAC1G,KAAM/G,EAAE,mCAAoC,iDAAeyF,MAAM,mBAClE,CAACsB,KAAM/G,EAAE,qCAAsC,6BAAUyF,MAAM,qBAC/D,CAACsB,KAAM/G,EAAE,oCAAqC,uBAASyF,MAAM,oBAC7D,CAACsB,KAAM/G,EAAE,gCAAiC,iBAAQyF,MAAM,gBACxD,CAACsB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,6BAA8B,6BAAUyF,MAAM,aACvD,CAACsB,KAAM/G,EAAE,mDAAoD,uBAASyF,MAAM,mCAC5E,CAACsB,KAAM/G,EAAE,kCAAmC,yCAAYyF,MAAM,kBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,mCAAWyF,MAAM,eAC1D,CAACsB,KAAM/G,EAAE,4BAA6B,uBAASyF,MAAM,YACrD,CAACsB,KAAM/G,EAAE,4CAA6C,mCAAWyF,MAAM,wCACvE,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,aA/CjC,EAkDKnI,qBAAWuJ,IAlDhB,mBAkDhB8C,EAlDgB,KAkDRC,EAlDQ,KAmDjB9J,EAAU1B,KAnDO,EAoDawB,IAAMK,SAAS,IApD5B,mBAoDJyN,GApDI,aAqDqB9N,IAAMK,SAAS,IArDpC,mBAqDA0N,GArDA,aAsDe/N,IAAMK,SAAS,IAtD9B,mBAsDH2N,GAtDG,aAuDuBhO,IAAMK,SAAS,IAvDtC,mBAuDC4N,GAvDD,aAwDcjO,IAAMK,SAAS,IAxD7B,mBAwDJ6N,GAxDI,aAyDuBlO,IAAMK,SAAS,IAzDtC,mBAyDC8N,GAzDD,WA0DfvQ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,0BAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAgFjB,OACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,yCAAP,IAAiD,6BAAjD,sFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO7B,aAAcvC,SAtC1E,SAAC7E,GAClBgN,EAAchN,EAAM8E,OAAOC,OAC3BmE,EAAU,eAAID,EAAL,CAAa7B,aAAapH,EAAM8E,OAAOC,SAChDgB,EAAY,wCAoCI,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAK/D,kBAACrG,EAAA,EAAD,KACA,6BAC6B,QAAxB8E,EAAO7B,aACJ,6BACA,kBAACwG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDAC7D,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG3D,EAAc4D,KAAI,SAAClG,GAChB,IAnEYqH,EAmENvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAtEjD2P,EAsEqFrH,EAtE1E,WAC3C,IAAM6E,EAAeX,EAAO5B,cAAcwC,QAAQuC,EAAOrH,OACnD+E,EAAU,YAAOb,EAAO5B,gBAER,IAAlBuC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCqD,EAAkBnD,GAClBZ,EAAU,eAAID,EAAL,CAAa5B,cAAcyC,KACpC/D,EAAY,gDA2DgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAwD,IAA/CtC,EAAO5B,cAAcwC,QAAQ9E,EAAMA,OAC5CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,mCAAP,KAA4C,6BAA5C,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO3B,WAAYzC,SA/D9D,SAAC7E,GAC5BkN,EAAelN,EAAM8E,OAAOC,OAC5BmE,EAAU,eAAID,EAAL,CAAa3B,WAAWtH,EAAM8E,OAAOC,SAC9CgB,EAAY,qCA6DI,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAO3B,WACJ,kBAACnD,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACzB,kBAACuJ,GAAA,EAAD,CAAW3D,WAAS,EAACxI,MAAO,CAACqK,WAAW,GAAI+B,WAAW,EAAG5L,SAAS,KAAK,gCAAS3C,EAAE,8CAAX,IAA0D,6BAA1D,wQACxE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG+B,EAAc9B,KAAI,SAAClG,GAChB,IA3FaqH,EA2FPvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA9FhD2P,EA8FqFrH,EA9F1E,WAC5C,IAAM6E,EAAeX,EAAO1B,WAAWsC,QAAQuC,EAAOrH,OAChD+E,EAAU,YAAOb,EAAO1B,aAER,IAAlBqC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCuD,EAAmBrD,GACnBZ,EAAU,eAAID,EAAL,CAAa1B,WAAWuC,KACjC/D,EAAY,6CAmFgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAqD,IAA5CtC,EAAO1B,WAAWsC,QAAQ9E,EAAMA,OACzCyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,8BAAP,KAAuC,6BAAvC,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOxB,WAAY5C,SAvJ7D,SAAC7E,GAC7BoN,EAAepN,EAAM8E,OAAOC,OAC5BmE,EAAU,eAAID,EAAL,CAAaxB,WAAWzH,EAAM8E,OAAOC,SAC9CgB,EAAY,sBAqJI,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAOxB,WACJ,6BACI,kBAACmG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDACjE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjGxD,EAAYyD,KAAI,SAAClG,GACd,IAnLaqH,EAmLPvB,EAAO,8BAA0B9F,EAAMsB,MAC9C,OACK,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SArLhD2P,EAqLqFrH,EArL1E,WAC5C,IAAM6E,EAAeX,EAAOzB,YAAYqC,QAAQuC,EAAOrH,OACjD+E,EAAU,YAAOb,EAAOzB,cAER,IAAlBoC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCyD,EAAmBvD,GACnBZ,EAAU,eAAID,EAAL,CAAazB,YAAYsC,KAClC/D,EAAY,8BA0KgB,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAsD,IAA7CtC,EAAOzB,YAAYqC,QAAQ9E,EAAMA,OAC1CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,yC,UCtTtB3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAsYAgM,GAlYM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EAEKmB,qBAAWuJ,IAFhB,mBAEhB8C,EAFgB,KAERC,EAFQ,OAGC3J,mBAAS,IAHV,mBAGVuO,GAHU,WAIjB1O,EAAU1B,KAJO,EAKqBwB,IAAMK,SAAS,MALpC,mBAKAwO,GALA,aAMqB7O,IAAMK,SAAS,MANpC,mBAMAyO,GANA,aAOW9O,IAAMK,SAAS,IAP1B,mBAOL4M,GAPK,aAQ2BjN,IAAMK,SAAS,IAR1C,mBAQG0O,GARH,aASa/O,IAAMK,SAAS,CAC/C0I,MAAM,EACNI,OAAO,EACPF,SAAS,EACTI,MAAM,EACN2F,QAAQ,IAdW,gCAgBmBhP,IAAMK,SAAS,KAhBlC,mBAgBD4O,GAhBC,aAiBqBjP,IAAMK,SAAS,IAjBpC,mBAiBA6O,GAjBA,aAkByBlP,IAAMK,SAAS,IAlBxC,mBAkBE8O,GAlBF,aAmBmBnP,IAAMK,SAAS,IAnBlC,mBAmBD+O,GAnBC,cAoBuBpP,IAAMK,SAAS,IApBtC,qBAoBCgP,IApBD,aAqBfzR,GAAaF,qBAAWC,GAAxBC,SACFE,GAAUC,cAEhBqI,qBAAU,WACDxI,GAASI,MAAMF,GAAQS,KAAK,cAGrC,IAAM0H,GAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,GAASM,SAIzB2I,GAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,0BAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,GAASI,KAAK0D,IAPV,SASWuE,GAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAeXiJ,GAAyB,SAACxO,GACXA,EAAM8E,OAAOuB,KAE9B6C,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,eAAwBhI,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOyG,aACvFzH,QAAQC,IAAI,CAAC/D,EAAM8E,OAAOuB,OAC1BN,GAAY,2BA+DhB,OAFJjC,QAAQC,IAAIkF,GAGJ,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,kGAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOvB,eAAgB7C,SAxChF,SAAC7E,GAClB+N,EAAkB/N,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAID,EAAL,CAAavB,eAAe1H,EAAM8E,OAAOC,SAClDgB,GAAY,4CAsCQ,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,WAAW2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAK5E,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOvB,gBAAwD,aAA1BuB,EAAOvB,eAC1C,kBAACvD,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAACC,YAAY,GAAIqN,WAAY,GAAI2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UAC/U,kBAAC5K,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wCAA7C,wBACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASC,OACvB/C,SAhDhB,SAAC7E,GACrBmM,EAAanM,EAAM8E,OAAOC,OAC1BmE,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBC,OAAO5H,EAAM8E,OAAOC,WACxEgB,GAAY,mCA+CwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,iCAAnB,oBAKR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,qCAA7C,8BACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASE,SACvBhD,SA9DR,SAAC7E,GAC7BiO,EAAqBjO,EAAM8E,OAAOC,OAClCmE,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBE,SAAS7H,EAAM8E,OAAOC,WAC1EgB,GAAY,yBA6DwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,4BAAnB,cAGR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,oCAA9B,gDACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,SACLqE,OAAQA,EAAOtB,SAASG,SACxBsC,aAAcnB,EAAOtB,SAASG,SAC9BjD,SA5ErB,SAAC7E,GAChB8N,EAAQ9N,EAAM8E,OAAOC,OACrBmE,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBG,SAAS9H,EAAM8E,OAAOC,WAC1EgB,GAAY,mCAiFY,sCAMhB,kBAAC5B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,gFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,SAAStB,MAAOkE,EAAOlB,eAAgBlD,SAlH1E,SAAC7E,GACvBgO,EAAkBhO,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAID,EAAL,CAAalB,eAAe/H,EAAM8E,OAAOC,SAClDgB,GAAY,4BAgHQ,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,gBAAgB2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAKjF,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOlB,gBAAwD,kBAA1BkB,EAAOlB,eAC1C,kBAAC5D,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAAEC,YAAY,GAAIqN,WAAY,GAAK2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UAE7U,kBAAC5K,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUC,KAC1BpD,SAAU2J,GACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUE,OACxBrD,SAvLhB,SAAC7E,GACzBmO,EAAiBnO,EAAM8E,OAAOC,OAC9BmE,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBE,OAAOlI,EAAM8E,OAAOC,WAC1EgB,GAAY,oBAsL4B,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAOZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUK,MAC1BxD,SAAU2J,GACVnI,KAAK,UAGbmE,MAAOlL,EAAE,6BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUM,QACxBzD,SAjNf,SAAC7E,GAC1BoO,EAAkBpO,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBM,QAAQtI,EAAM8E,OAAOC,WAC3EgB,GAAY,qBAgN4B,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUG,QAC1BtD,SAAU2J,GACVnI,KAAK,YAGbmE,MAAOlL,EAAE,mCAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,KACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUI,UACxBvD,SAzOb,SAAC7E,GAC5BqO,EAAoBrO,EAAM8E,OAAOC,OACjCmE,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBI,UAAUpI,EAAM8E,OAAOC,WAC7EgB,GAAY,4BAwO4B,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUO,KAC1B1D,SAAU2J,GACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUQ,OACxB3D,SAjQhB,SAAC7E,GACzBsO,EAAiBtO,EAAM8E,OAAOC,OAC9BmE,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBQ,OAAOxI,EAAM8E,OAAOC,WAC1EgB,GAAY,oBAgQ4B,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUS,MAC1B5D,SAAU2J,GACVnI,KAAK,UAGbmE,MAAOlL,EAAE,4BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUU,QACxB7D,SAzRd,SAAC7E,GAC3BuO,GAAmBvO,EAAM8E,OAAOC,OAChCmE,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBU,QAAQ1I,EAAM8E,OAAOC,WAC3EgB,GAAY,sBAwR4B,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,SAOhB,yCCtZ1BrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA8IAgM,GA1IM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EAEKmB,qBAAWuJ,IAFhB,mBAEhB8C,EAFgB,KAERC,EAFQ,KAGjB9J,EAAU1B,KAHO,EAIKwB,IAAMK,SAAS,MAJpB,gCAKmBL,IAAMK,SAAS,OALlC,gCAMqBL,IAAMK,SAAS,CACvDsJ,iBAAiB,EACjBC,iBAAiB,EACjBoF,QAAQ,KATW,mBAWfpR,GAXe,UAWFF,qBAAWC,GAAxBC,UACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,0BAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAeX0J,EAAkC,SAACjP,GAErCkJ,EAAU,eAAID,EAAL,eAAcjJ,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOyG,WACvDxF,EAAY,4CAehB,OADJjC,QAAQC,IAAIkF,GAEJ,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4BAAP,KAAqC,6BAArC,sOAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAON,SAAU9D,SAtB1E,SAAC7E,GAElBkJ,EAAU,eAAID,EAAL,CAAaN,SAAS3I,EAAM8E,OAAOC,SAC5CgB,EAAY,2CAoBQ,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,aAAa2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,6BAA+B,uCAK7G,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,uCAAP,KAAgD,6BAAhD,oEAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOL,cAAe/D,SA/BlE,SAAC7E,GAE/BkJ,EAAU,eAAID,EAAL,CAAaL,cAAc5I,EAAM8E,OAAOC,SACjDgB,EAAY,2BA6BQ,kBAAC0H,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC5D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,2BAMzE,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,wDAAP,KAAiE,6BAAjE,kJAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOJ,gBAChBhE,SAAUoK,EACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,kDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOH,gBAChBjE,SAAUoK,EACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,oDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOF,UAChBlE,SAAUoK,EACV5I,KAAK,cAGbmE,MAAOlL,EAAE,yBAAyB,+B,oBCpJpD5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CAEFvL,SAAU,GAEdqE,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAOI,EAAMsR,QAAQC,KAAKC,eAQlC,SAASC,GAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,WAAYjJ,EAAmB,EAAnBA,KAAM6C,EAAa,EAAbA,UAGxC,OAAQoG,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,CACHjJ,KAAMA,EAEN6C,UAAWA,IAInB,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,QACI,MAAO,gBAIJ,SAASqG,KACNlQ,cAANC,EADuC,IAEzCF,EAAU1B,KAF8B,EAGVwB,IAAMK,SAAS,GAHL,mBAGvC+P,EAHuC,KAG3BE,EAH2B,OAIhBtQ,IAAMK,SAAS,IAAIkQ,KAJH,mBAIvCC,EAJuC,KAI9BC,EAJ8B,KAKxCC,EArCC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAgCc,EAMlB1Q,IAAMK,SAAS,IANG,mBAMvC0J,EANuC,KAM/BC,EAN+B,OAOpBtM,qBAAWuJ,IAPS,mBAOvC0J,EAPuC,aAQN3Q,IAAMK,SAAS,IAAIsG,OARb,mBAWxCiK,GAXwC,UAWvB,SAACC,GACpB,OAAgB,KAATA,IAGLC,EAAgB,SAACD,GACnB,OAAOL,EAAQO,IAAIF,IAiDvB,OACI,kBAAC,IAAMG,SAAP,KACI,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACZ,yBAAK9T,UAAW6C,EAAQiK,MACpB,kBAAC,EAAD,MACA,kBAACiH,EAAA,EAAD,CAAShB,WAAYA,GAChBM,EAAM3E,KAAI,SAACT,EAAO+F,GACf,IAAMC,EAAY,GACZC,EAAa,GAOnB,OANIX,EAAeS,KACfE,EAAWC,SAAW,kBAAC9O,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAEtBmO,EAAcO,KACdC,EAAUG,WAAY,GAGtB,kBAACC,EAAA,EAAD,eAAMzF,IAAKX,GAAWgG,GAClB,kBAACK,EAAA,EAAcJ,EAAajG,QAK5C,6BACK8E,IAAeM,EAAMkB,OAClB,6BACI,kBAAClP,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAA/B,yCAGA,kBAAC7J,EAAA,EAAD,CAAQvF,QA5ChB,WAChB+S,EAAc,IA2CwCjT,UAAW6C,EAAQ+C,QAAjD,UAKA,6BACI,yBAAK5F,UAAW6C,EAAQyM,cAIhB,kBAACwD,GAAD,CAAgBC,WAAYA,EAAYjJ,KAAM4C,EAAO5C,KAAM6C,UAAWA,KAG9E,6BACI,kBAAClH,EAAA,EAAD,CAAQ+O,SAAyB,IAAfzB,EAAkB7S,QA7ErD,WACf+S,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,MA4EsCzU,UAAW6C,EAAQ+C,QAA5E,QAGC2N,EAAeR,IACZ,kBAACtN,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAhFzB,WACf,IAAKqT,EAAeR,GAGhB,MAAM,IAAI2B,MAAM,8CAGpBzB,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,GAAW,SAACuB,GACR,IAAMC,EAAa,IAAI1B,IAAIyB,EAAYjI,UAEvC,OADAkI,EAAWC,IAAI9B,GACR6B,MAsE6B5U,UAAW6C,EAAQ+C,QAJvB,QAUJ,kBAACH,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAAS6S,IAAeM,EAAMkB,OAAS,EAvE1D,WAGlBO,IAAMzN,KAAK,uCAAwCiM,GAClDyB,MAAK,SAAAC,GACJzN,QAAQC,IAAIwN,EAAIvN,UAxCF,SAACT,GAChBA,EAAEE,iBACF,IAAI0N,EAAazB,EACbM,EAAcV,KACd6B,EAAa,IAAI1B,IAAI0B,EAAWlI,WACrBuI,OAAOlC,GAGtBE,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,EAAWwB,IAkGyB5U,UAAW6C,EAAQ+C,QAEtBmN,IAAeM,EAAMkB,OAAS,EAAI,SAAW,cC9LtF,IAAMpT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,OACRM,WAAY,OACZlF,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,QACXC,SAAU,MACVC,aAAc,QAElBK,QAAS,CACLC,cAAe,MACfC,WAAY,WAmCL2O,OA/Bf,WACI,IAAMrS,EAAU1B,KADG,EAEC2B,cAAZC,EAFW,EAEXA,EAER,OAJmB,EAER7D,KAGP,yBAAKc,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,UAA/F,0CAOZ,yBAAKjB,UAAW6C,EAAQwD,QAASnB,MAAO,IAEpC,kBAAC,IAAD,CAAMM,GAAG,aAAY,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA2F3G,EAAE,cAClH,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,WAC5F,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,WAGhG,kBAAC,EAAD,QC1CN5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,OACRM,WAAY,OACZlF,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,QACXC,SAAU,MACVC,aAAc,QAElBK,QAAS,CACLC,cAAe,MACfC,WAAY,WAmCL4O,OA/Bf,WACI,IAAMtS,EAAU1B,KADA,EAEI2B,cAAZC,EAFQ,EAERA,EAER,OAJgB,EAEL7D,KAGP,yBAAKc,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,UAA/F,uBAOZ,yBAAKjB,UAAW6C,EAAQwD,QAASnB,MAAO,IAEpC,kBAAC,IAAD,CAAMM,GAAG,mBAAkB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA2F3G,EAAE,qBACxH,kBAAC,IAAD,CAAMyC,GAAG,eAAc,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,gBACnH,kBAAC0C,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,eAGhG,kBAAC,EAAD,QCvCN5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,MACRM,WAAY,OACZoJ,UAAU,OACVtO,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBK,QAAS,GAIT+O,KAAM,CACF9S,MAAO,MACPyF,OAAO,QACPrC,SAAU,OACVP,gBAAiB,UACjBU,OAAQ,OACRM,WAAW,QAGfc,EAAG,CACChF,QAAS,MACTsN,UAAW,MACX8F,eAAgB,YAChBzT,QAAQ,UAGZ0T,GAAI,CACApP,UAAW,OACXC,WAAW,QAEfoP,GAAI,CACArP,UAAW,OACXC,WAAY,OACZlF,MAAM,eAKd,SAASuU,GAAiBC,GAGtB,IAFA,IACMC,EADQC,OAAOC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KAChBC,EAAI,EAAGA,EAAIN,EAAKnB,OAAQyB,IAAK,CAClC,IAAMC,EAAOP,EAAKM,GAAGD,MAAM,KAC3B,GAAIE,EAAK,IAAMR,EAAY,OAAOQ,EAAK,GAE3C,OAAQ,EAyGGC,OAtGf,WACI,IAAMC,EAAUC,UAAUZ,GAAiB,WACrCa,EAAOC,OAAOd,GAAiB,UAAY,EACjDjO,QAAQC,IAAI6O,GACZ,IAEME,EAAK,4CAA8CJ,EAAS,UAFnDE,EAAO,GAGhBG,EAAK,4CAA8CL,EAAS,UAFpDE,EAAO,GAGfI,EAAU,CACZN,OAAQA,EACRE,KAAMA,GA6BVvB,IAAMzN,KAAK,gDAAiDoP,GAAS1B,MAAK,SAACrN,GACvE,IAAMgP,EAAOhP,EAASD,KAAK8M,OACrBoC,EAAYC,KAAKC,KAAKH,EAAO,GAC7BI,EAAOC,SAASC,eAAe,QAC/BC,EAAKF,SAASC,eAAe,MAC7BE,EAAKH,SAASC,eAAe,MACvB,GAARX,IACAY,EAAG/R,MAAQ,mFACTmR,GAAQM,IACVO,EAAGhS,MAAQ,kFAEf4R,EAAKK,UAAYd,EAAO,sBAASM,EAAY,wBAC9CS,OAAM,SAACvQ,GACNU,QAAQC,IAAIX,MAIhBiO,IAAMzN,KAAK,4CAA6CoP,GAAS1B,MAAK,SAACrN,GAMnE,IAJA,IAAMgP,EAAOhP,EAASD,KAAK8M,OACrB9M,EAAOC,EAASD,KAChB4P,EAASN,SAASC,eAAe,UACnCM,EAAO,sCACFtB,EAAI,EAAGA,EAAIU,EAAMV,IACtBsB,GAAQ,8DAC6B7P,EAAKuO,GAAGuB,UADrC,oCAE6B9P,EAAKuO,GAAGwB,UAFrC,cAKZH,EAAOI,UAAYH,EAAO,WAC3BF,OAAM,SAACvQ,GACNU,QAAQC,IAAIX,MAGhB,IAAMhE,EAAU1B,KAzEM,EA0EF2B,cAAZC,EA1Ec,EA0EdA,EACJ,OA3EkB,EA0EX7D,KAEH,yBAAKc,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,QAASyE,SAAU,OAAQgS,WAAY,SACjIvB,MAKjB,yBAAKnW,UAAW6C,EAAQwD,QAAShC,GAAG,WAGpC,6BACI,uBAAGA,GAAG,KAAKsT,KAAMnB,EAAI7U,MAAM,iCAAQuD,MAAO,CAAE+K,aAAc,SAA1D,kCACA,0BAAM5L,GAAG,QAAT,2CACA,uBAAGA,GAAG,KAAKsT,KAAMpB,EAAI5U,MAAM,iCAAQuD,MAAO,CAAEhD,YAAa,SAAzD,oCAEJ,kBAAC,IAAD,CAAMsD,GAAG,mBAAkB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAE0S,MAAO,OAAQzS,gBAAiB,UAAW1D,YAAa,SAAzJ,IAAsKsB,EAAE,kBACnM,kBAAC,EAAD,QCtJV5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,MACRM,WAAY,OACZoJ,UAAU,OACVtO,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBK,QAAS,GAIT+O,KAAM,CACF9S,MAAO,MACPyF,OAAO,QACPrC,SAAU,OACVP,gBAAiB,UACjBU,OAAQ,OACRM,WAAW,QAGfc,EAAG,CACChF,QAAS,MACTsN,UAAW,MACX8F,eAAgB,YAChBzT,QAAQ,UAGZ0T,GAAI,CACApP,UAAW,OACXC,WAAW,QAEfoP,GAAI,CACArP,UAAW,OACXC,WAAY,OACZlF,MAAM,eAKd,SAASuU,GAAiBC,GAGtB,IAFA,IACMC,EADQC,OAAOC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KAChBC,EAAI,EAAGA,EAAIN,EAAKnB,OAAQyB,IAAK,CAClC,IAAMC,EAAOP,EAAKM,GAAGD,MAAM,KAC3B,GAAIE,EAAK,IAAMR,EAAY,OAAOQ,EAAK,GAE3C,OAAQ,EAuFG4B,OApFf,WACI,IAAMhV,EAAU1B,KADG,EAEC2B,cAAZC,EAFW,EAEXA,EAEF+U,GAJa,EAER5Y,KAEGkX,UAAUZ,GAAiB,UACnCa,EAAOC,OAAOd,GAAiB,UAAY,EACjDjO,QAAQC,IAAI6O,GACZ,IAEME,EAAK,0CAA4CuB,EAAO,UAF/CzB,EAAO,GAGhBG,EAAK,0CAA4CsB,EAAO,UAFhDzB,EAAO,GAGfI,EAAU,CACZqB,KAAMA,EACNzB,KAAMA,GA4CN,OAzCJvB,IAAMzN,KAAK,iDAAkDoP,GAAS1B,MAAK,SAACrN,GACxE,IAAMgP,EAAOhP,EAASD,KAAK8M,OACrBoC,EAAYC,KAAKC,KAAKH,EAAO,GAC7BI,EAAOC,SAASC,eAAe,QAC/BC,EAAKF,SAASC,eAAe,MAC7BE,EAAKH,SAASC,eAAe,MACpBD,SAASC,eAAe,UAC3B,GAARX,IACAY,EAAG/R,MAAQ,mFACTmR,GAAQM,IACVO,EAAGhS,MAAQ,kFAEf4R,EAAKK,UAAYd,EAAO,sBAASM,EAAY,wBAC9CS,OAAM,SAACvQ,GACNU,QAAQC,IAAIX,MAIhBiO,IAAMzN,KAAK,kDAAmDoP,GAAS1B,MAAK,SAACrN,GAEzE,IAAMgP,EAAOhP,EAASD,KAAK8M,OACrB9M,EAAOC,EAASD,KAChB4P,EAASN,SAASC,eAAe,UACnCM,EAAO,sCACX,GAAIZ,EAAO,EACP,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAMV,IACtBsB,GAAQ,8DAC6B7P,EAAKuO,GAAGuB,UADrC,oCAE6B9P,EAAKuO,GAAGwB,UAFrC,mBAMZF,GAAQ,gFAIZD,EAAOI,UAAYH,EAAO,WAC3BF,OAAM,SAACvQ,GACNU,QAAQC,IAAIX,MAIR,yBAAK7G,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,QAASyE,SAAU,OAAQgS,WAAY,SAAtI,mBACkBI,EADlB,cAMZ,yBAAK9X,UAAW6C,EAAQwD,QAAShC,GAAG,WAGpC,6BACI,uBAAGA,GAAG,KAAKsT,KAAMnB,EAAI7U,MAAM,iCAAQuD,MAAO,CAAE+K,aAAc,SAA1D,kCACA,0BAAM5L,GAAG,QAAT,2CACA,uBAAGA,GAAG,KAAKsT,KAAMpB,EAAI5U,MAAM,iCAAQuD,MAAO,CAAEhD,YAAa,SAAzD,oCAEJ,kBAAC,IAAD,CAAMsD,GAAG,mBAAkB,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAE0S,MAAO,OAAQzS,gBAAiB,UAAW1D,YAAa,SAAzJ,IAAsKsB,EAAE,kBACnM,kBAAC,EAAD,Q,UCnIV5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,MACRM,WAAY,OACZoJ,UAAU,OACVtO,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBK,QAAS,CACLC,cAAe,OAGnB8O,KAAM,CACF9S,MAAO,MACPoD,SAAU,OACVkS,MAAM,QAGTG,KAAM,CACHzV,MAAO,MACPoD,SAAU,OACVkS,MAAO,SAGX3Q,EAAG,CACChF,QAAS,MACTsN,UAAW,MACX8F,eAAgB,YAChBzT,QAAQ,cAMhB,SAASkW,KACL,IAAIE,EAAUjB,SAASC,eAAe,SAASxO,MAE/CmN,OAAOC,SAAS+B,KAAO,qBAAuBK,EAiJnC9B,OA9If,WAEI,IAAMrT,EAAU1B,KAFM,EAGF2B,cAAZC,EAHc,EAGdA,EAHc,KAGX7D,KACiB8D,mBAAS,CACrCmT,OAAS,GACT8B,MAAQ,GACRC,OAAS,MAPa,gCASOlV,mBAAS,KAThB,mBA2BlB,OA3BkB,UAWtB8R,IAAMqD,IAAI,yCAAyCpD,MAAK,SAACrN,GACrD,IAAMgP,EAAOhP,EAASD,KAAK8M,OAG3BhN,QAAQC,IAAIE,EAASD,MAErB,IAAK,IAAIuO,EAAI,EAAGA,EAAGU,EAAMV,IACS,GAA1BtO,EAASD,KAAKuO,GAAGiC,QAEjBlB,SAASC,eAAetP,EAASD,KAAK,GAAG0O,QAAQjR,MAAQ,kEAGrEkS,OAAM,SAACvQ,GACHU,QAAQC,IAAIX,MAIR,yBAAK7G,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,UAA/F,sBAMZ,yBAAKjB,UAAW6C,EAAQwD,SACpB,kBAAC+R,GAAA,EAAD,CAAWpY,UAAW6C,EAAQwV,UAAWhU,GAAG,QAAQiB,QAAQ,WAAW2I,MAAM,uBAAuB/I,MAAO,CAAE5C,MAAO,MAAOiE,WAAY,OAAQrE,YAAa,OAAQ8D,aAAc,UAClL,kBAACP,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxJ,QAAS4X,IAAjG,IAAyG/U,EAAE,WAC3G,yBAAKmC,MAAO,CAAEiN,OAAQ,oBAAqB7P,MAAO,OAAQyF,OAAQ,QAASlC,OAAQ,SAC/E,kBAACb,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,UAAW4C,OAAQ,SACnE,kBAAC3C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEqK,UAAW,QAAStO,MAAO,UAA9F,sBAKR,yBAAKiE,MAAO,CAACjD,QAAQ,SACjB,yBAAKjC,UAAW6C,EAAQuS,MACpB,uBAAG/Q,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UADJ,OAEI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAFJ,OAGI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAHJ,OAII,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAJJ,OAKI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UALJ,+BAMI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UANJ,OAOI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAPJ,OAQI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UARJ,OASI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UATJ,OAUI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAVJ,OAU4E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAZJ,OAaI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAbJ,OAcI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAdJ,OAeI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAfJ,OAgBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAhBJ,+BAiBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAjBJ,OAkBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAlBJ,OAmBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAnBJ,OAoBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UApBJ,OAqBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UArBJ,OAqB4E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAvBJ,OAwBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAxBJ,OAyBI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAzBJ,OA0BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA1BJ,OA2BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA3BJ,+BA4BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA5BJ,OA6BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA7BJ,OA8BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA9BJ,OA+BI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA/BJ,OAgCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAhCJ,OAgC4E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG/B,MAAO,CAAEiB,WAAY,SAAWwR,KAAK,8BAArE,UAlCJ,OAmCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAnCJ,OAoCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UApCJ,OAqCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UArCJ,OAsCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAtCJ,+BAuCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAvCJ,OAwCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAxCJ,OAyCI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAzCJ,OAyC4E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG/B,MAAO,CAAEiB,WAAY,SAAWwR,KAAK,8BAArE,UA3CJ,OA4CI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA5CJ,OA6CI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA7CJ,OA8CI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA9CJ,OA+CI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA/CJ,+BAgDI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAhDJ,OAiDI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAjDJ,OAkDI,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAlDJ,OAkD4E,6BAlD5E,gBADJ,eAqDE,yBAAK3X,UAAW6C,EAAQkV,MAClB,uBAAG1T,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UADN,OAEM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAFN,OAGM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAHN,OAIM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAJN,OAKM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UALN,+BAMM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UANN,OAOM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAPN,OAQM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UARN,OASM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UATN,OAUM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAVN,OAU8E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAZN,OAaM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAbN,OAcM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAdN,OAeM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAfN,OAgBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAhBN,+BAiBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAjBN,OAkBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAlBN,OAmBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAnBN,OAoBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UApBN,OAqBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UArBN,OAqB8E,6BAExE,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG/B,MAAO,CAAEiB,WAAY,UAAYwR,KAAK,8BAAtE,UAvBN,OAwBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAxBN,OAyBM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UAzBN,OA0BM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA1BN,OA2BM,uBAAGtT,GAAG,SAAIrE,UAAW6C,EAAQoE,EAAG0Q,KAAK,8BAArC,UA3BN,yBArDF,WAoFJ,kBAAC,IAAD,CAAMnS,GAAG,aAAY,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAE0S,MAAO,QAASzS,gBAAiB,UAAW1D,YAAa,SAA1J,IAAuKsB,EAAE,WAElM,kBAAC,EAAD,QClMHuV,GAAmBzY,0BAEnB0Y,GAA6B,SAAAxY,GAAU,IAAD,EACnBiD,mBAAS,CACjC8G,KAAO,GACPC,YAAc,IAAIT,KAClBvB,OAAS,GACTiC,OAAS,GACTC,IAAM,GACNC,SAAW,CACPC,MAAQ,GACRC,QAAU,IAEdC,aAAe,GACfmO,gBAAkB,CACdC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,WAAW,EACXC,YAAa,GACbC,UAAW,GACXC,uBAAuB,EACvBC,WAAY,GACZC,eAAgB,IAAI3P,MAExB4P,uBAAuB,EACvBC,sBAAsB,EACtBC,yBAA0B,IAAI9P,KAC9B+P,wBAAwB,EACxBC,4BAA4B,EAC5BC,QAAS,GACTC,WAAW,EACXC,qBAAqB,EACrBC,gBAAgB,GAChBC,oBAAqB,CAAC,CAClBtQ,KAAM,IAAIC,KACVsQ,SAAU,GACVC,eAAgB,GAChBC,oBAAqB,GACrBC,gBAAkB,KAEtBC,uBAAuB,EACvBC,gBAAiB,GACjBC,wBAAwB,EACxBC,aAAa,EACbC,iBAAiB,GACjBC,iBAAkB,IAAI/Q,KACtBgR,iBAAkB,GAElBzP,aAAe,GACfC,cAAe,GAEfC,WAAY,GACZC,WAAa,GAEbC,YAAa,GACbC,WAAY,GAEZC,eAAiB,GACjBC,SAAW,CACPC,OAAS,GACTC,SAAW,GACXC,SAAW,IAEfC,eAAgB,GAChBC,UAAW,CACPC,MAAO,EACPC,OAAS,GACTC,SAAU,EACVC,UAAY,GACZC,OAAQ,EACRC,QAAU,GACVC,MAAO,EACPC,OAAS,GACTC,OAAQ,EACRC,QAAU,IAEdG,iBAAkB,EAClBC,iBAAkB,EAClBC,WAAY,IA7E+B,mBACxCE,EADwC,KAChCC,EADgC,KAkF/C,OACI,kBAAC2L,GAAiB1L,SAAlB,CAA2BpE,MAAO,CAACkE,EAAQC,IACtC5M,EAAM8M,WCzEb1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAO,GACP5D,QAAQ,GAEZ2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA4HAgM,GArHM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KACLuQ,EAAgB,CAClB,CAAC3F,KAAM/G,EAAE,iCAAmC,iBAAQyF,MAAM,aAC1D,CAACsB,KAAM/G,EAAE,yCAAyC,6BAAUyF,MAAM,sBAClE,CAACsB,KAAM/G,EAAE,qCAAsC,uBAASyF,MAAM,kBAC9D,CAACsB,KAAM/G,EAAE,wCAAyC,6BAAUyF,MAAM,qBAClE,CAACsB,KAAM/G,EAAE,+CAA+C,6BAAUyF,MAAM,6BACxE,CAACsB,KAAM/G,EAAE,yCAAyC,6BAAUyF,MAAM,uBAClE,CAACsB,KAAM/G,EAAE,2CAA2C,yCAAYyF,MAAM,wBACtE,CAACsB,KAAM/G,EAAE,iCAAiC,+CAAayF,MAAM,6BAC7D,CAACsB,KAAM/G,EAAE,8BAA8B,+CAAayF,MAAM,yBAC1D,CAACsB,KAAM/G,EAAE,oCAAoC,qDAAcyF,MAAM,iBACjE,CAACsB,KAAM/G,EAAE,0CAA0C,+CAAayF,MAAM,wBACtE,CAACsB,KAAM/G,EAAE,gCAAgC,mCAAWyF,MAAM,aAC1D,CAACsB,KAAM/G,EAAE,iCAAiC,uBAASyF,MAAM,aACzD,CAACsB,KAAM/G,EAAE,2CAA2C,uBAASyF,MAAM,wBACnE,CAACsB,KAAM/G,EAAE,yCAAyC,uBAASyF,MAAM,sBACjE,CAACsB,KAAM/G,EAAE,uCAAuC,uBAASyF,MAAM,oBAC/D,CAACsB,KAAM/G,EAAE,wDAAwD,mCAAWyF,MAAM,uCAClF,CAACsB,KAAM/G,EAAE,gCAAgC,iBAAQyF,MAAM,YACvD,CAACsB,KAAM/G,EAAE,8BAA+B,iBAAQyF,MAAM,UACtD,CAACsB,KAAM/G,EAAE,uCAAuC,6BAAUyF,MAAM,oBAChE,CAACsB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,YACzD,CAACsB,KAAM/G,EAAE,wCAAwC,iKAAgCyF,MAAM,sFAxBpE,EA6BKnI,qBAAWiY,IA7BhB,mBA6BhB5L,EA7BgB,KA6BRC,EA7BQ,KA8BjB9J,EAAU1B,KACRZ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDA+BjB,OAEI,6BACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAgC,6BAAvC,gNAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC9C,kBAACsM,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAC6C,OAAO,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACrGgB,EAAcf,KAAI,SAAClG,GAChB,IA5BUqH,EA4BJvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUzJ,MAAO,CAACqK,UAAU,IAAKX,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA/B1E2P,EA+B4GrH,EA/BjG,WACzC,IAAM6E,EAAeX,EAAOrC,aAAaiD,QAAQuC,EAAOrH,OAClD+E,EAAU,YAAOb,EAAOrC,eAER,IAAlBgD,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGnCV,EAAU,eAAID,EAAL,CAAarC,aAAakD,KACnC/D,EAAY,gCAqBe,kBAACwD,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAuD,IAA9CtC,EAAOrC,aAAaiD,QAAQ9E,EAAMA,OAC3CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,MAAQ5E,MAAO,CAACtD,QAAQ,6BCtHnGT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFvL,SAAU,GAEd6E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,SAEX8L,SAAU,CACNzK,MAAO,IACPyF,OAAQ,IACR7B,UAAW,SACXL,OAAO,GACP5D,QAAQ,IAEV+K,aAAc,CACVjH,SAAS,QA2PJkH,GAvPM,WAEjB,IAFuB,EA4BK5M,qBAAWiY,IA5BhB,mBA4BhB5L,EA5BgB,KA4BRC,EA5BQ,OA6BH7J,cAAZC,EA7Be,EA6BfA,EAAG7D,EA7BY,EA6BZA,KACL2D,EAAU1B,KA9BO,EAgCewB,IAAMK,SAAS,IAhC9B,mBAgCHuX,GAhCG,aAiCuB5X,IAAMK,SAAS,IAjCtC,mBAiCCwX,GAjCD,WAkCfja,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAeXoE,EAAmB,SAAC5E,GAAD,OAAW,WAChC,IAAM6E,EAAeX,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OACnD+E,EAAU,YAAOb,EAAOxC,SAASC,QAEjB,IAAlBkD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCkN,EAAe,CAACrQ,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBC,MAAMoD,MACpDZ,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBC,MAAMoD,OAC1D/D,EAAY,mBAIViE,EAAsB,SAACjF,GAAD,OAAW,WACnC,IAAM6E,EAAeX,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OACrD+E,EAAU,YAAOb,EAAOxC,SAASE,UAEjB,IAAlBiD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCmN,EAAmB,CAACtQ,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBE,QAAQmD,MAC1DZ,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBE,QAAQmD,OAC5D/D,EAAY,uBAGXiR,EAAS,SAACzT,GACf2F,EAAU,eAAID,EAAL,eAAc1F,EAAEuB,OAAOuB,KAAM9C,EAAEuB,OAAOC,SAC/CgB,EAAY,WAAW,CAACxC,EAAEuB,OAAOuB,QASjC,OADAvC,QAAQC,IAAIkF,GAER,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4CAEpD,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAEX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,iCAA9B,4FACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,OACLqE,OAAQA,EAAO5C,KACf+D,aAAcnB,EAAO5C,KACrBxB,SAAUmS,EACV3Q,KAAK,UAGb,kBAAC,KAAD,CAAyBgE,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIJ,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO3C,YACdzB,SAnCT,SAACe,GAChBsD,EAAU,eAAID,EAAL,CAAa3C,YAAYV,KAClCG,EAAY,kBAkCY2E,oBAAqB,CACjB,aAAc,mBAO9B,kBAACvG,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAACgG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IACpC,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SACLqE,OAAQA,EAAO3E,OACf8F,aAAcnB,EAAO3E,OACrBO,SAAUmS,EACV3Q,KAAK,cAOrB,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IAC5B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SACLqE,OAAQA,EAAO1C,OACf6D,aAAcnB,EAAO1C,OACrB1B,SAAUmS,EACV3Q,KAAK,YAGjB,kBAAC7B,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wBAC7C,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOzC,IACd3B,SAAUmS,EACV3Q,KAAK,OAEL,kBAACpF,EAAA,EAAD,CAAU8D,MAAM,QAAQzF,EAAE,yBAC1B,kBAAC2B,EAAA,EAAD,CAAU8D,MAAM,UAAUzF,EAAE,8BAK5C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4BAAP,uCAE7C,6BACA,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,+CACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GA/LzD,CAChB,CAAE3E,KAAM,wBAAetB,MAAO,YAC9B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,sEAAqBtB,MAAO,QACpC,CAAEsB,KAAM,iBAAatB,MAAO,UAC5B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,wBAAetB,MAAO,WAC9B,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,sBAAatB,MAAO,SAC5B,CAAEsB,KAAM,oBAAWtB,MAAO,OAC1B,CAAEsB,KAAM,gCAAkBtB,MAAO,aACjC,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,qBAAYtB,MAAO,QAC3B,CAAEsB,KAAM,iFAAwEtB,MAAO,qEACvF,CAAEsB,KAAM,2GAAgDtB,MAAO,iCAkLlCkG,KAAI,SAAClG,GACd,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASkN,EAAiB5E,IAC/E,kBAACwE,GAAA,EAAD,CAAchN,UAAW6C,EAAQmK,cAC7B,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAyD,IAAhDtC,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OAC7CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQjE,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,mDACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,EAAGvJ,MAAO,CAAChD,YAAa,KAvM5E,CACrB,CAAC4H,KAAK,0CAAkBtB,MAAM,WAC9B,CAACsB,KAAK,oCAAsBtB,MAAM,iBAClC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,sDAAwCtB,MAAM,mCACpD,CAACsB,KAAK,iCAAmBtB,MAAM,gBAkMGkG,KAAI,SAAClG,GACnB,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASuN,EAAoBjF,IAClF,kBAACwE,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAA2D,IAAlDtC,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OAC/CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,kBCjQ3E3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEX2D,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhB4G,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,aAgPV8H,GA1OM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EAEKmB,qBAAWiY,IAFhB,mBAEhB5L,EAFgB,KAERC,EAFQ,KAGjB9J,EAAU1B,KACRZ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAoBXyR,EAAS,SAACzT,GACZ2F,EAAU,eAAID,EAAL,CAAa8L,gBAAgB,eAAI9L,EAAO8L,gBAAZ,eAA8BxR,EAAEuB,OAAOuB,KAAM9C,EAAEuB,OAAOC,WACnE,YAAnB,CAACxB,EAAEuB,OAAOuB,OACXN,EAAYzG,EAAE,oEAEM,WAAnB,CAACiE,EAAEuB,OAAOuB,OACXN,EAAYzG,EAAE,8DAEM,aAAnB,CAACiE,EAAEuB,OAAOuB,OACXN,EAAYzG,EAAE,4DAEM,cAAnB,CAACiE,EAAEuB,OAAOuB,OACXN,EAAYzG,EAAE,+CAIb2X,EAAe,SAACjX,GACrBkJ,EAAU,eAAID,EAAL,CAAa8L,gBAAe,eAAM9L,EAAO8L,gBAAb,eAA+B/U,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOC,WACzE,aAAvB,CAAC/E,EAAM8E,OAAOuB,OACdN,EAAYzG,EAAE,4CACS,yBAAvB,CAACU,EAAM8E,OAAOuB,OACdN,EAAYzG,EAAE,8CACS,cAAvB,CAACU,EAAM8E,OAAOuB,OACdN,EAAYzG,EAAE,oCAQtB,OACI,yBAAK/C,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,wCAAwC,6BAA/C,sFAE7C,kBAAC6E,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,mEAAP,uGAEJ,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEiB,WAAY,GAAI1E,YAAa,KAC9D,kBAACwG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAAEqK,WAAY,KACrD,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,YAAYpF,EAAE,yCAAlC,wBACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,WACHgE,KAAK,SACLqE,OAAQA,EAAO8L,gBAAgBC,SAC/B5K,aAAcnB,EAAO8L,gBAAgBC,SACrCnQ,SAAUmS,EACV3Q,KAAK,eAKjB,kBAAClC,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,6DAAP,iGAEJ,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEiB,WAAY,GAAI1E,YAAa,KAC9D,kBAACwG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAAEqK,WAAY,KACrD,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,WAAWpF,EAAE,yCAAjC,wBACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,UACHgE,KAAK,SACLqE,OAAQA,EAAO8L,gBAAgBE,QAC/B7K,aAAcnB,EAAO8L,gBAAgBE,QACrCpQ,SAAUmS,EACV3Q,KAAK,cAKjB,kBAAClC,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,2DAAP,yEAEJ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAM8F,WAAS,EAACxI,MAAO,CAAEiB,WAAY,GAAI1E,YAAa,KAClD,kBAACwG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAAEqK,WAAY,KACrD,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,aAAapF,EAAE,yCAAnC,kBACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,YACHgE,KAAK,SACLqE,OAAQA,EAAO8L,gBAAgBG,UAC/B9K,aAAcnB,EAAO8L,gBAAgBG,UACrCrQ,SAAUmS,EACV3Q,KAAK,iBAMjB,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACoJ,GAAA,EAAD,CAAkBhM,MAAO,CAAEqK,WAAY,IACnC4B,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAO8L,gBAAgBI,UAChCtQ,SApGY,SAAC7E,GACrCkJ,EAAU,eAAID,EAAL,CAAa8L,gBAAgB,eAAI9L,EAAO8L,gBAAZ,eAA8B/U,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOyG,aACnGxF,EAAY,qBAmGYM,KAAK,cAGbmE,MAAOlL,EAAE,iCAAiC,2CAIlD,kBAAC6E,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,yDAAP,iGAEJ,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEiB,WAAY,GAAI1E,YAAa,KAC9D,kBAACwG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAAEqK,WAAY,KACrD,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,eAAepF,EAAE,sDAArC,kBACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,cACHgE,KAAK,SACLqE,OAAQA,EAAO8L,gBAAgBK,YAC/BhL,aAAcnB,EAAO8L,gBAAgBK,YACrCvQ,SAAUmS,EACV3Q,KAAK,kBAKjB,kBAAClC,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,2CAAP,2FAEJ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAACgB,UAAW,OAAQhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KACxF,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,YAAYtB,MAAOkE,EAAO8L,gBAAgBM,UAAWxQ,SAAUoS,GACpG,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,6BAA6B,yBAC1F,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,SAAS2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,8BAA8B,mBAC5F,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,6BAA6B,qBAKtG,kBAAC6E,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,4BAAK/E,EAAE,6CAAP,mEAEJ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAACgB,UAAW,OAAQhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KACxF,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,wBAAwBtB,MAAOkE,EAAO8L,gBAAgBO,sBAAuBzQ,SAAUoS,GAC5H,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAsB,yBAChF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAuB,sBAK9F,6BACsD,QAAjD2J,EAAO8L,gBAAgBO,sBACpB,6BACA,kBAAC1H,GAAA,EAAD,CAAWnM,MAAO,CAACqK,WAAY,GAAIpJ,WAAW,GAAIT,SAAS,KAAK,4BAAQR,MAAO,CAACoM,WAAY,IAAKvO,EAAE,qDAAnC,IAAyF,6BAAzF,+NAChE,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAACiB,WAAY,GAAIqJ,aAAc,GAAID,WAAY,KAC1F,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,kCAA9B,8BACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,OACLyB,KAAK,aACL4C,OAAQA,EAAO8L,gBAAgBQ,WAC/BnL,aAAcnB,EAAO8L,gBAAgBQ,WACrC1Q,SAAUoS,OAMV,qCAGJ,kBAAC9S,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAACqK,WAAY,KAC/C,kBAAC,KAAD,CAAyBzB,MAAOC,MACxB,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,eAAenG,MAAI,EAACC,GAAI,EAAG9H,UAAW6C,EAAQoD,aAElE,kBAAC,KAAD,CACI2H,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,sCAAsC,uEAC/CmL,OAAO,aACP1F,MAAOkE,EAAO8L,gBAAgBS,eAC9B3Q,SA1JT,SAACe,GAChBsD,EAAU,eAAID,EAAL,CAAa8L,gBAAe,eAAM9L,EAAO8L,gBAAb,CAA8BS,eAAe5P,OAClFG,EAAYzG,EAAE,wCAyJUoL,oBAAqB,CACjB,aAAc,uBC5P5ChN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEX2D,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhB4G,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,aAkNV8H,GA9MM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EAEKmB,qBAAWiY,IAFhB,mBAEhB5L,EAFgB,KAERC,EAFQ,KAGjB9J,EAAU1B,KACRZ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIvB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACZ+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPR,SASSuE,EAAUvB,KACjC,kBACA2B,GAXc,yDAAH,sDAeb0R,EAAe,SAACjX,GAClBkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOC,SAC7B,yBAAvB,CAAC/E,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,8CAEU,wBAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,6CAEU,0BAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,+CAEU,8BAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,mDAEU,uBAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,6CAoBtB,OACI,yBAAK/C,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,wBAAIlB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,6CAA6C,6BAA7E,8GAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,wBAAwBtB,MAAOkE,EAAOwM,sBAAuB5Q,SAAUoS,GAC5G,kBAACxJ,GAAA,EAAD,CAAkB1I,OAAO,EAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,OAAO,EAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,wBAAIlB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,4CAA4C,6BAA5E,2HAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,uBAAuBtB,MAAOkE,EAAOyM,qBAAsB7Q,SAAUoS,GAC1G,kBAACxJ,GAAA,EAAD,CAAkB1I,OAAO,EAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,OAAO,EAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,6BACqC,SAAhC2J,EAAOyM,qBACJ,6BACI,kBAAC9H,GAAA,EAAD,CAAWnM,MAAO,CAAEqK,WAAY,GAAIpJ,WAAY,GAAIT,SAAU,KAAM,4BAAQR,MAAO,CAAEoM,WAAY,IAAMvO,EAAE,wCAArC,qIACpE,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEqK,WAAY,GAAIrN,YAAa,KACrD,kBAAC,KAAD,CAAyB4L,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,eAAenG,MAAI,EAACC,GAAI,EAAG9H,UAAW6C,EAAQoD,aAElE,kBAAC,KAAD,CACI2H,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,sCAAwC,uEACjDmL,OAAO,aACP1F,MAAOkE,EAAO0M,yBACd9Q,SA3DrB,SAACe,GAChBsD,EAAU,eAAKD,EAAN,CAAc0M,yBAA0B/P,KACjDG,EAAYzG,EAAE,wCA0DsBoL,oBAAqB,CACjB,aAAc,qBAUlC,qCAIZ,kBAACvG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,wBAAIlB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,8CAA8C,6BAA9E,4IAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,yBAAyBtB,MAAOkE,EAAO2M,uBAAwB/Q,SAAUoS,GAC9G,kBAACxJ,GAAA,EAAD,CAAkB1I,OAAO,EAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,OAAO,EAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,wBAAIlB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,kDAAkD,6BAAlF,kJAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,6BAA6BtB,MAAOkE,EAAO4M,2BAA4BhR,SAAUoS,GACtH,kBAACxJ,GAAA,EAAD,CAAkB1I,OAAO,EAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,OAAO,EAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAK1D,SAAtC2J,EAAO4M,2BACJ,kBAAC1R,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,GAErB,kBAACkG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG4F,WAAS,EAACxI,MAAO,CAAEiB,WAAY,GAAI1E,YAAa,IAC9D,kBAACwG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,GAAGkF,MAAO,CAAEqK,WAAY,KACrD,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,aAAapF,EAAE,+BAAnC,YACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,YACHgE,KAAK,SACLqE,OAAQA,EAAO6M,QACf1L,aAAcnB,EAAO6M,QACrBjR,SA3GjB,SAACtB,GACZ2F,EAAU,eAAKD,EAAO8L,gBAAb,eAA+BxR,EAAEuB,OAAOuB,KAAO9C,EAAEuB,OAAOC,SACjEgB,EAAYzG,EAAE,iCA0Gc+G,KAAK,cAMjB,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACoJ,GAAA,EAAD,CAAkBhM,MAAO,CAAEqK,WAAY,IACnC4B,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAO8M,UAChBlR,SAlHI,SAAC7E,GACrCkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOyG,WACzDxF,EAAYzG,EAAE,mCAiHkB+G,KAAK,cAGbmE,MAAOlL,EAAE,iCAAmC,sCAKpD,oCAGR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,wBAAIlB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,2CAA2C,6BAA3E,oEAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,sBAAsBtB,MAAOkE,EAAO+M,oBAAqBnR,SAAUoS,GACxG,kBAACxJ,GAAA,EAAD,CAAkB1I,OAAO,EAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,OAAO,EAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,+BCjO3G5B,I,OAAYC,aAAW,SAACC,GAAD,gBACzByL,KAAM,CACFxK,MAAO,QAEXsD,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/BuE,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhB4G,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,IAhBY,uBAkBjB,CACJR,YAAaJ,EAAMK,QAAQ,KAnBN,6BAqBX,CACV6N,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,KAvBP,sBAyBlB,CACHO,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,UA7BI,MAyRd8H,GAzPM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KACL2D,EAAU1B,KAFO,EAGKd,qBAAWiY,IAHhB,mBAGhB5L,EAHgB,KAGRC,EAHQ,OAIK3J,mBAAS,CAAC,CAClCqG,KAAM,IAAIC,KACVsQ,SAAU,GACVC,eAAgB,KAChBC,oBAAqB,KACrBC,gBAAiB,QATE,mBAIhBY,EAJgB,KAIRC,EAJQ,KAWfra,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAwFjB,OACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAS,wBAAIlB,MAAO,CAAEQ,SAAU,GAAI4L,WAAY,MAAQvO,EAAE,uCAAuC,6BAAxF,kSAE9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,WAAY,EAAGoJ,WAAY,KACzF,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,kBAAkBtB,MAAOkE,EAAOgN,gBAAiBpR,SAdzF,SAAC7E,GAClBkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOC,SACzDgB,EAAYzG,EAAE,0CAaM,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,+BAA+B2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,mCAAqC,6DACzH,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,8BAA8B2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wCAA0C,gEAIzI,6BACgC,gCAA3B2J,EAAOgN,gBACJ,6BACK,kBAACrI,GAAA,EAAD,CAAWnM,MAAO,CAAEqK,WAAY,GAAIpJ,WAAY,GAAIT,SAAU,KAAM,4BAAQR,MAAO,CAAEoM,WAAY,IAAMvO,EAAE,wCAArC,uMACrF,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEC,gBAAiB,YAAaoB,WAAY,GAAIrE,YAAa,GAAIoE,cAAe,GAAI2J,aAAc,KAEvHvD,EAAOiN,oBAAoBjL,KAAI,SAACmM,EAAOC,GACpC,OACI,yBAAKlM,IAAG,UAAKiM,EAAL,YAAcC,IAClB,wBAAI5V,MAAO,CAAE6C,OAAQ,EAAGgT,YAAa,EAAG9Z,MAAO,OAAQkE,gBAAiB,UACxE,kBAACkM,GAAA,EAAD,CAAWnM,MAAO,CAAEqK,WAAY,GAAIpJ,WAAY,GAAIT,SAAU,GAAIzE,MAAM,UAAW,4BAAQiE,MAAO,CAAEoM,WAAY,IAAM,YAAYwJ,EAA/C,MACnF,wBAAI5V,MAAO,CAAE6C,OAAQ,EAAGgT,YAAa,EAAG9Z,MAAO,OAAQkE,gBAAiB,OAAQoK,WAAY,KAC5F,kBAAC3H,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,KACI,kBAAC,KAAD,CAAyBkG,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIJ,WAAS,EACT/H,OAAO,SACPiE,KAAK,OACLmE,MAAOlL,EAAE,oCACTmL,OAAO,aACP1F,MAAOqS,EAAMxR,KACbf,SAAU,SAAAtB,GAAC,OAzG3D,SAA0BgP,EAAG3M,GACzB,IAAM2R,EAAO,YAAOL,GACpBK,EAAQhF,GAAG3M,KAAOA,EAClBuR,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAC3CxR,EAAYzG,EAAE,qCAoG6CkY,CAAiBH,EAAK9T,IACrCmH,oBAAqB,CACjB,aAAc,mBAO9B,kBAACvG,EAAA,EAAD,KACI,gCAAQ,wBAAI1C,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,gCAAhC,qBAEZ,kBAAC6E,EAAA,EAAD,CAAM1C,MAAO,CAAEgB,UAAW,OAAQC,WAAY,EAAGoJ,WAAY,KACzD,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,WAAWtB,MAAOqS,EAAMjB,SAAUtR,SAAU,SAAAtB,GAAC,OAhHlI,SAA2BgP,EAAGvS,GAC1B,IAAMuX,EAAO,YAAOL,GACpBK,EAAQhF,GAAG4D,SAAWnW,EAAM8E,OAAOC,MACnCoS,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAC3CxR,EAAYzG,EAAE,iCA2GoHmY,CAAkBJ,EAAK9T,KAC7G,kBAACkK,GAAA,EAAD,CAAkB1I,MAAM,mBAAmB2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uCAAyC,+BACjH,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,oBAAoB2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wCAA0C,mCAK/H,kBAAC6E,EAAA,EAAD,KACI,gCAAQ,wBAAI1C,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,2CAAhC,sCAEZ,kBAAC6E,EAAA,EAAD,CAAM1C,MAAO,CAAEgB,UAAW,OAAQC,WAAY,EAAGoJ,WAAY,KACzD,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,iBAAiBtB,MAAOqS,EAAMhB,eAAgBvR,SAAU,SAAAtB,GAAC,OArH9I,SAAoCgP,EAAGvS,GACnC,IAAMuX,EAAO,YAAOL,GACpBK,EAAQhF,GAAG6D,eAAiBpW,EAAM8E,OAAOC,MACzCoS,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAC3CxR,EAAYzG,EAAE,4CAgHgIoY,CAA2BL,EAAK9T,KAClI,kBAACkK,GAAA,EAAD,CAAkB1I,MAAM,cAAc2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,mCAAqC,+BACxG,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,WAAW2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,gCAAkC,qCAMtH,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,KACI,gCAAQ,wBAAI1C,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,iDAAhC,kDAEZ,kBAAC6E,EAAA,EAAD,CAAM1C,MAAO,CAAEgB,UAAW,OAAQC,WAAY,EAAGoJ,WAAY,KACzD,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,sBAAsBtB,MAAOqS,EAAMf,oBAAqBxR,SAAU,SAAAtB,GAAC,OArHpJ,SAAyCgP,EAAGvS,GACxC,IAAMuX,EAAO,YAAOL,GACpBK,EAAQhF,GAAG8D,oBAAsBrW,EAAM8E,OAAOC,MAC9CoS,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAC3CxR,EAAYzG,EAAE,kDAgHsIqY,CAAgCN,EAAK9T,KACjJ,kBAACkK,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,+BACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,mCAOjG,kBAACkF,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,mBAAmBpF,EAAE,qCAAzC,kBACA,kBAACqF,EAAA,EAAD,CACIC,KAAK,OACLyB,KAAK,kBACLzF,GAAIwW,EAAMd,gBACV/Z,UAAU,MACVwI,MAAOqS,EAAMd,gBACbzR,SAAU,SAAAtB,GAAC,OA7KnD,SAAqCgP,EAAGvS,GACpC,IAAMuX,EAAO,YAAOL,GACpBK,EAAQhF,GAAG+D,gBAAkBtW,EAAM8E,OAAOC,MAC1CoS,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAC3CxR,EAAYzG,EAAE,sCAwKqCsY,CAA4BP,EAAK9T,QAK5D,kBAACvB,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAAS,kBAxHzC,SAAsB8V,GAClB,IAAMgF,EAAO,YAAOL,GACpBK,EAAQxN,OAAOwI,EAAG,GAClB4E,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAoHAM,CAAaR,IAC5B9a,UAAW6C,EAAQ+C,QAJvB,eAahB,kBAACH,EAAA,EAAD,CACAP,MAAO,CAACQ,SAAU,GAAIP,gBAAiB,YAAalE,MAAM,SACtDqE,QAAQ,YACRpF,QAAS,kBAnJzB,WACI,IAAM8a,EAAO,YAAOL,GACpBK,EAAQ9Z,KAAK,CACTmI,KAAM,IAAIC,KACdsQ,SAAU,GACVC,eAAgB,KAChBC,oBAAqB,KACrBC,gBAAiB,OAEjBa,EAAUI,GACVrO,EAAU,eAAID,EAAL,CAAaiN,oBAAqBqB,KAyIhBO,IACfvb,UAAW6C,EAAQ+C,QAJvB,OAWY,wCC/QtBzE,GAAYC,aAAW,SAACC,GAAD,gBACzByL,KAAM,CACFxK,MAAO,QAEXsD,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/BuE,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhB4G,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,IAhBY,uBAkBjB,CACJR,YAAaJ,EAAMK,QAAQ,KAnBN,6BAqBX,CACV6N,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,KAvBP,sBAyBlB,CACHO,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,UA7BI,KAgRd8H,GAhPM,WAEjB,IAFuB,EAmBHnK,cAAZC,EAnBe,EAmBfA,EAAG7D,EAnBY,EAmBZA,KACL2D,EAAU1B,KApBO,EAqBKd,qBAAWiY,IArBhB,mBAqBhB5L,EArBgB,KAqBRC,EArBQ,KAsBfpM,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAeX0R,EAAe,SAACjX,GAClBkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOC,SAC7B,yBAAvB,CAAC/E,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,8CAEU,0BAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,+CAEU,eAAvB,CAACU,EAAM8E,OAAOuB,OACfN,EAAYzG,EAAE,qCAIhByY,EAAsB,SAAChT,GAAD,OAAW,WACnC,IAAM6E,EAAeX,EAAOuN,gBAAgB3M,QAAQ9E,EAAMA,OACpD+E,EAAU,YAAOb,EAAOuN,kBAER,IAAlB5M,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAKD,EAAN,CAAcuN,gBAAiB1M,KACxC/D,EAAYzG,EAAE,gDAGZ0Y,EAAsC,SAACjT,GAAD,OAAW,WACnD,IAAM6E,EAAeX,EAAO0N,iBAAiB9M,QAAQ9E,EAAMA,OACrD+E,EAAU,YAAOb,EAAO0N,mBAER,IAAlB/M,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAKD,EAAN,CAAc0N,iBAAkB7M,KACzC/D,EAAYzG,EAAE,sCAclB,OACI,yBAAK/C,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAS,wBAAIlB,MAAO,CAAEQ,SAAU,GAAI4L,WAAY,MAAQvO,EAAE,6CAA6C,6BAA9F,kJAE9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,wBAAwBtB,MAAOkE,EAAOsN,sBAAuB1R,SAAUoS,GAC5G,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAK/D,SAAjC2J,EAAOsN,sBACJ,6BACI,kBAACzL,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAvHhH,CACZ,CAAE3E,KAAM,mCAAqBtB,MAAO,gBACpC,CAAEsB,KAAM,wCAA0BtB,MAAO,qBACzC,CAAEsB,KAAM,+BAAiBtB,MAAO,YAChC,CAAEsB,KAAM,yDAAsCtB,MAAO,gCACrD,CAAEsB,KAAM,uGAAiDtB,MAAO,qCAChE,CAAEsB,KAAM,uCAAoBtB,MAAO,cACnC,CAAEsB,KAAM,8BAAgBtB,MAAO,aAiHFkG,KAAI,SAAClG,GACV,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASsb,EAAoBhT,IAClF,kBAACwE,GAAA,EAAD,CAAchN,UAAW6C,EAAQmK,cAC7B,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAA0D,IAAjDtC,EAAOuN,gBAAgB3M,QAAQ9E,EAAMA,OAC9CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAS7D,oCAER,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAS,wBAAIlB,MAAO,CAAEQ,SAAU,GAAI4L,WAAY,MAAQvO,EAAE,8CAA8C,6BAA/F,gIAE9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,yBAAyBtB,MAAOkE,EAAOwN,uBAAwB5R,SAAUoS,GAC9G,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAIjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAS,wBAAIlB,MAAO,CAAEQ,SAAU,GAAI4L,WAAY,MAAQvO,EAAE,mCAAmC,6BAApF,0HAE9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,SAAUhE,YAAa,GAAIiE,YAAa,GAAIoJ,WAAY,KAC3F,kBAACtH,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,cAActB,MAAOkE,EAAOyN,YAAa7R,SAAUoS,GACxF,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKzE,SAAvB2J,EAAOyN,YACJ,6BACI,kBAAC5L,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAlKvG,CACrB,CAAE3E,KAAM,8EAAwBtB,MAAO,YACvC,CAAEsB,KAAM,yHAA+CtB,MAAO,8BAC9D,CAAEsB,KAAM,yGAAmDtB,MAAO,sCAClE,CAAEsB,KAAM,8BAAgBtB,MAAO,aA+JOkG,KAAI,SAAClG,GACnB,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASub,EAAoCjT,IAClG,kBAACwE,GAAA,EAAD,CAAchN,UAAW6C,EAAQmK,cAC7B,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAA2D,IAAlDtC,EAAO0N,iBAAiB9M,QAAQ9E,EAAMA,OAC/CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAS7D,oCAGR,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAP,IAAwC,6BAAxC,6FAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,CAAyBgG,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIlG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO2N,iBACd/R,SA5HT,SAACe,GAEhBsD,EAAU,eAAKD,EAAN,CAAc2N,iBAAkBhR,KACzCG,EAAY,uBA0HY2E,oBAAqB,CACjB,aAAc,iBAGtB,kBAAC,KAAD,CACIrG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,cACH4J,MAAM,cACNzF,MAAOkE,EAAO9B,gBACdtC,SAnIT,SAACiI,GAEhB5D,EAAU,eAAKD,EAAN,CAAc9B,gBAAiB2F,KACxC/G,EAAY,uBAiIY2E,oBAAqB,CACjB,aAAc,uBC9Q5ChN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA0SAgM,GAvSM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KAEL+L,EAAc,CAChB,CAACnB,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,wBAAyB,WAAOyF,MAAM,QAC/C,CAACsB,KAAM/G,EAAE,yBAA0B,WAAOyF,MAAM,SAChD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,wBAAyB,iBAAQyF,MAAM,QAChD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,2BAA4B,WAAOyF,MAAM,WAClD,CAACsB,KAAM/G,EAAE,8BAA+B,iBAAQyF,MAAM,cACtD,CAACsB,KAAM/G,EAAE,yBAA0B,kBAASyF,MAAM,SAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,YACpD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,kCAAmC,uBAASyF,MAAM,qBAC3D,CAACsB,KAAM/G,EAAE,0BAA2B,uBAASyF,MAAM,WAGjDsC,EAAgB,CAClB,CAAChB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,gCAAiC,6BAAUyF,MAAM,gBAC1D,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,oCAAqC,6BAAUyF,MAAM,oBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,6BAAUyF,MAAM,gBAGpDgI,EAAgB,CACrB,CAAC1G,KAAM/G,EAAE,mCAAoC,iDAAeyF,MAAM,mBAClE,CAACsB,KAAM/G,EAAE,qCAAsC,6BAAUyF,MAAM,qBAC/D,CAACsB,KAAM/G,EAAE,oCAAqC,uBAASyF,MAAM,oBAC7D,CAACsB,KAAM/G,EAAE,gCAAiC,iBAAQyF,MAAM,gBACxD,CAACsB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,6BAA8B,6BAAUyF,MAAM,aACvD,CAACsB,KAAM/G,EAAE,mDAAoD,uBAASyF,MAAM,mCAC5E,CAACsB,KAAM/G,EAAE,kCAAmC,yCAAYyF,MAAM,kBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,mCAAWyF,MAAM,eAC1D,CAACsB,KAAM/G,EAAE,4BAA6B,uBAASyF,MAAM,YACrD,CAACsB,KAAM/G,EAAE,4CAA6C,mCAAWyF,MAAM,wCACvE,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,aA/CjC,EAkDKnI,qBAAWiY,IAlDhB,mBAkDhB5L,EAlDgB,KAkDRC,EAlDQ,KAmDjB9J,EAAU1B,KAnDO,EAoDawB,IAAMK,SAAS,IApD5B,mBAoDJyN,GApDI,aAqDqB9N,IAAMK,SAAS,IArDpC,mBAqDA0N,GArDA,aAsDe/N,IAAMK,SAAS,IAtD9B,mBAsDH2N,GAtDG,aAuDuBhO,IAAMK,SAAS,IAvDtC,mBAuDC4N,GAvDD,aAwDcjO,IAAMK,SAAS,IAxD7B,mBAwDJ6N,GAxDI,aAyDuBlO,IAAMK,SAAS,IAzDtC,mBAyDC8N,GAzDD,WA0DfvQ,EAAaF,qBAAWC,GAAxBC,SACFE,EAAUC,cAEhBqI,qBAAU,WACDxI,EAASI,MAAMF,EAAQS,KAAK,cAGrC,IAAM0H,EAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACP,eAAgBvI,EAASM,SAIzB2I,EAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,EAASI,KAAK0D,IAPV,SASWuE,EAAUvB,KACjC,kBACA2B,GAXY,yDAAH,sDAiFjB,OACI,yBAAKhJ,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,yCAAP,IAAiD,6BAAjD,sFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO7B,aAAcvC,SAtC1E,SAAC7E,GAClBgN,EAAchN,EAAM8E,OAAOC,OAC3BmE,EAAU,eAAID,EAAL,CAAa7B,aAAapH,EAAM8E,OAAOC,SAChDgB,EAAYzG,EAAE,4CAoCE,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAK/D,kBAACrG,EAAA,EAAD,KACA,6BAC6B,QAAxB8E,EAAO7B,aACJ,6BACA,kBAACwG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDAC7D,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG3D,EAAc4D,KAAI,SAAClG,GAChB,IAnEYqH,EAmENvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAtEjD2P,EAsEqFrH,EAtE1E,WAC3C,IAAM6E,EAAeX,EAAO5B,cAAcwC,QAAQuC,EAAOrH,OACnD+E,EAAU,YAAOb,EAAO5B,gBAER,IAAlBuC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCqD,EAAkBnD,GAClBZ,EAAU,eAAID,EAAL,CAAa5B,cAAcyC,KACpC/D,EAAYzG,EAAE,kDA2Dc,kBAACiK,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAwD,IAA/CtC,EAAO5B,cAAcwC,QAAQ9E,EAAMA,OAC5CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,mCAAP,KAA4C,6BAA5C,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO3B,WAAYzC,SA/D9D,SAAC7E,GAC5BkN,EAAelN,EAAM8E,OAAOC,OAC5BmE,EAAU,eAAID,EAAL,CAAa3B,WAAWtH,EAAM8E,OAAOC,SAC9CgB,EAAYzG,EAAE,sCA6DE,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAO3B,WACJ,kBAACnD,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACzB,kBAACuJ,GAAA,EAAD,CAAW3D,WAAS,EAACxI,MAAO,CAACqK,WAAW,GAAI+B,WAAW,EAAG5L,SAAS,KAAK,gCAAS3C,EAAE,8CAAX,IAA0D,6BAA1D,wQACxE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG+B,EAAc9B,KAAI,SAAClG,GAChB,IA3FaqH,EA2FPvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA9FhD2P,EA8FqFrH,EA9F1E,WAC5C,IAAM6E,EAAeX,EAAO1B,WAAWsC,QAAQuC,EAAOrH,OAChD+E,EAAU,YAAOb,EAAO1B,aAER,IAAlBqC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCuD,EAAmBrD,GACnBZ,EAAU,eAAID,EAAL,CAAa1B,WAAWuC,KACjC/D,EAAYzG,EAAE,kDAmFc,kBAACiK,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAqD,IAA5CtC,EAAO1B,WAAWsC,QAAQ9E,EAAMA,OACzCyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,8BAAP,KAAuC,6BAAvC,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOxB,WAAY5C,SAvJ7D,SAAC7E,GAC7BoN,EAAepN,EAAM8E,OAAOC,OAC5BmE,EAAU,eAAID,EAAL,CAAaxB,WAAWzH,EAAM8E,OAAOC,SAC9CgB,EAAYzG,EAAE,iCAqJE,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAOxB,WACJ,6BACI,kBAACmG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDACjE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjGxD,EAAYyD,KAAI,SAAClG,GACd,IAnLaqH,EAmLPvB,EAAO,8BAA0B9F,EAAMsB,MAC9C,OACK,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SArLhD2P,EAqLqFrH,EArL1E,WAC5C,IAAM6E,EAAeX,EAAOzB,YAAYqC,QAAQuC,EAAOrH,OACjD+E,EAAU,YAAOb,EAAOzB,cAER,IAAlBoC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCyD,EAAmBvD,GACnBZ,EAAU,eAAID,EAAL,CAAazB,YAAYsC,KAClC/D,EAAYzG,EAAE,kDA0Kc,kBAACiK,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAsD,IAA7CtC,EAAOzB,YAAYqC,QAAQ9E,EAAMA,OAC1CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,yCCvTtB3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA4cAgM,GAxcM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAAG7D,EADY,EACZA,KADY,EAEKmB,qBAAWiY,IAFhB,mBAEhB5L,EAFgB,KAERC,EAFQ,OAGC3J,mBAAS,IAHV,mBAGVuO,GAHU,WAIjB1O,EAAU1B,KAJO,EAKqBwB,IAAMK,SAAS,MALpC,mBAKAwO,GALA,aAMqB7O,IAAMK,SAAS,MANpC,mBAMAyO,GANA,aAOW9O,IAAMK,SAAS,IAP1B,mBAOL4M,GAPK,aAQ2BjN,IAAMK,SAAS,IAR1C,mBAQG0O,GARH,aASa/O,IAAMK,SAAS,CAC/C0I,MAAM,EACNI,OAAO,EACPF,SAAS,EACTI,MAAM,EACN2F,QAAQ,IAdW,gCAgBmBhP,IAAMK,SAAS,KAhBlC,mBAgBD4O,GAhBC,aAiBqBjP,IAAMK,SAAS,IAjBpC,mBAiBA6O,GAjBA,aAkByBlP,IAAMK,SAAS,IAlBxC,mBAkBE8O,GAlBF,aAmBmBnP,IAAMK,SAAS,IAnBlC,mBAmBD+O,GAnBC,cAoBuBpP,IAAMK,SAAS,IApBtC,qBAoBCgP,IApBD,aAqBfzR,GAAaF,qBAAWC,GAAxBC,SACFE,GAAUC,cAEhBqI,qBAAU,WACDxI,GAASI,MAAMF,GAAQS,KAAK,cAGrC,IAAM0H,GAAYxB,IAAM/E,OAAO,CAC3BwG,QAAS,wBACTC,QAAS,CACL,eAAgBvI,GAASM,SAI3B2I,GAAW,uCAAG,WAAO2D,GAAP,eAAAlG,EAAA,6DACV+B,EAAU,CACZC,aAAc,kCAEdE,SAAUjK,EAAKiK,SACfC,gBAAiB+D,EACjB9D,KAAM,IAAIC,KACVC,OAAQhJ,GAASI,KAAK0D,IAPV,SASSuE,GAAUvB,KAC/B,kBACA2B,GAXY,yDAAH,sDAeXiJ,GAAyB,SAACxO,GACXA,EAAM8E,OAAOuB,KAE9B6C,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,eAA0BhI,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOyG,aAEhE,QAAvB,CAACvL,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,yBAES,SAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,2BAES,WAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,iCAES,QAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,yBAES,SAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,2BA+DhB2P,GAAkC,SAACjP,GAErCkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOyG,WAC9B,mBAAvB,CAACvL,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,gDAES,mBAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,kDAES,aAAvB,CAACU,EAAM8E,OAAOuB,OACdN,GAAYzG,EAAE,2BAKtB,OAFAwE,QAAQC,IAAIkF,GAGR,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,kGAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOvB,eAAgB7C,SAtDhF,SAAC7E,GAClB+N,EAAkB/N,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAKD,EAAN,CAAcvB,eAAgB1H,EAAM8E,OAAOC,SACpDgB,GAAYzG,EAAE,qCAoDM,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,WAAW2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAK5E,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOvB,gBAAwD,aAA1BuB,EAAOvB,eAC1C,kBAACvD,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAAEC,YAAa,GAAIqN,WAAY,GAAI2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UACjV,kBAAC5K,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wCAA7C,wBACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASC,OACvB/C,SA9DhB,SAAC7E,GACrBmM,EAAanM,EAAM8E,OAAOC,OAC1BmE,EAAU,eAAKD,EAAN,CAActB,SAAS,eAAMsB,EAAOtB,SAAd,CAAwBC,OAAQ5H,EAAM8E,OAAOC,WAC5EgB,GAAYzG,EAAE,oCA6DsB,kBAAC2B,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,iCAAnB,oBAKR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,qCAA7C,8BACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASE,SACvBhD,SA5ER,SAAC7E,GAC7BiO,EAAqBjO,EAAM8E,OAAOC,OAClCmE,EAAU,eAAKD,EAAN,CAActB,SAAS,eAAMsB,EAAOtB,SAAd,CAAwBE,SAAU7H,EAAM8E,OAAOC,WAC9EgB,GAAYzG,EAAE,2CA2EsB,kBAAC2B,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,4BAAnB,cAGR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,oCAA9B,gDACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,SACLqE,OAAQA,EAAOtB,SAASG,SACxBsC,aAAcnB,EAAOtB,SAASG,SAC9BjD,SA1FrB,SAAC7E,GAChB8N,EAAQ9N,EAAM8E,OAAOC,OACrBmE,EAAU,eAAKD,EAAN,CAActB,SAAS,eAAMsB,EAAOtB,SAAd,CAAwBG,SAAU9H,EAAM8E,OAAOC,WAC9EgB,GAAYzG,EAAE,2CA+FU,sCAMhB,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,gFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,SAAStB,MAAOkE,EAAOlB,eAAgBlD,SAhI1E,SAAC7E,GACvBgO,EAAkBhO,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAKD,EAAN,CAAclB,eAAgB/H,EAAM8E,OAAOC,SACpDgB,GAAYzG,EAAE,qCA8HM,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,gBAAgB2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAKjF,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOlB,gBAAwD,kBAA1BkB,EAAOlB,eAC1C,kBAAC5D,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAAEC,YAAa,GAAIqN,WAAY,GAAI2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UAEjV,kBAAC5K,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUC,KAC1BpD,SAAU2J,GACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUE,OACxBrD,SArMZ,SAAC7E,GACzBmO,EAAiBnO,EAAM8E,OAAOC,OAC9BmE,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,CAAyBE,OAAQlI,EAAM8E,OAAOC,WAC9EgB,GAAY,sBAoMwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAOZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUK,MAC1BxD,SAAU2J,GACVnI,KAAK,UAGbmE,MAAOlL,EAAE,6BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUM,QACxBzD,SA/NX,SAAC7E,GAC1BoO,EAAkBpO,EAAM8E,OAAOC,OAC/BmE,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,CAAyBM,QAAStI,EAAM8E,OAAOC,WAC/EgB,GAAY,uBA8NwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUG,QAC1BtD,SAAU2J,GACVnI,KAAK,YAGbmE,MAAOlL,EAAE,mCAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,KACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUI,UACxBvD,SAvPT,SAAC7E,GAC5BqO,EAAoBrO,EAAM8E,OAAOC,OACjCmE,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,CAAyBI,UAAWpI,EAAM8E,OAAOC,WACjFgB,GAAY,+BAsPwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUO,KAC1B1D,SAAU2J,GACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUQ,OACxB3D,SA/QZ,SAAC7E,GACzBsO,EAAiBtO,EAAM8E,OAAOC,OAC9BmE,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,CAAyBQ,OAAQxI,EAAM8E,OAAOC,WAC9EgB,GAAY,+BA8QwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUS,MAC1B5D,SAAU2J,GACVnI,KAAK,UAGbmE,MAAOlL,EAAE,4BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUU,QACxB7D,SAvSV,SAAC7E,GAC3BuO,GAAmBvO,EAAM8E,OAAOC,OAChCmE,EAAU,eAAKD,EAAN,CAAcjB,UAAU,eAAMiB,EAAOjB,UAAd,CAAyBU,QAAS1I,EAAM8E,OAAOC,WAC/EgB,GAAY,+BAsSwB,kBAAC9E,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,SAOZ,sCAMhB,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,wDAAP,KAAiE,6BAAjE,kJAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOJ,gBAChBhE,SAAUoK,GACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,kDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOH,gBAChBjE,SAAUoK,GACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,oDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOF,UAChBlE,SAAUoK,GACV5I,KAAK,cAGbmE,MAAOlL,EAAE,yBAA2B,+BCvdtD5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CAEFvL,SAAU,GAEdqE,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAOI,EAAMsR,QAAQC,KAAKC,eAQlC,SAASC,GAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,WAA+B,EAAnBjJ,KAAmB,EAAb6C,UAGxC,OAAQoG,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,QACI,MAAO,gBAIJ,SAASC,KACNlQ,cAANC,EADuC,IAEzCF,EAAU1B,KAF8B,EAGVwB,IAAMK,SAAS,GAHL,mBAGvC+P,EAHuC,KAG3BE,EAH2B,OAIhBtQ,IAAMK,SAAS,IAAIkQ,KAJH,mBAIvCC,EAJuC,KAI9BC,EAJ8B,KAKxCC,EAjCC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IA4BU,EAMlB1Q,IAAMK,SAAS,IANG,mBAMvC0J,EANuC,KAM/BC,EAN+B,OAOpBtM,qBAAWiY,IAPS,mBAOvChF,EAPuC,aAQN3Q,IAAMK,SAAS,IAAIsG,OARb,mBAWxCiK,GAXwC,UAWvB,SAACC,GACpB,OAAgB,KAATA,IAGLC,EAAgB,SAACD,GACnB,OAAOL,EAAQO,IAAIF,IAiDvB,OACI,kBAAC,IAAMG,SAAP,KACI,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACZ,yBAAK9T,UAAW6C,EAAQiK,MACpB,kBAAC,EAAD,MACA,kBAACiH,EAAA,EAAD,CAAShB,WAAYA,GAChBM,EAAM3E,KAAI,SAACT,EAAO+F,GACf,IAAMC,EAAY,GACZC,EAAa,GAOnB,OANIX,EAAeS,KACfE,EAAWC,SAAW,kBAAC9O,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAEtBmO,EAAcO,KACdC,EAAUG,WAAY,GAGtB,kBAACC,EAAA,EAAD,eAAMzF,IAAKX,GAAWgG,GAClB,kBAACK,EAAA,EAAcJ,EAAajG,QAK5C,6BACK8E,IAAeM,EAAMkB,OAClB,6BACI,kBAAClP,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAA/B,yCAGA,kBAAC7J,EAAA,EAAD,CAAQvF,QA5ChB,WAChB+S,EAAc,IA2CwCjT,UAAW6C,EAAQ+C,QAAjD,UAKA,6BACI,yBAAK5F,UAAW6C,EAAQyM,cAIhB,kBAAC,GAAD,CAAgByD,WAAYA,EAAYjJ,KAAM4C,EAAO5C,KAAM6C,UAAWA,KAG9E,6BACI,kBAAClH,EAAA,EAAD,CAAQ+O,SAAyB,IAAfzB,EAAkB7S,QA7ErD,WACf+S,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,MA4EsCzU,UAAW6C,EAAQ+C,QAA5E,QAGC2N,EAAeR,IACZ,kBAACtN,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAhFzB,WACf,IAAKqT,EAAeR,GAGhB,MAAM,IAAI2B,MAAM,8CAGpBzB,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,GAAW,SAACuB,GACR,IAAMC,EAAa,IAAI1B,IAAIyB,EAAYjI,UAEvC,OADAkI,EAAWC,IAAI9B,GACR6B,MAsE6B5U,UAAW6C,EAAQ+C,QAJvB,QAUJ,kBAACH,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAAS6S,IAAeM,EAAMkB,OAAS,EAvE1D,WAGlBO,IAAMzN,KAAK,uCAAwCiM,GAClDyB,MAAK,SAAAC,GACJzN,QAAQC,IAAIwN,EAAIvN,UAxCF,SAACT,GAChBA,EAAEE,iBACF,IAAI0N,EAAazB,EACbM,EAAcV,KACd6B,EAAa,IAAI1B,IAAI0B,EAAWlI,WACrBuI,OAAOlC,GAGtBE,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,EAAWwB,IAkGyB5U,UAAW6C,EAAQ+C,QAEtBmN,IAAeM,EAAMkB,OAAS,EAAI,SAAW,cC3LtF,IAAMpT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,OACR5E,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBC,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhBC,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,aAErBkB,QAAS,CACLC,cAAe,QACfC,WAAY,YA0FLoC,OArFf,WACI,IAAM9F,EAAU1B,KADA,EAEI2B,cAAZC,EAFQ,EAERA,EAUR,OAZgB,EAEL7D,KAWP,yBAAKc,UAAU,aACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,UAAUkF,MAAO,CAAE+K,aAAc,IAAK/N,YAAa,MAC9D,kBAAC0F,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,GAAIsN,UAAW,KACzD,kBAAC3H,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAA1B,IAAkC,gCAAQ,4BAAKrD,EAAE,kCAAP,iCAE9C,6BACA,kBAACsC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,mjBAEJ,6BACA,kBAACjK,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,irBAEJ,6BACA,kBAACjK,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,mUAEJ,6BACA,kBAACjK,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,iCAAOvM,EAAE,wCAEb,6BACA,kBAACsC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,iCAAOvM,EAAE,yCAEb,6BACA,kBAACsC,EAAA,EAAD,CAAYH,MAAO,GAAKlF,UAAW6C,EAAQyM,cACvC,iCAAOvM,EAAE,yCAEb,6BAEA,kBAAC6E,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAA1B,IAAkC,gCAAQ,4BAAKrD,EAAE,iCAAP,2BAE9C,6BACA,kBAACsC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,iTAEJ,6BACA,kBAACjK,EAAA,EAAD,CAAYH,MAAO,CAAEsK,aAAc,IAAMxP,UAAW6C,EAAQyM,cACxD,6NAEJ,6BACA,kBAACjK,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAC3B,iCAAOvM,EAAE,uCAEb,6BACA,kBAACsC,EAAA,EAAD,CAAarF,UAAW6C,EAAQyM,cAC5B,iCAAOvM,EAAE,wCAGb,6BACA,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACrC,EAAA,EAAD,CAAQP,MAAO,CAAE5C,MAAO,IAAK6C,gBAAiB,OAAQlE,MAAO,SAAWqE,QAAQ,YAAYpF,QA5D3F,WACjByV,OAAOC,SAAW,MA2DF,WAIJ,kBAAChO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACrC,EAAA,EAAD,CAAQxE,MAAM,UAAUqE,QAAQ,YAAYJ,MAAO,CAAE5C,MAAO,KAAOpC,QArEjE,WAClByV,OAAOC,SAAW,cAoEF,cAMZ,kBAAC,EAAD,QCpHC8F,GAAe7b,0BAEf8b,GAAiB,SAAA5b,GAAU,IAAD,EACPiD,mBAAS,CACjC4Y,qBAAoB,EACpBC,oBAAoB,GACpBC,oBAAoB,GACpBC,cAAc,GACdC,MAAM,GACNC,OAAO,GACPC,kBAAkB,GAClBC,eAAe,GACfC,6BAA6B,GAC7BC,wBAAwB,GACxBC,eAAe,GACfC,SAAS,GACTC,WAAW,KAdoB,mBAC5B9P,EAD4B,KACpBC,EADoB,KAiBnC,OACI,kBAAC+O,GAAa9O,SAAd,CAAuBpE,MAAO,CAACkE,EAAQC,IAClC5M,EAAM8M,WCNb1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,OACR5E,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBC,YAAa,CACTC,UAAW,OACXC,WAAY,IAEhBC,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,QACPkE,gBAAiB,aAErBkB,QAAS,CACLC,cAAe,QACfC,WAAY,YAyNLoC,OApNf,WACI,IAAM9F,EAAU1B,KADA,EAEI2B,cAAZC,EAFQ,EAERA,EAFQ,KAEL7D,KACiBmB,qBAAWqb,KAHvB,mBAGThP,EAHS,KAGDC,EAHC,KAKV+N,EAAe,SAACjX,GAClBkJ,EAAU,eAAKD,EAAN,eAAejJ,EAAM8E,OAAOuB,KAAOrG,EAAM8E,OAAOC,UAQ7D,OACI,yBAAKxI,UAAU,aACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,UAAUkF,MAAO,CAAE+K,aAAc,GAAI/N,YAAa,KAC7D,6BACA,kBAAC0F,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,gCAAQ,wBAAI5C,MAAO,CAAEgB,UAAW,WAAanD,EAAE,4BAAvC,IAAoE,6BAApE,yHAEZ,wBAAImC,MAAO,CAAE6C,OAAQ,EAAGgT,YAAa,EAAG9Z,MAAO,OAAQkE,gBAAiB,UACxE,kBAACyC,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,IAC1C,kBAAC2F,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAA1B,IAAkC,gCAAQ,4BAAKrD,EAAE,+BAAP,+PAG9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,gCAAgC,6BAAhE,8SAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,UAAUiF,KAAK,sBAAsBtB,MAAOkE,EAAOkP,oBAAqBtT,SAAUoS,GACzG,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,gCAAgC,6BAAhE,iJAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,sBAAsBtB,MAAOkE,EAAOmP,oBAAqBvT,SAAUoS,GACxG,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,gCAAgC,6BAAhE,4RAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,sBAAsBtB,MAAOkE,EAAOoP,oBAAqBxT,SAAUoS,GACxG,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAM5H,UAAW6C,EAAQoD,YAAa4B,MAAI,EAACC,GAAI,IAC3C,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAA1B,IAAkC,gCAAQ,4BAAKrD,EAAE,yBAAP,uOAG9C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,0BAA0B,6BAA1D,qDAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,gBAAgBtB,MAAOkE,EAAOqP,cAAezT,SAAUoS,GAC5F,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,kBAAkB,6BAAlD,iCAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,QAAQtB,MAAOkE,EAAOsP,MAAO1T,SAAUoS,GAC5E,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,mBAAmB,6BAAnD,iCAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,SAAStB,MAAOkE,EAAOuP,OAAQ3T,SAAUoS,GAC9E,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAIjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,8BAA8B,6BAA9D,gCAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,oBAAoBtB,MAAOkE,EAAOwP,kBAAmB5T,SAAUoS,GACpG,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,2BAA2B,6BAA3D,oEAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,iBAAiBtB,MAAOkE,EAAOyP,eAAgB7T,SAAUoS,GAC9F,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,yCAAyC,6BAAzE,8DAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,+BAA+BtB,MAAOkE,EAAO0P,6BAA8B9T,SAAUoS,GAC1H,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,oCAAoC,6BAApE,mGAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,0BAA0BtB,MAAOkE,EAAO2P,wBAAyB/T,SAAUoS,GAChH,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,2BAA2B,6BAA3D,6CAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,iBAAiBtB,MAAOkE,EAAO4P,eAAgBhU,SAAUoS,GAC9F,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,qBAAqB,6BAArD,qBAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,WAAWtB,MAAOkE,EAAO6P,SAAUjU,SAAUoS,GAClF,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAKjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,gCAAQ,wBAAIhB,MAAO,CAAEQ,SAAU,KAAO3C,EAAE,uBAAuB,6BAAvD,uCAEZ,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5C,MAAO,CAAEgB,UAAW,SAClC,kBAAC+B,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,aAAatB,MAAOkE,EAAO8P,WAAYlU,SAAUoS,GACtF,kBAACxJ,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,uBAAyB,mBACrF,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,sBAAwB,4BAIjG,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI5C,MAAO,CAAEgB,UAAW,UACnC,kBAACT,EAAA,EAAD,CAAQxE,MAAM,UAAUqE,QAAQ,YAAYJ,MAAO,CAAE5C,MAAO,KAAOpC,QA9LjE,WAClByV,OAAOC,SAAW,WA6LF,cAMZ,kBAAC,EAAD,QCxPC6G,GAAoB5c,0BAEpB6c,GAAgB,SAAA3c,GAAU,IAAD,EACNiD,mBAAS,CACjC8G,KAAO,GACPC,YAAc,IAAIT,KAClBvB,OAAS,GACTiC,OAAS,GACTC,IAAM,GACNC,SAAW,CACPC,MAAQ,GACRC,QAAU,IAEdC,aAAe,GAEfG,aAAe,GACfC,YAAc,GACdC,WAAa,GACbC,aAAe,IAAIrB,KACnBsB,gBAAkB,IAAItB,KAEtBuB,aAAe,GACfC,cAAe,GAEfC,WAAY,GACZC,WAAa,GAEbC,YAAa,GACbC,WAAY,GAEZC,eAAiB,GACjBC,SAAW,CACPC,OAAS,GACTC,SAAW,GACXC,SAAW,IAEfC,eAAgB,GAChBC,UAAW,CACPC,MAAO,EACPC,OAAS,GACTC,SAAU,EACVC,UAAY,GACZC,OAAQ,EACRC,QAAU,GACVC,MAAO,EACPC,OAAS,GACTC,OAAQ,EACRC,QAAU,IAGdC,SAAW,GACXC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAClBC,WAAY,IApDkB,mBAC3BE,EAD2B,KACnBC,EADmB,KAuDlC,OACI,kBAAC8P,GAAkB7P,SAAnB,CAA4BpE,MAAO,CAACkE,EAAQC,IACvC5M,EAAM8M,WCjDb1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAO,GACP5D,QAAQ,GAEZ2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA4EAgM,GAxEM,WACjB,IADuB,EAgBK5M,qBAAWoc,IAhBhB,mBAgBhB/P,EAhBgB,KAgBRC,EAhBQ,OAiBH7J,cAAZC,EAjBe,EAiBfA,EACFF,GAlBiB,EAiBZ3D,KACKiC,MAEVqa,EAAsB,SAAChT,GAAD,OAAW,WACnC,IAAM6E,EAAeX,EAAOrC,aAAaiD,QAAQ9E,EAAMA,OACjD+E,EAAU,YAAOb,EAAOrC,eAER,IAAlBgD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAKD,EAAN,CAAcrC,aAAckD,OAGzC,OACI,6BACI,yBAAKvN,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAgC,6BAAvC,gNAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC9C,kBAACsM,GAAA,EAAD,CAAUb,WAAS,EAACxI,MAAO,CAAC6C,OAAO,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAzC1G,CACZ,CAAE3E,KAAM,kDAA0BtB,MAAO,mBACzC,CAAEsB,KAAM,2BAAkBtB,MAAO,cACjC,CAAEsB,KAAM,2BAAkBtB,MAAO,cACjC,CAAEsB,KAAM,qDAA6BtB,MAAO,sBAC5C,CAAEsB,KAAM,iDAA8BtB,MAAO,wBAC7C,CAAEsB,KAAM,0CAA4BtB,MAAO,uBAC3C,CAAEsB,KAAM,qDAA6BtB,MAAO,sBAC5C,CAAEsB,KAAM,kDAA0BtB,MAAO,mBACzC,CAAEsB,KAAM,6FAA4CtB,MAAO,gCAC3D,CAAEsB,KAAM,4DAA+BtB,MAAO,uBAC9C,CAAEsB,KAAM,qCAAkBtB,MAAO,YACjC,CAAEsB,KAAM,iPAAgHtB,MAAO,sFA8BtGkG,KAAI,SAAClG,GACV,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUzJ,MAAO,CAACqK,UAAU,IAAKX,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASsb,EAAoBhT,IACzG,kBAACwE,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAuD,IAA9CtC,EAAOrC,aAAaiD,QAAQ9E,EAAMA,OAC3CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,MAAQ5E,MAAO,CAACtD,QAAQ,6BCvEnGT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFvL,SAAU,GAEd6E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,SAEX8L,SAAU,CACNzK,MAAO,IACPyF,OAAQ,IACR7B,UAAW,SACXL,OAAO,GACP5D,QAAQ,IAEV+K,aAAc,CACVjH,SAAS,QAiPJkH,GA7OM,WAEjB,IAFuB,EA4BK5M,qBAAWoc,IA5BhB,mBA4BhB/P,EA5BgB,KA4BRC,EA5BQ,OA6BH7J,cAAZC,EA7Be,EA6BfA,EACFF,GA9BiB,EA6BZ3D,KACKiC,MA9BO,EAgCC6B,mBAAS,IAhCV,mBAgChB8G,EAhCgB,KAgCV6S,EAhCU,OAiCK3Z,mBAAS,IAjCd,mBAiChB+E,EAjCgB,KAiCR6U,EAjCQ,OAkCK5Z,mBAAS,IAlCd,mBAkChBgH,EAlCgB,KAkCR6S,EAlCQ,OAmCC7Z,mBAAS,IAnCV,mBAmCVkK,GAnCU,aAoCDlK,mBAAS,IApCR,mBAoCX8Z,GApCW,aAsCena,IAAMK,SAAS,IAtC9B,mBAsCHuX,GAtCG,aAuCuB5X,IAAMK,SAAS,IAvCtC,mBAuCCwX,GAvCD,WAyCjBpN,EAAmB,SAAC5E,GAAD,OAAW,WAChC,IAAM6E,EAAeX,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OACnD+E,EAAU,YAAOb,EAAOxC,SAASC,QAEjB,IAAlBkD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCkN,EAAe,CAACrQ,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBC,MAAMoD,MACpDZ,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBC,MAAMoD,SAIxDE,EAAsB,SAACjF,GAAD,OAAW,WACnC,IAAM6E,EAAeX,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OACrD+E,EAAU,YAAOb,EAAOxC,SAASE,UAEjB,IAAlBiD,EACAE,EAAWrM,KAAKsH,EAAMA,OAEtB+E,EAAWC,OAAOH,EAAc,GAGpCmN,EAAmB,CAACtQ,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBE,QAAQmD,MAC1DZ,EAAU,eAAID,EAAL,CAAaxC,SAAS,eAAIwC,EAAOxC,SAAZ,CAAsBE,QAAQmD,SASpEhG,QAAQC,IAAIkF,GAuBR,OACI,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4CAEpD,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAEX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,iCAA9B,4FACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,OACLqE,OAAQ5C,EACR+D,aAAcnB,EAAO5C,KACrBxB,SA1CL,SAACtB,GAChB2V,EAAQ3V,EAAEuB,OAAOC,OACjBmE,EAAU,eAAID,EAAL,CAAa5C,KAAK9C,EAAEuB,OAAOC,aA2CxB,kBAAC,KAAD,CAAyBsF,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIJ,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO3C,YACdzB,SAvCT,SAACe,GAChB6D,EAAQ7D,GACRsD,EAAU,eAAID,EAAL,CAAa3C,YAAYV,MAsCV8E,oBAAqB,CACjB,aAAc,mBAO9B,kBAACvG,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAACgG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IACpC,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SACLqE,OAAQ3E,EACR8F,aAAcnB,EAAO3E,OACrBO,SAlEP,SAACtB,GAClB4V,EAAU5V,EAAEuB,OAAOC,OACnBmE,EAAU,eAAID,EAAL,CAAa3E,OAAOf,EAAEuB,OAAOC,eAuE9B,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAU,IAC5B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,UAAUpF,EAAE,2BAChC,kBAACqF,EAAA,EAAD,CACI/D,GAAG,SACHgE,KAAK,SACLqE,OAAQ1C,EACR6D,aAAcnB,EAAO1C,OACrB1B,SA5EP,SAACtB,GAClB6V,EAAU7V,EAAEuB,OAAOC,OACnBmE,EAAU,eAAID,EAAL,CAAa1C,OAAOhD,EAAEuB,OAAOC,aA6E1B,kBAACP,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wBAC7C,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOzC,IACd3B,SA3EN,SAAC7E,GACfqZ,EAAOrZ,EAAM8E,OAAOC,OACpBmE,EAAU,eAAID,EAAL,CAAazC,IAAIxG,EAAM8E,OAAOC,WA2EnB,kBAAC9D,EAAA,EAAD,CAAU8D,MAAM,QAAQzF,EAAE,yBAC1B,kBAAC2B,EAAA,EAAD,CAAU8D,MAAM,UAAUzF,EAAE,8BAK5C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4BAAP,uCAE7C,6BACA,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,+CACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GArLzD,CAChB,CAAE3E,KAAM,wBAAetB,MAAO,YAC9B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,sEAAqBtB,MAAO,QACpC,CAAEsB,KAAM,iBAAatB,MAAO,UAC5B,CAAEsB,KAAM,0BAAiBtB,MAAO,aAChC,CAAEsB,KAAM,wBAAetB,MAAO,WAC9B,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,sBAAatB,MAAO,SAC5B,CAAEsB,KAAM,oBAAWtB,MAAO,OAC1B,CAAEsB,KAAM,gCAAkBtB,MAAO,aACjC,CAAEsB,KAAM,kBAActB,MAAO,WAC7B,CAAEsB,KAAM,qBAAYtB,MAAO,QAC3B,CAAEsB,KAAM,iFAAwEtB,MAAO,qEACvF,CAAEsB,KAAM,2GAAgDtB,MAAO,iCAwKlCkG,KAAI,SAAClG,GACd,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASkN,EAAiB5E,IAC/E,kBAACwE,GAAA,EAAD,CAAchN,UAAW6C,EAAQmK,cAC7B,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAyD,IAAhDtC,EAAOxC,SAASC,MAAMmD,QAAQ9E,EAAMA,OAC7CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQjE,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,mDACzC,kBAACmI,GAAA,EAAD,CAAUC,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,EAAGvJ,MAAO,CAAChD,YAAa,KA7L5E,CACrB,CAAC4H,KAAK,0CAAkBtB,MAAM,WAC9B,CAACsB,KAAK,oCAAsBtB,MAAM,iBAClC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,wCAAqBtB,MAAM,eACjC,CAACsB,KAAK,sDAAwCtB,MAAM,mCACpD,CAACsB,KAAK,iCAAmBtB,MAAM,gBAwLGkG,KAAI,SAAClG,GACnB,IAAM8F,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,QAASuN,EAAoBjF,IAClF,kBAACwE,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAA2D,IAAlDtC,EAAOxC,SAASE,QAAQkD,QAAQ9E,EAAMA,OAC/CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,kBCrP3E3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAyLAgM,GArLM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EACFmN,GAFiB,EACZhR,KACW,CAClB,CAAE4K,KAAM/G,EAAE,2BAA6B,WAAOyF,MAAO,WACrD,CAAEsB,KAAM/G,EAAE,2BAA6B,WAAOyF,MAAO,WACrD,CAAEsB,KAAM/G,EAAE,2BAA6B,iBAAQyF,MAAO,WACtD,CAAEsB,KAAM/G,EAAE,8BAAgC,uBAASyF,MAAO,cAC1D,CAAEsB,KAAM/G,EAAE,gCAAkC,WAAOyF,MAAO,gBAC1D,CAAEsB,KAAM/G,EAAE,6BAA+B,WAAOyF,MAAO,aACvD,CAAEsB,KAAM/G,EAAE,yBAA2B,WAAOyF,MAAO,WAGjD2H,EAAe,CACjB,CAAErG,KAAM/G,EAAE,4BAA8B,uEAAiByF,MAAO,YAChE,CAAEsB,KAAM/G,EAAE,oCAAsC,yFAAoByF,MAAO,oBAC3E,CAAEsB,KAAM/G,EAAE,6CAA+C,uEAAiByF,MAAO,6BACjF,CAAEsB,KAAM/G,EAAE,yBAA2B,uBAASyF,MAAO,UAhBlC,EAmBKnI,qBAAWoc,IAnBhB,mBAmBhB/P,EAnBgB,KAmBRC,EAnBQ,KAoBjB9J,EAAU1B,KAuChB,OACI,6BACI,yBAAKnB,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAE1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAP,KAAyC,6BAAzC,sFAG7C,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAC7FyB,EAAcxB,KAAI,SAAClG,GAChB,IAlCWqH,EAkCLvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SArClD2P,EAqCqFrH,EArC1E,WAC1C,IAAM6E,EAAeX,EAAOlC,aAAa8C,QAAQuC,EAAOrH,OAClD+E,EAAU,YAAOb,EAAOlC,eAER,IAAlB6C,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAID,EAAL,CAAalC,aAAa+C,QA4BP,kBAACP,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAuD,IAA9CtC,EAAOlC,aAAa8C,QAAQ9E,EAAMA,OAC3CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAO7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,+BAAP,KAAwC,6BAAxC,oHAG7C,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,GAAI9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GAC5F0B,EAAazB,KAAI,SAAClG,GACf,IAzEUqH,EAyEJvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA5EnD2P,EA4EqFrH,EA5E1E,WACzC,IAAM6E,EAAeX,EAAOjC,YAAY6C,QAAQuC,EAAOrH,OACjD+E,EAAU,YAAOb,EAAOjC,cAER,IAAlB4C,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAID,EAAL,CAAajC,YAAY8C,QAmEN,kBAACP,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAsD,IAA7CtC,EAAOjC,YAAY6C,QAAQ9E,EAAMA,OAC1CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,aAO7D,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,8BAA8B,6BAArC,gOAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC9F,GAAI,EAAG9H,UAAW6C,EAAQuL,aAC7C,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAAf,UACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOhC,WACdpC,SA/EJ,SAAC7E,GACrBkJ,EAAU,eAAID,EAAL,CAAahC,WAAWjH,EAAM8E,OAAOC,WAgFtB,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAOZ,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,gCAAP,IAAwC,6BAAxC,6FAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,CAAyBgG,MAAOC,MAC5B,kBAACnG,EAAA,EAAD,CAAM8F,WAAS,EAACM,QAAQ,gBAEpB,kBAAC,KAAD,CACIlG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,qBACH4J,MAAOlL,EAAE,+BACTmL,OAAO,aACP1F,MAAOkE,EAAO/B,aACdrC,SAvGb,SAACe,GAChBsD,EAAU,eAAID,EAAL,CAAa/B,aAAatB,MAuGP8E,oBAAqB,CACjB,aAAc,iBAGtB,kBAAC,KAAD,CACIrG,GAAI,EACJ8F,WAAS,EACT/H,OAAO,SACPxB,GAAG,cACH4J,MAAM,cACNzF,MAAOkE,EAAO9B,gBACdtC,SAhHb,SAACiI,GAChB5D,EAAU,eAAID,EAAL,CAAa9B,gBAAgB2F,MAgHVpC,oBAAqB,CACjB,aAAc,wBCvMhDhN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aA6PAgM,GA1PM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EAEFkI,GAHiB,EACZ/L,KAES,CAChB,CAAC4K,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,uBAAwB,WAAOyF,MAAM,OAC9C,CAACsB,KAAM/G,EAAE,wBAAyB,WAAOyF,MAAM,QAC/C,CAACsB,KAAM/G,EAAE,yBAA0B,WAAOyF,MAAM,SAChD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,wBAAyB,iBAAQyF,MAAM,QAChD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,2BAA4B,WAAOyF,MAAM,WAClD,CAACsB,KAAM/G,EAAE,8BAA+B,iBAAQyF,MAAM,cACtD,CAACsB,KAAM/G,EAAE,yBAA0B,kBAASyF,MAAM,SAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,YACpD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,yBAA0B,iBAAQyF,MAAM,SACjD,CAACsB,KAAM/G,EAAE,0BAA2B,iBAAQyF,MAAM,UAClD,CAACsB,KAAM/G,EAAE,kCAAmC,uBAASyF,MAAM,qBAC3D,CAACsB,KAAM/G,EAAE,0BAA2B,uBAASyF,MAAM,YAGjDsC,EAAgB,CAClB,CAAChB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,gCAAiC,6BAAUyF,MAAM,gBAC1D,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,oCAAqC,6BAAUyF,MAAM,oBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,6BAAUyF,MAAM,gBAGpDgI,EAAgB,CACrB,CAAC1G,KAAM/G,EAAE,mCAAoC,iDAAeyF,MAAM,mBAClE,CAACsB,KAAM/G,EAAE,qCAAsC,6BAAUyF,MAAM,qBAC/D,CAACsB,KAAM/G,EAAE,oCAAqC,uBAASyF,MAAM,oBAC7D,CAACsB,KAAM/G,EAAE,gCAAiC,iBAAQyF,MAAM,gBACxD,CAACsB,KAAM/G,EAAE,gCAAiC,uBAASyF,MAAM,gBACzD,CAACsB,KAAM/G,EAAE,8BAA+B,6BAAUyF,MAAM,cACxD,CAACsB,KAAM/G,EAAE,6BAA8B,6BAAUyF,MAAM,aACvD,CAACsB,KAAM/G,EAAE,mDAAoD,uBAASyF,MAAM,mCAC5E,CAACsB,KAAM/G,EAAE,kCAAmC,yCAAYyF,MAAM,kBAC9D,CAACsB,KAAM/G,EAAE,+BAAgC,mCAAWyF,MAAM,eAC1D,CAACsB,KAAM/G,EAAE,4BAA6B,uBAASyF,MAAM,YACrD,CAACsB,KAAM/G,EAAE,4CAA6C,mCAAWyF,MAAM,wCACvE,CAACsB,KAAM/G,EAAE,6BAA8B,iBAAQyF,MAAM,aACrD,CAACsB,KAAM/G,EAAE,4BAA6B,iBAAQyF,MAAM,aA/CjC,EAkDKnI,qBAAWoc,IAlDhB,mBAkDhB/P,EAlDgB,KAkDRC,EAlDQ,KAmDjB9J,EAAU1B,KAyDhB,OACI,yBAAKnB,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,yCAAP,IAAiD,6BAAjD,sFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO7B,aAAcvC,SAhC1E,SAAC7E,GAClBkJ,EAAU,eAAID,EAAL,CAAa7B,aAAapH,EAAM8E,OAAOC,WAgChC,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAK/D,kBAACrG,EAAA,EAAD,KACA,6BAC6B,QAAxB8E,EAAO7B,aACJ,6BACA,kBAACwG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDAC7D,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG3D,EAAc4D,KAAI,SAAClG,GAChB,IA3DYqH,EA2DNvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA9DjD2P,EA8DqFrH,EA9D1E,WAC3C,IAAM6E,EAAeX,EAAO5B,cAAcwC,QAAQuC,EAAOrH,OACnD+E,EAAU,YAAOb,EAAO5B,gBAER,IAAlBuC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAID,EAAL,CAAa5B,cAAcyC,QAqDR,kBAACP,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAwD,IAA/CtC,EAAO5B,cAAcwC,QAAQ9E,EAAMA,OAC5CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,mCAAP,KAA4C,6BAA5C,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAO3B,WAAYzC,SA7D9D,SAAC7E,GAC5BkJ,EAAU,eAAID,EAAL,CAAa3B,WAAWtH,EAAM8E,OAAOC,WA6D9B,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAO3B,WACJ,kBAACnD,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACzB,kBAACuJ,GAAA,EAAD,CAAW3D,WAAS,EAACxI,MAAO,CAACqK,WAAW,GAAI+B,WAAW,EAAG5L,SAAS,KAAK,gCAAS3C,EAAE,8CAAX,IAA0D,6BAA1D,wQACxE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjG+B,EAAc9B,KAAI,SAAClG,GAChB,IAvFaqH,EAuFPvB,EAAO,8BAA0B9F,EAAMsB,MAE7C,OACI,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SA1FhD2P,EA0FqFrH,EA1F1E,WAC5C,IAAM6E,EAAeX,EAAO1B,WAAWsC,QAAQuC,EAAOrH,OAChD+E,EAAU,YAAOb,EAAO1B,aAER,IAAlBqC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAID,EAAL,CAAa1B,WAAWuC,QAiFL,kBAACP,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAqD,IAA5CtC,EAAO1B,WAAWsC,QAAQ9E,EAAMA,OACzCyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,sCAKZ,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,8BAAP,KAAuC,6BAAvC,wMAE7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOxB,WAAY5C,SA7I7D,SAAC7E,GAC7BkJ,EAAU,eAAID,EAAL,CAAaxB,WAAWzH,EAAM8E,OAAOC,WA6I9B,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,QACxD,kBAACiD,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAM,UAI/D,kBAACrG,EAAA,EAAD,KACA,6BAC2B,QAAtB8E,EAAOxB,WACJ,6BACI,kBAACmG,GAAA,EAAD,CAAWnM,MAAO,CAACiB,YAAY,IAAKT,SAAS,KAAK,gCAAS3C,EAAE,gDACjE,kBAACwL,GAAA,EAAD,CAAUrJ,MAAO,CAAE6C,OAAQ,IAAK9F,QAAS,IAAMuM,WAAY,GAAIxO,UAAW6C,EAAQkK,SAAU0B,KAAM,GACjGxD,EAAYyD,KAAI,SAAClG,GACd,IAvKaqH,EAuKPvB,EAAO,8BAA0B9F,EAAMsB,MAC9C,OACK,kBAAC6E,GAAA,EAAD,CAAUC,IAAKpG,EAAMsB,KAAM+E,UAAM/N,EAAWgO,OAAK,EAAClJ,QAAM,EAAC1F,SAzKhD2P,EAyKqFrH,EAzK1E,WAC5C,IAAM6E,EAAeX,EAAOzB,YAAYqC,QAAQuC,EAAOrH,OACjD+E,EAAU,YAAOb,EAAOzB,cAER,IAAlBoC,EACAE,EAAWrM,KAAK2O,EAAOrH,OAEvB+E,EAAWC,OAAOH,EAAc,GAGpCV,EAAU,eAAID,EAAL,CAAazB,YAAYsC,QAgKN,kBAACP,GAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CACIpJ,KAAK,QACLqJ,SAAsD,IAA7CtC,EAAOzB,YAAYqC,QAAQ9E,EAAMA,OAC1CyG,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBb,MAGzC,kBAACc,GAAA,EAAD,CAAc/K,GAAIiK,EAASe,QAAO,UAAK7G,EAAMsB,cAQrD,yCC1QtB3I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAsUAgM,GAlUM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EADe,KACZ7D,KACiBmB,qBAAWoc,KAFhB,mBAEhB/P,EAFgB,KAERC,EAFQ,OAGC3J,mBAAS,IAHV,mBAIjBH,GAJiB,UAIP1B,MAGV8Q,EAAyB,SAACxO,GACXA,EAAM8E,OAAOuB,KAE9B6C,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,eAAwBhI,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOyG,aACvFzH,QAAQC,IAAI,CAAC/D,EAAM8E,OAAOuB,QA2C9B,OAFJvC,QAAQC,IAAIkF,GAGJ,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,kGAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOvB,eAAgB7C,SA9BhF,SAAC7E,GACnBkJ,EAAU,eAAID,EAAL,CAAavB,eAAe1H,EAAM8E,OAAOC,WA8B7B,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,WAAW2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAK5E,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOvB,gBAAwD,aAA1BuB,EAAOvB,eAC1C,kBAACvD,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAACC,YAAY,GAAIqN,WAAY,GAAI2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UAC/U,kBAAC5K,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,wCAA7C,wBACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASC,OACvB/C,SA1ChB,SAAC7E,GACrBkJ,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBC,OAAO5H,EAAM8E,OAAOC,aA2CpC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,iCAAnB,oBAKR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,aACtC,kBAAClG,EAAA,EAAD,CAAY7D,GAAG,4BAA4BtB,EAAE,qCAA7C,8BACA,kBAACsL,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOtB,SAASE,SACvBhD,SA1DR,SAAC7E,GAC7BkJ,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBE,SAAS7H,EAAM8E,OAAOC,aA2DtC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,MAEJ,kBAACiK,GAAA,EAAD,KAAiB1P,EAAE,4BAAnB,cAGR,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAU,IAC7B,kBAACkI,EAAA,EAAD,CAAYC,QAAQ,QAAQpF,EAAE,oCAA9B,gDACA,kBAACqF,EAAA,EAAD,CACI/D,GAAG,OACHgE,KAAK,SACLqE,OAAQA,EAAOtB,SAASG,SACxBsC,aAAcnB,EAAOtB,SAASG,SAC9BjD,SA1ErB,SAAC7E,GAChBkJ,EAAU,eAAID,EAAL,CAAatB,SAAS,eAAIsB,EAAOtB,SAAZ,CAAsBG,SAAS9H,EAAM8E,OAAOC,iBAiFlD,sCAMhB,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,kCAAP,KAA2C,6BAA3C,gFAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,SAAStB,MAAOkE,EAAOlB,eAAgBlD,SA1G1E,SAAC7E,GACvBkJ,EAAU,eAAID,EAAL,CAAalB,eAAe/H,EAAM8E,OAAOC,WA0G9B,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,gBAAgB2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,oCAKjF,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEX,6BACgC,QAA1B4E,EAAOlB,gBAAwD,kBAA1BkB,EAAOlB,eAC1C,kBAAC5D,EAAA,EAAD,aAAM5H,UAAU,SAAS0N,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAAjE,QAA8E,CAAEC,YAAY,GAAIqN,WAAY,GAAK2C,WAAY,GAAI1C,aAAc,GAAIjJ,WAAY,GAAID,cAAe,GAAI6L,OAAQ,QAASC,eAAgB,EAAGC,gBAAiB,EAAGC,iBAAkB,EAAGC,kBAAmB,EAAGpN,gBAAiB,YAAaa,aAAc,EAAGwM,YAAa,UAE7U,kBAAC5K,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUC,KAC1BpD,SAAU2J,EACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUE,OACxBrD,SAnKhB,SAAC7E,GACzBkJ,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBE,OAAOlI,EAAM8E,OAAOC,aAoKlC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAOZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUK,MAC1BxD,SAAU2J,EACVnI,KAAK,UAGbmE,MAAOlL,EAAE,6BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUM,QACxBzD,SA/Lf,SAAC7E,GAC3BkJ,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBM,QAAQtI,EAAM8E,OAAOC,aAgMlC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUG,QAC1BtD,SAAU2J,EACVnI,KAAK,YAGbmE,MAAOlL,EAAE,mCAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,KACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUI,UACxBvD,SAzNb,SAAC7E,GAC5BkJ,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBI,UAAUpI,EAAM8E,OAAOC,aA0NrC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUO,KAC1B1D,SAAU2J,EACVnI,KAAK,SAGbmE,MAAOlL,EAAE,2BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUQ,OACxB3D,SAnPhB,SAAC7E,GAC1BkJ,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBQ,OAAOxI,EAAM8E,OAAOC,aAoPjC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,QAKZ,kBAACZ,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOjB,UAAUS,MAC1B5D,SAAU2J,EACVnI,KAAK,UAGbmE,MAAOlL,EAAE,4BAGjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,GACrB,kBAACG,EAAA,EAAD,CAAa2F,WAAS,EAAC5N,UAAW6C,EAAQuL,YAAalJ,MAAO,CAAEqK,WAAY,GAAIpJ,YAAa,MACzF,kBAAC+B,EAAA,EAAD,CAAY7D,GAAG,4BAAf,kBACA,kBAACgK,GAAA,EAAD,CACIC,QAAQ,2BACRjK,GAAG,qBACHmE,MAAOkE,EAAOjB,UAAUU,QACxB7D,SA7Qd,SAAC7E,GAC5BkJ,EAAU,eAAID,EAAL,CAAajB,UAAU,eAAIiB,EAAOjB,UAAZ,CAAuBU,QAAQ1I,EAAM8E,OAAOC,aA8QlC,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,KACA,kBAAC9D,EAAA,EAAD,CAAU8D,MAAO,GAAjB,SAOhB,yCCtV1BrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CACFxK,MAAO,QAEXyK,SAAU,CACNzK,MAAO,IAEP4D,UAAW,SACXL,OAAQ,GACR5D,QAAS,GAEb2D,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAO,aAsGAgM,GAlGM,WAAO,IAAD,EACHnK,cAAZC,EADe,EACfA,EADe,KACZ7D,KACiBmB,qBAAWoc,KAFhB,mBAEhB/P,EAFgB,KAERC,EAFQ,KAGjB9J,EAAU1B,KAGVuR,EAAkC,SAACjP,GACrCkJ,EAAU,eAAID,EAAL,eAAcjJ,EAAM8E,OAAOuB,KAAMrG,EAAM8E,OAAOyG,YAW3D,OADJzH,QAAQC,IAAIkF,GAEJ,yBAAK1M,UAAW6C,EAAQiK,MACpB,kBAAClF,EAAA,EAAD,CAAM8F,WAAS,EAAChM,QAAS,EAAGwD,MAAO,CAAEjD,QAAS,KAC1C,kBAAC2F,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,4BAAP,KAAqC,6BAArC,sOAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAON,SAAU9D,SAlB1E,SAAC7E,GAClBkJ,EAAU,eAAID,EAAL,CAAaN,SAAS3I,EAAM8E,OAAOC,WAkBxB,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,MAAM2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC3D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,KAAK2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,wBAC1D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,aAAa2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,6BAA+B,uCAK7G,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,uCAAP,KAAgD,6BAAhD,oEAG7C,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,EAAA,EAAD,CAAa8I,UAAU,YAEnB,kBAACC,GAAA,EAAD,CAAYC,KAAG,EAACpM,aAAW,SAASiF,KAAK,UAAUtB,MAAOkE,EAAOL,cAAe/D,SA7BlE,SAAC7E,GAC/BkJ,EAAU,eAAID,EAAL,CAAaL,cAAc5I,EAAM8E,OAAOC,WA6B7B,kBAAC0I,GAAA,EAAD,CAAkB1I,MAAM,OAAO2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,yBAC5D,kBAACmO,GAAA,EAAD,CAAkB1I,MAAM,QAAQ2I,QAAS,kBAACC,GAAA,EAAD,MAAWnD,MAAOlL,EAAE,2BAMzE,kBAAC6E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC6F,EAAA,EAAD,CAAO3N,UAAW6C,EAAQuD,OAAO,gCAAQ,4BAAKrD,EAAE,wDAAP,KAAiE,6BAAjE,kJAG7C,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOJ,gBAChBhE,SAAUoK,EACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,kDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOH,gBAChBjE,SAAUoK,EACV5I,KAAK,oBAGbmE,MAAOlL,EAAE,oDAIjB,kBAAC6E,EAAA,EAAD,CAAM8F,WAAS,EAAC7F,MAAI,EAACC,GAAI,IACrB,kBAACoJ,GAAA,EAAD,CACIC,QACI,kBAACpC,GAAA,EAAD,CACIC,QAAStC,EAAOF,UAChBlE,SAAUoK,EACV5I,KAAK,cAGbmE,MAAOlL,EAAE,yBAAyB,+BCzGpD5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CAEFvL,SAAU,GAEdqE,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAOI,EAAMsR,QAAQC,KAAKC,eAQlC,SAASC,GAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,WAA+B,EAAnBjJ,KAAmB,EAAb6C,UAGxC,OAAQoG,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MAEX,QACI,MAAO,gBAIJ,SAASC,KACNlQ,cAANC,EADuC,IAEzCF,EAAU1B,KAF8B,EAGVwB,IAAMK,SAAS,GAHL,mBAGvC+P,EAHuC,KAG3BE,EAH2B,OAIhBtQ,IAAMK,SAAS,IAAIkQ,KAJH,mBAIvCC,EAJuC,KAI9BC,EAJ8B,KAKxCC,EA9BC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAyBkB,EAMlB1Q,IAAMK,SAAS,IANG,mBAMvC0J,EANuC,KAM/BC,EAN+B,OAOpBtM,qBAAWoc,IAPS,gCAQN9Z,IAAMK,SAAS,IAAIsG,OARb,mBAWxCiK,GAXwC,UAWvB,SAACC,GACpB,OAAgB,KAATA,IAGLC,EAAgB,SAACD,GACnB,OAAOL,EAAQO,IAAIF,IAiDvB,OACI,kBAAC,IAAMG,SAAP,KACI,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACZ,yBAAK9T,UAAW6C,EAAQiK,MACpB,kBAAC,EAAD,MACA,kBAACiH,EAAA,EAAD,CAAShB,WAAYA,GAChBM,EAAM3E,KAAI,SAACT,EAAO+F,GACf,IAAMC,EAAY,GACZC,EAAa,GAOnB,OANIX,EAAeS,KACfE,EAAWC,SAAW,kBAAC9O,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAEtBmO,EAAcO,KACdC,EAAUG,WAAY,GAGtB,kBAACC,EAAA,EAAD,eAAMzF,IAAKX,GAAWgG,GAClB,kBAACK,EAAA,EAAcJ,EAAajG,QAK5C,6BACK8E,IAAeM,EAAMkB,OAClB,6BACI,kBAAClP,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAA/B,yCAGA,kBAAC7J,EAAA,EAAD,CAAQvF,QA5ChB,WAChB+S,EAAc,IA2CwCjT,UAAW6C,EAAQ+C,QAAjD,UAKA,6BACI,yBAAK5F,UAAW6C,EAAQyM,cAIhB,kBAAC,GAAD,CAAgByD,WAAYA,EAAYjJ,KAAM4C,EAAO5C,KAAM6C,UAAWA,KAG9E,6BACI,kBAAClH,EAAA,EAAD,CAAQ+O,SAAyB,IAAfzB,EAAkB7S,QA7ErD,WACf+S,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,MA4EsCzU,UAAW6C,EAAQ+C,QAA5E,QAGC2N,EAAeR,IACZ,kBAACtN,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAhFzB,WACf,IAAKqT,EAAeR,GAGhB,MAAM,IAAI2B,MAAM,8CAGpBzB,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,GAAW,SAACuB,GACR,IAAMC,EAAa,IAAI1B,IAAIyB,EAAYjI,UAEvC,OADAkI,EAAWC,IAAI9B,GACR6B,MAsE6B5U,UAAW6C,EAAQ+C,QAJvB,QAUJ,kBAACH,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAAS6S,IAAeM,EAAMkB,OAAS,EAvE1D,aAnCF,SAACvN,GAChBA,EAAEE,iBACF,IAAI0N,EAAazB,EACbM,EAAcV,KACd6B,EAAa,IAAI1B,IAAI0B,EAAWlI,WACrBuI,OAAOlC,GAGtBE,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,EAAWwB,IAkGyB5U,UAAW6C,EAAQ+C,QAEtBmN,IAAeM,EAAMkB,OAAS,EAAI,SAAW,cChMtF,IAOmBtH,GAPE,WACjB,OACI,+BCKWA,GAPE,WACjB,OACI,+BCKWA,GAPE,WACjB,OACI,+BCKWA,GAPE,WACjB,OACI,+BCKWA,GAPE,WACjB,OACI,+BCKWA,GAPE,WACjB,OACI,+BCHK8P,GAAoBld,0BCmB3BsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyL,KAAM,CAEFvL,SAAU,GAEdqE,OAAQ,CACJnE,YAAaJ,EAAMK,QAAQ,IAE/B4N,aAAc,CACVC,UAAWlO,EAAMK,QAAQ,GACzB8N,aAAcnO,EAAMK,QAAQ,IAEhC0E,MAAO,CACHnE,QAASZ,EAAMK,QAAQ,GACvBwE,UAAW,SACXjF,MAAOI,EAAMsR,QAAQC,KAAKC,eAQlC,SAASC,GAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,WAA+B,EAAnBjJ,KAAmB,EAAb6C,UAGxC,OAAQoG,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MACX,KAAK,EACD,OAAO,kBAAC,GAAD,MAEX,QACI,MAAO,gBAIJ,SAASC,KACNlQ,cAANC,EADuC,IAEzCF,EAAU1B,KAF8B,EAGVwB,IAAMK,SAAS,GAHL,mBAGvC+P,EAHuC,KAG3BE,EAH2B,OAIhBtQ,IAAMK,SAAS,IAAIkQ,KAJH,mBAIvCC,EAJuC,KAI9BC,EAJ8B,KAKxCC,EA9BC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAyBkB,EAMlB1Q,IAAMK,SAAS,IANG,mBAMvC0J,EANuC,KAM/BC,EAN+B,OAOpBtM,qBAAW0c,IAPS,gCAQNpa,IAAMK,SAAS,IAAIsG,OARb,mBAWxCiK,GAXwC,UAWvB,SAACC,GACpB,OAAgB,KAATA,IAGLC,EAAgB,SAACD,GACnB,OAAOL,EAAQO,IAAIF,IAiDvB,OACI,kBAAC,IAAMG,SAAP,KACI,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACZ,yBAAK9T,UAAW6C,EAAQiK,MACpB,kBAAC,EAAD,MACA,kBAACiH,EAAA,EAAD,CAAShB,WAAYA,GAChBM,EAAM3E,KAAI,SAACT,EAAO+F,GACf,IAAMC,EAAY,GACZC,EAAa,GAOnB,OANIX,EAAeS,KACfE,EAAWC,SAAW,kBAAC9O,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAEtBmO,EAAcO,KACdC,EAAUG,WAAY,GAGtB,kBAACC,EAAA,EAAD,eAAMzF,IAAKX,GAAWgG,GAClB,kBAACK,EAAA,EAAcJ,EAAajG,QAK5C,6BACK8E,IAAeM,EAAMkB,OAClB,6BACI,kBAAClP,EAAA,EAAD,CAAYrF,UAAW6C,EAAQyM,cAA/B,yCAGA,kBAAC7J,EAAA,EAAD,CAAQvF,QA5ChB,WAChB+S,EAAc,IA2CwCjT,UAAW6C,EAAQ+C,QAAjD,UAKA,6BACI,yBAAK5F,UAAW6C,EAAQyM,cAIhB,kBAAC,GAAD,CAAgByD,WAAYA,EAAYjJ,KAAM4C,EAAO5C,KAAM6C,UAAWA,KAG9E,6BACI,kBAAClH,EAAA,EAAD,CAAQ+O,SAAyB,IAAfzB,EAAkB7S,QA7ErD,WACf+S,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,MA4EsCzU,UAAW6C,EAAQ+C,QAA5E,QAGC2N,EAAeR,IACZ,kBAACtN,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAhFzB,WACf,IAAKqT,EAAeR,GAGhB,MAAM,IAAI2B,MAAM,8CAGpBzB,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,GAAW,SAACuB,GACR,IAAMC,EAAa,IAAI1B,IAAIyB,EAAYjI,UAEvC,OADAkI,EAAWC,IAAI9B,GACR6B,MAsE6B5U,UAAW6C,EAAQ+C,QAJvB,QAUJ,kBAACH,EAAA,EAAD,CACIH,QAAQ,YACRrE,MAAM,UACNf,QAAS6S,IAAeM,EAAMkB,OAAS,EAvE1D,aAnCF,SAACvN,GAChBA,EAAEE,iBACF,IAAI0N,EAAazB,EACbM,EAAcV,KACd6B,EAAa,IAAI1B,IAAI0B,EAAWlI,WACrBuI,OAAOlC,GAGtBE,GAAc,SAACwB,GAAD,OAAoBA,EAAiB,KACnDrB,EAAWwB,IAkGyB5U,UAAW6C,EAAQ+C,QAEtBmN,IAAeM,EAAMkB,OAAS,EAAI,SAAW,cChM/E,IAAMyI,GAAiBnd,0BAEjBod,GAAa,SAAAld,GAAU,IAAD,EACHiD,mBAAS,CACjCiG,aAAc,GACdC,SAAU,GACVC,SAAU,GACVC,gBAAiB,GACjBC,KAAM,IAAIC,OANiB,mBACxBoD,EADwB,KAChBC,EADgB,KAU/B,OACI,kBAACqQ,GAAepQ,SAAhB,CAAyBpE,MAAO,CAACkE,EAAQC,IACpC5M,EAAM8M,WCAb1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,MACRM,WAAY,OACZlF,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBK,QAAS,GAKT6W,KAAK,CACDC,OAAQ,GAGZ/H,KAAM,CACF9S,MAAO,MACPyF,OAAQ,QACRrC,SAAU,OACVP,gBAAiB,UACjBU,OAAQ,OACRM,WAAY,OACZH,aAAa,QAGhB+R,KAAM,CACHzV,MAAO,MACNyF,OAAQ,cACRrC,SAAU,OACVP,gBAAiB,UACjBU,OAAQ,OACRM,WAAY,OACZG,cAAc,OACdN,aAAc,QAGnBiB,EAAG,CACChF,QAAS,MACTsN,UAAW,MACX8F,eAAgB,YAChBzT,QAAQ,UAGZ0T,GAAI,CACApP,UAAW,OACXC,WAAY,OACZoJ,UAAW,OACX7J,SAAU,OACVgS,WAAW,OACXzW,MAAO,SAEXsU,GAAI,CACArP,UAAW,OACXC,WAAY,OACZlF,MAAO,SAEXmc,GAAI,CACAlX,UAAW,OACXqJ,UAAW,OACXpJ,WAAY,OACZuR,WAAY,QAEhB2F,GAAI,CACAnX,UAAW,OACXC,WAAY,YAKpB,SAAS2R,KACL,IAAIE,EAAUjB,SAASC,eAAe,SAASxO,MAE/CmN,OAAOC,SAAS+B,KAAO,qBAAuBK,EA6EnCsF,OAhEf,WAEI,IAAMza,EAAU1B,KAFG,EAGC2B,cAAZC,EAHW,EAGXA,EAEF0T,GALa,EAGRvX,KAEK,CACZqe,MAFWnH,UAdnB,SAA0BX,GAGtB,IAFA,IACMC,EADQC,OAAOC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KAChBC,EAAI,EAAGA,EAAIN,EAAKnB,OAAQyB,IAAK,CAClC,IAAMC,EAAOP,EAAKM,GAAGD,MAAM,KAC3B,GAAIE,EAAK,IAAMR,EAAY,OAAOQ,EAAK,GAE3C,OAAQ,EAOiBT,CAAiB,WA0BtC,OArBJV,IAAMzN,KAAK,+CAAgDoP,GAAS1B,MAAK,SAACrN,GACtE,IAAMgP,EAAOhP,EAASD,KAAK8M,OACrB9M,EAAOC,EAASD,KAChB2N,EAAO2B,SAASC,eAAe,QAC/Be,EAAOhB,SAASC,eAAe,QACjCN,EAAO,GACPtB,EAAKqC,UACD,+BAAiChQ,EAAK,GAAG8V,MAAzC,oCACiC9V,EAAK,GAAG+V,QAAU,OACvDzF,EAAKN,UACD,4EACiChQ,EAAK,GAAGgW,OAAS,SAEtDrI,EAAKqC,UACD,kEACJM,EAAK2F,OAAO,aAEpBtG,OAAM,SAACvQ,GACHU,QAAQC,IAAIX,MAIR,yBAAK7G,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,UAA/F,kBAMZ,yBAAKjB,UAAW6C,EAAQwD,SACpB,kBAAC+R,GAAA,EAAD,CAAWpY,UAAW6C,EAAQwV,UAAWhU,GAAG,QAAQiB,QAAQ,WAAW2I,MAAM,kBAAkB/I,MAAO,CAAE5C,MAAO,MAAOiN,UAAW,OAAQrN,YAAa,OAAQ8D,aAAc,UAC5K,kBAACP,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAEqK,UAAW,QAAUrP,QAAS4X,IAA/H,IAAuI/U,EAAE,WACzI,kBAAC,IAAD,CAAMyC,GAAG,aAAY,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAEC,gBAAiB,UAAW1D,YAAa,OAAQ8N,UAAW,SAA7J,IAA0KxM,EAAE,UACjM,yBAAK/C,UAAW6C,EAAQuS,KAAM/Q,GAAG,SAEjC,yBAAKrE,UAAW6C,EAAQkV,KAAM1T,GAAG,UAGrC,yBAAKrE,UAAW6C,EAAQqa,MACpB,kBAAClY,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,cAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,UAAhF,wEChJtBf,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,OAAQ,CACJC,OAAQ,MACRM,WAAY,OACZlF,MAAO,QACPyE,SAAU,OACVP,gBAAiB,UACjBW,UAAW,OACXC,SAAU,mBACVC,aAAc,QAElBK,QAAS,CACLC,cAAe,MACfC,WAAY,OAEhB6O,KAAM,CACF9S,MAAO,MACPoD,SAAU,OACVkS,MAAM,QAGTG,KAAM,CACHzV,MAAO,MACPoD,SAAU,OACVkS,MAAO,SAGX3Q,EAAG,CACChF,QAAS,MACTsN,UAAW,MACX8F,eAAgB,YAChBzT,QAAQ,UAGZ+b,EAAG,CACCzX,UAAW,SACXR,SAAU,OACV9D,QAAS,cAMjB,SAASkW,KACL,IAAIE,EAAUjB,SAASC,eAAe,SAASxO,MAE/CmN,OAAOC,SAAS+B,KAAO,qBAAuBK,EA2DnC4F,OAxDf,WAEI,IAAM/a,EAAU1B,KAFE,EAGE2B,cAAZC,EAHU,EAGVA,EAHU,KAGP7D,KACiB8D,mBAAS,CACrCmT,OAAS,GACT8B,MAAQ,GACRC,OAAS,MAPS,gCASWlV,mBAAS,KATpB,mBA2Bd,OA3Bc,UAWlB8R,IAAMqD,IAAI,yCAAyCpD,MAAK,SAACrN,GACrD,IAAMgP,EAAOhP,EAASD,KAAK8M,OAG3BhN,QAAQC,IAAIE,EAASD,MAErB,IAAK,IAAIuO,EAAI,EAAGA,EAAGU,EAAMV,IACS,GAA1BtO,EAASD,KAAKuO,GAAGiC,QAEjBlB,SAASC,eAAetP,EAASD,KAAK,GAAG0O,QAAQjR,MAAQ,kEAGrEkS,OAAM,SAACvQ,GACHU,QAAQC,IAAIX,MAIR,yBAAK7G,UAAU,aACX,kBAAC,EAAD,MACA,6BACI,kBAACgF,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,YAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYrF,UAAW6C,EAAQlB,MAAO2D,QAAQ,KAAKC,QAAM,EAACL,MAAO,CAAEhD,YAAa,OAAQjB,MAAO,UAA/F,kCAMZ,yBAAKjB,UAAW6C,EAAQwD,SACpB,kBAAC+R,GAAA,EAAD,CAAWpY,UAAW6C,EAAQwV,UAAWhU,GAAG,QAAQiB,QAAQ,WAAW2I,MAAM,kBAAkB/I,MAAO,CAAE5C,MAAO,MAAOiN,UAAW,OAAQrN,YAAa,OAAQ8D,aAAc,UAC5K,kBAACP,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAEqK,UAAW,QAAUrP,QAAS4X,IAA/H,IAAuI/U,EAAE,WACzI,6BACA,6BACA,6BACA,6BACJ,uBAAG/C,UAAW6C,EAAQ8a,GAAtB,2BACA,kBAAClY,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,GAAvF,IAA0F3G,EAAE,cAC5F,uBAAG/C,UAAW6C,EAAQ8a,GAAtB,uCACA,kBAAC,IAAD,CAAMnY,GAAG,aAAY,kBAACC,EAAA,EAAD,CAAQzF,UAAW6C,EAAQ+C,OAAQN,QAAQ,YAAYrE,MAAM,UAAUyI,kBAAgB,EAACxE,MAAO,CAAEC,gBAAiB,UAAW1D,YAAa,SAA1I,IAAuJsB,EAAE,WAE9K,kBAAC,EAAD,QCCD8a,OAhFf,WAAgB,IAAD,EAEmB7a,mBAAS,CACvCnC,WAAOC,EACPH,UAAMG,IAJK,mBAENP,EAFM,KAEIC,EAFJ,KAgCb,OAzBAuI,qBAAU,YACW,uCAAG,8BAAA9B,EAAA,6DAEN,QADVpG,EAAQE,aAAa+c,QAAQ,iBAE/B/c,aAAaC,QAAQ,aAAc,IACnCH,EAAQ,IAJU,SAMGuG,IAAMC,KAC3B,0CACA,KACA,CAAEyB,QAAS,CAAE,eAAgBjI,KATX,kBAWP4G,KAXO,iCAYIL,IAAM+Q,IAAI,8BAA+B,CAC7DrP,QAAS,CAAE,eAAgBjI,KAbX,OAYZkd,EAZY,OAelBvd,EAAY,CACVK,QACAF,KAAMod,EAAQtW,OAjBE,4CAAH,qDAqBnBuW,KACC,IAGD,oCACA,kBAAC,IAAD,KACE,kBAAC1d,EAAYsM,SAAb,CAAsBpE,MAAO,CAAEjI,WAAUC,gBACvC,kBAAC,GAAD,KACA,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAOyd,OAAK,EAACC,KAAK,IAAInN,UAAWoN,MAGnC,kBAAC,IAAD,CAAOD,KAAK,UAAUnN,UAAWvK,IACjC,kBAAC,IAAD,CAAO0X,KAAK,YAAYnN,UAAWqN,IACnC,kBAAC,IAAD,CAAOF,KAAK,YAAYnN,UAAWpH,IACnC,kBAAC,IAAD,CAAOuU,KAAK,OAAOnN,UAAWsN,IAG9B,kBAAC,IAAD,CAAOH,KAAK,cAAcnN,UAAWuN,KAErC,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAOJ,KAAK,mBAAmBnN,UAAWwN,MAG5C,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAOL,KAAK,uBAAuBnN,UAAWyN,MAGhD,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAON,KAAK,cAAcnN,UAAW0N,MAIvC,kBAAC,IAAD,CAAOP,KAAK,cAAcnN,UAAW2N,KAGrC,kBAAC,IAAD,CAAOR,KAAK,WAAWnN,UAAW4N,KAClC,kBAAC,IAAD,CAAOT,KAAK,YAAYnN,UAAWoE,KACnC,kBAAC,IAAD,CAAO+I,KAAK,kBAAkBnN,UAAWmF,KACzC,kBAAC,IAAD,CAAOgI,KAAK,eAAenN,UAAW6N,KACtC,kBAAC,IAAD,CAAOV,KAAK,eAAenN,UAAW8G,KACtC,kBAAC,IAAD,CAAOqG,KAAK,cAAcnN,UAAW6M,KACrC,kBAAC,IAAD,CAAOM,KAAK,eAAenN,UAAWuM,UChG1Bha,QACW,cAA7BqS,OAAOC,SAASiJ,UAEe,UAA7BlJ,OAAOC,SAASiJ,UAEhBlJ,OAAOC,SAASiJ,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,WAAD,CAAUC,SAAS,WACnB,kBAAC,GAAD,QAGFnI,SAASC,eAAe,SDqHpB,kBAAmBmI,WACrBA,UAAUC,cAAcC,MACrBtK,MAAK,SAAAuK,GACJA,EAAaC,gBAEdnI,OAAM,SAAAvQ,GACLU,QAAQV,MAAMA,EAAM5G,a","file":"static/js/main.5d1ada5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/human-image1.7cf00f36.png\";","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nconst languages = ['en', 'ko', 'ch', 'po']\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    whitelist: languages,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import {createContext } from 'react';\n\nexport default createContext(null);","import React from 'react'\n\nconst errormsg = (props) => {\n    return (\n        <div className=\"error-notice\">\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    )\n}\n\nexport default errormsg\n","import React, {useContext} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { unsupportedProp } from '@material-ui/core';\n\nconst AuthOptions = () => {\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const register = () => history.push(\"/register\");\n    const Login1 = () => history.push(\"/login1\")\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined,\n        });\n        localStorage.setItem(\"auth-token\", \"\")\n    }\n    return (\n        <div>\n            {\n                userData.user ? (\n                    <IconButton onClick={logout} color=\"inherit\" className=\"button-border\"><span>Log out</span></IconButton>\n                ) : (\n                        <>\n                            <IconButton onClick={register} color=\"inherit\" className=\"button-border\"><span >Reguster</span></IconButton>\n                            <IconButton onClick={Login1} color=\"inherit\" className=\"button-border\"><span>Log in</span></IconButton>\n                        </>\n                    )}\n        </div>\n    )\n}\nexport default AuthOptions ;\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport GTranslateIcon from '@material-ui/icons/GTranslate';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport AuthOptions from './auth/AuthOptions';\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  \n  \n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const menu = React.createRef();\n  const classes = useStyles();\n  const { t, i18n } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const changelanguage = (lang) => () =>{\n    i18n.changeLanguage(lang);\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={changelanguage('en')}>En</MenuItem>\n      <MenuItem onClick={changelanguage('ch')}>Ch</MenuItem>\n      <MenuItem onClick={changelanguage('ko')}>ko</MenuItem>\n      <MenuItem onClick={changelanguage('po')}>po</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      ref={menu}\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      \n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <GTranslateIcon />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  const [age, setAge] = React.useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" style={{backgroundColor:\"#eb5757b5\",}}>\n        <Toolbar>\n          \n          <Typography className={classes.title} variant=\"h4\" noWrap>\n          <Link to=\"/homepage\" ><Button style={{fontSize:32, color: \"white\"}}>MIP</Button></Link> \n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <AuthOptions />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            ><span>\n              <span><GTranslateIcon /></span>\n              <span>Language</span>\n              </span>\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nimport UserContext from '../context/UserContext';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Grid from '@material-ui/core/Grid';\nimport Errormsg from './errormsg';\nimport Nav from \"../nav\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"14px\",\n        color: \"black\",\n        fontSize: \"16px\",\n        backgroundColor: \"#57EBEB\",\n        minHeight: \"75px\",\n        minWidth: \"200px !important\",\n        borderRadius: \"46px\"\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#eb57577a',\n    },\n    content: {\n        paddingBottom: \"600px\",\n        paddingTop: \"39px\",\n\n    }\n}));\n\nexport default function Login1() {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState(\"\");\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const BACK_SERVER_URL = \"\";\n    const submit = async (e) =>{\n        e.preventDefault();\n        try{\n        const loginUser = {email, password};\n        const loginRes = await Axios.post(\n           `${BACK_SERVER_URL}/user/login`,\n           //'http://localhost:5000/user/login',\n            loginUser\n            );\n           console.log(`${BACK_SERVER_URL}`)\n        setUserData({\n            token: loginRes.data.token,\n            user: loginRes.data.user,\n        });\n        localStorage.setItem(\"auth-token\", loginRes.data.token);\n        history.push(\"/homepage\");\n        //window.location = '/homepage';\n    } catch (err) {\n        err.response.data.msg && setError(err.response.data.msg);\n    }\n        \n    }\n    return (\n        <div className=\"container\">\n            <Nav />\n      <br/>\n           <Grid className={classes.labelAligne} item xs={12}>\n               <h3 className=\"form\" style={{ textAlign: \"center\", width:700, backgroundColor:\"#f18888\", color:\"white\", borderRadius:5, height:53 }}>{t('registration.login')}</h3>\n               {error && (\n                <Errormsg message={error} clearError={() => setError(undefined)} />\n                )}\n              <form className=\"form\" onSubmit={submit}>\n               <FormControl  className=''>\n                   <InputLabel htmlFor=\"login-email\">{t('registration.email')}</InputLabel>\n                   <Input\n                       id=\"login-email\"\n                       type=\"email\"\n                       onChange={(e) => setEmail(e.target.value)}\n                   />\n               </FormControl>\n                <br/>\n               <FormControl  className=''>\n                   <InputLabel htmlFor=\"login-password\">{t('registration.password')}</InputLabel>\n                   <Input\n                       id=\"login-password\"\n                       type=\"password\"\n                       onChange={(e) => setPassword(e.target.value)}\n                   />\n               </FormControl>\n                <br/>\n       <input type=\"submit\" value=\"Submit\" />\n               </form>\n           </Grid>\n   </div>\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  \n  \n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimaryFooter() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n \n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" style={{backgroundColor:\"#eb5757b5\",}}>\n        <Toolbar>\n          \n          <Typography className={classes.title} variant=\"h6\" noWrap style={{paddingLeft: \"133px\"}}>\n           Copyright 2019 ETL (Eiko Takaoka Laboratory, Sophia University)\n          </Typography>\n          \n          <div className={classes.grow} />\n         \n         \n        </Toolbar>\n      </AppBar>\n    \n      {renderMenu}\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"./nav.js\";\nimport Footer from \"./footer\";\nimport '../App.css';\nimport Axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport UserContext from './context/UserContext.js';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"14px\",\n    color: \"black\",\n    fontSize: \"16px\",\n    backgroundColor: \"#57EBEB\",\n    minHeight: \"75px\",\n    minWidth: \"200px !important\",\n    borderRadius: \"46px\"\n  },\n  content: {\n    paddingBottom: \"600px\",\n    paddingTop: \"39px\"\n  }\n}));\n\nfunction Homepage() {\n  const classes = useStyles();\n  const { t, i18n } = useTranslation();\n  const { userData } = useContext(UserContext);\n  const history = useHistory();\n\n  const authAxios = Axios.create({\n    baseURL: \"http://localhost:5000\",\n    headers: {\n      'x-auth-token': userData.token,\n    },\n  });\n\n  useEffect(() => {\n    if (!userData.user) history.push(\"/login1\");\nconsole.log(userData);\n    if (userData.user) {\n      try{\n        const logFunction = async () => {\n          const loginfo = {\n            inteviewName: \"Home page\",\n            userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: '',\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n        }\n        logFunction();\n      } catch (err) {\n       console.log(err);\n       \n      }\n    }\n   \n  });\n\n  return (\n    <div className=\"container\">\n      <Nav />\n      <div className={classes.content} style={{}}>\n\n        <Link to=\"/internalMedcine\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation > {t('InternalMedcine')}</Button></Link>\n        <Link to=\"/obstetricgynecology\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Obstetricgynecology')}</Button></Link>\n        <Link to=\"/cardiology\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Cardiology')}</Button></Link>\n        <Link to=\"/gastrology\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Gastroenterology')}</Button></Link>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Psychiatry')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Pediatrics')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Surgery')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('VascularSurgery')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Neurosugery')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Orthopedicsurgery')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Opthalmology')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Otolaryngology')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Dentistery')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Urology')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Dermatology')}</Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Obstetricgynecology')}</Button>\n        <Link to=\"../diaLect/dialect\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('dialect')}</Button></Link>\n      </div>\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from 'react';\nimport Nav from \"./nav.js\";\nimport '../App.css';\n\nfunction Inteview() {\n  return (\n    <div className=\"App\">\n         <Nav />\n       <h1>inteview</h1>\n    </div>\n  );\n}\n\nexport default Inteview;","import React, {useState, createContext} from 'react';\n\nexport const MedContext = createContext();\n\nexport const InternalMedContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n \n        problemtoday : [],\n        stools : [],\n        stoolfrequency : '',\n       \n        symptomoccur : [],\n        symptomlike : [],\n        scale1to10 : '',\n        symptomstart : new Date,\n        symtomstarttime : new Date,\n        \n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n        \n        \n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n        pregnant : '',\n        breastfeeding : false,\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false,\n\n        bodyPart : []\n    });\n   \n\n    return(\n        <MedContext.Provider value={[values, setValues]}>\n            {props.children}\n        </MedContext.Provider>\n    );\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { MedContext } from '../internalMedContext'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n    gridList: {\n        width: 500,\n        height: 300,\n        textAlign: 'center',\n        margin:10,\n        padding:13\n      },\n      ListItemIcon: {\n          minWidth:32\n      }\n}));\n\nconst CenteredGrid = () => {\n    \n    const foodAlergie = [\n        { name: 'Fish Roe/魚卵', value: 'Fish Roe' },\n        { name: 'Shellfish /貝類', value: 'Shellfish' },\n        { name: 'Milk /甲殻類（エビ、カニ等)', value: 'Milk' },\n        { name: 'Cheese /卵', value: 'Cheese' },\n        { name: 'Buckwheat /魚卵', value: 'Buckwheat' },\n        { name: 'Peanuts /貝類', value: 'Peanuts' },\n        { name: 'Almonds /卵', value: 'Almonds' },\n        { name: 'wheat /小麦', value: 'wheat' },\n        { name: 'soy /大豆', value: 'soy' },\n        { name: 'Kiwifruit /キウイ', value: 'Kiwifruit' },\n        { name: 'Peaches /桃', value: 'Peaches' },\n        { name: 'Yams /山芋', value: 'Yams' },\n        { name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)/青魚\", value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\" },\n        { name: \"Shrimp/Prawns/ Crabs/Lobsters/甲殻類（エビ、カニ等)/発熱\", value: \"Shrimp/Prawns/Crabs/Lobsters\" },\n    ];\n\n    const medecinesAlergie = [\n        {name:\"Alcohol /アルコール\", value:\"Alcohol\"},\n        {name:\"fever reducer /解熱剤\", value:\"fever reducer\"},\n        {name:\"pain killer /痛み止め\", value:\"pain killer\"},\n        {name:\"antibiotics /抗生物質\", value:\"antibiotics\"},\n        {name:\"medicine for stomach and bowels /胃腸薬\", value:\"medicine for stomach and bowels\"},\n        {name:\"anesthetic /麻酔薬\", value:\"antibiotics\"}\n       ];\n\n    const [values, setValues] = useContext(MedContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const [name, setName] = useState('')\n    const [height, setHeight] = useState('')\n    const [weight, setWeight] = useState('')\n    const [date, setDate] = useState('')\n    const [sex, setSex] = useState('');\n\n    const [checkedFood, setCheckedFood] = React.useState([]);\n    const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form1\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleFood = (value) => () => {\n        const currentIndex = values.allergis.foods.indexOf(value.value);\n        const newChecked = [...values.allergis.foods];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        //setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n        setValues({...values, allergis:{...values.allergis, foods:newChecked}})\n        logFunction(\"Food Allergie\")\n    };\n\n    \n    const handleToggleMedecin = (value) => () => {\n        const currentIndex = values.allergis.medcine.indexOf(value.value);\n        const newChecked = [...values.allergis.medcine];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        //setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n        setValues({...values, allergis:{...values.allergis, medcine:newChecked}});\n        logFunction(\"Medicine Allergie\");\n    };\n    //console.log(checkedFood)\n   // console.log(checkedMedecine)\n\n    const updateName = (e) => {\n       // setName(e.target.value);\n        setValues({...values, name:e.target.value})\n        logFunction(\"Patient name\")\n       }\nconsole.log(values)\n\n    const updateHeight = (e) => {\n       // setHeight(e.target.value);\n        setValues({...values, height:e.target.value})\n        logFunction(\"Patient height\")\n    }\n\n    const updateWeight = (e) => {\n        //setWeight(e.target.value);\n        setValues({...values, weight:e.target.value})\n        logFunction(\"Patient Weight\")\n    }\n\n    const updateDate = (date) => {\n        setDate(date)\n        setValues({...values, DateOfBirth:date});\n        logFunction(\"Date of birth\")\n    }\n\n    const updateSex = (event) => {\n       //setSex(event.target.value);\n        setValues({...values, sex:event.target.value});\n        logFunction(\"Patient sex\")\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('internalMedcine.PersonnalInformation')}</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={8}>\n\n                    <FormControl fullWidth className=''>\n                        <InputLabel htmlFor=\"name\">{t('internalMedcine.LastFirstname')} /医療機関記入欄/生年月日（西暦)</InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            //values={name}\n                            defaultValue={values.name}\n                            onChange={updateName}\n                        />\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"yyyy/MM/dd\"\n                                value={values.DateOfBirth}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"height\">{t('internalMedcine.Height')}</InputLabel>\n                            <Input\n                                id=\"height\"\n                                type=\"number\"\n                                //values={height}\n                                defaultValue={values.height}\n                                onChange={updateHeight}\n                            />\n                        </FormControl>\n                        \n                    </Grid>\n\n                </Grid>\n                <Grid item xs={4}>\n                <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"weight\">{t('internalMedcine.Weight')}</InputLabel>\n                            <Input\n                                id=\"weight\"\n                                type=\"number\"\n                                //values={weight}\n                                defaultValue={values.weight}\n                                onChange={updateWeight}\n                            />\n                        </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Sex')}</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.sex}\n                            onChange={updateSex}\n                        >\n                            <MenuItem value=\"Male\">{t('internalMedcine.Male')}</MenuItem>\n                            <MenuItem value=\"Female\">{t('internalMedcine.Female')}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            \n            <Grid item xs={12}>\n                <Paper className={classes.paper}><strong><h4>{t('internalMedcine.Allergie')} /アレルギー</h4></strong></Paper>\n            </Grid>\n            <br />\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Food Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={2}>\n                        {foodAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleFood(value)}>\n                                    <ListItemIcon className={classes.ListItemIcon}>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.foods.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Medicine Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={1} style={{paddingLeft: 62}}>\n                        {medecinesAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedecin(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.medcine.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n\n                    </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext }  from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n       \n        textAlign: 'center',\n        margin:10,\n        padding:3\n      },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\n\n\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const problemtodays = [\n        {name: t('internalMedcine.Fever') + \"/発熱\", value:\"Fever\"},\n        {name: t('internalMedcine.Cough')+\"/咳\", value:\"Cough\"},\n        {name: t('internalMedcine.Runnynose') +\"/鼻水\", value:\"Runnynose\"},\n        {name: t('internalMedcine.Phlegm') +\"/痰\", value:\"Phlegm\"},\n        {name: t('internalMedcine.Difficultybreathing')+\"/息が苦しい\", value:\"Difficultybreathing\"},\n        {name: t('internalMedcine.Palpitation')+\" /動悸\", value:\"Palpitation\"},\n        {name: t('internalMedcine.Feelsulggish')+\" /身体がだるい\", value:\"Feelsulggish\"},\n        {name: t('internalMedcine.Geteasilytired')+\"/疲れやすい\", value:\"Geteasilytired\"},\n        {name: t('internalMedcine.Shortnessof')+\"/息切れ\", value:\"shortness of breath\"},\n        {name: t('internalMedcine.Dizziness')+\" /めまい\", value:\"Dizziness\"},\n        {name: t('internalMedcine.Lossappetite')+\" /食欲がない\", value:\"Lossappetite\"},\n        {name: t('internalMedcine.Vomiting')+\"/嘔吐\", value:\"Vomiting\"},\n        {name: t('internalMedcine.Bloodystool')+\"/血便\", value:\"Bloodystool\"},\n        {name: t('internalMedcine.Frequent')+\"/頻尿\", value:\"frequenturination\"},\n        {name: t('internalMedcine.Bloodyurine')+\"/血尿\", value:\"Bloodyurine\"},\n        {name: t('internalMedcine.Weightloss')+\"/体重減少\", value:\"Weightloss\"},\n        {name: t('internalMedcine.Feelthirsty')+\"/喉が渇く\", value:\"Feelthirsty\"},\n        {name: t('internalMedcine.Hypertension')+\"/高血圧\", value:\"Hypertension\"},\n        {name: t('internalMedcine.Paralysis' )+\"/ 麻痺\", value:\"Paralysis\"},\n        {name: t('internalMedcine.Swelling')+\"/むくみ\", value:\"Swelling\"},\n        {name: t('internalMedcine.Hives')+\"/じんましん\", value:\"Hives\"},\n        {name: t('internalMedcine.Insomnia' ), value:\"Insomnia\"},\n        {name: t('internalMedcine.Numbness')+\"/しびれ\", value:\"Numbness\"},\n        {name: t('internalMedcine.Nausea')+\"/吐き気\", value:\"Nausea\"},\n        {name: t('internalMedcine.Diarrhea')+\"/下痢\", value:\"Diarrhea\"},\n        {name: t('internalMedcine.Itchiness')+\"/かゆみ\", value:\"itchiness\"},\n        {name: t('internalMedcine.Pain')+\"/痛み\", value:\"Pain\"},\n        {name: t('internalMedcine.Other') +\"/その他：\", value:\"others\"},\n        \n       ]\n\n       const stools = [\n        {name: t('internalMedcine.Grayishwhite') +\"/ 灰白色\", value:\"Grayishwhite\"},\n        {name: t('internalMedcine.Brown') +\"/ 茶色\", value:\"Brown\"},\n        {name: t('internalMedcine.Black') +\"/黒色\", value:\"Black\"},\n        {name: t('internalMedcine.bloody') +\"/血便\", value:\"bloody\"},\n        {name: t('internalMedcine.watery') +\"/水様\", value:\"watery\"},\n        {name: t('internalMedcine.Soft') +\"/軟便\", value:\"Soft\"},\n        {name: t('internalMedcine.Hard') +\"/硬い便\", value:\"Hard\"},\n       ]\n    \n\n    const [values, setValues] = useContext(MedContext);\n    const classes = useStyles();\n    const [checkedProblemtoday, setCheckedProblemtoday] = React.useState([]);\n    const [checkedStool, setCheckedStool] = React.useState([]);\n    const [frequency, setFrequency] = React.useState('');\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 2\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleProblemtoday = (object) => () => {\n        const currentIndex = values.problemtoday.indexOf(object.value);\n        const newChecked = [...values.problemtoday];\n        \n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedProblemtoday(newChecked);\n        setValues({...values, problemtoday:newChecked});\n        logFunction(\"What is the problem today\");\n    };\n\n    const handleToggleStool = (object) => () => {\n        const currentIndex = values.stools.indexOf(object.value);\n        const newChecked = [...values.stools];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedStool(newChecked);\n        setValues({...values, stools:newChecked});\n        logFunction(\"How is your stool like\");\n    };\n\n    const updateFrequency = (event) => {\n        setFrequency(event.target.value);\n        setValues({...values, stoolfrequency:event.target.value});\n        logFunction(\"How is your stool frequency\");\n    };\n\n    return (\n\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday')}<br/>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</h4></strong></Paper>\n                    </Grid>\n                    \n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                    <GridList container style={{height:370, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {problemtodays.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleProblemtoday(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.problemtoday.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>Check all that apply about your stool. <br/>/ 便の性状に☑してください</h4></strong></Paper>\n                    </Grid>\n                        \n                    <GridList container style={{height:107, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {stools.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleStool(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.stools.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                    <Grid item xs={6}>\n                    <FormControl fullWidth xs={8} className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Stoolfrequency')}/ 一日の排便回数：</InputLabel>\n                        <Select \n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.stoolfrequency}\n                            onChange={updateFrequency}\n                        >\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                            <MenuItem value={5}>5</MenuItem>\n                        </Select>\n                        </FormControl>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n\n            </div>\n        </div>\n\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport HumanImage from '../img/human-image1.png';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const bodyParts = [\n        { name: \"1- Head /頭\", value: \"head\" },\n        { name: \"2- Eye(right) /目(右)\", value: \"eyeR\" },\n        { name: \"3- Eye(left) /目(左)\", value: \"eyeL1\" },\n        { name: \"4- Ear(right) /耳(右)\", value: \"earR\" },\n        { name: \"5- Ear(left) /耳(左)\", value: \"earL\" },\n        { name: \"6- Nose /鼻\", value: \"nose\" },\n        { name: \"7- Mouth /口\", value: \"mouth\" },\n        { name: \"8- Throat /のど\", value: \"throat\" },\n        { name: \"9- Neck /首\", value: \"eaneckrL\" },\n        { name: \"10- Sholder /肩\", value: \"sholder\" },\n        { name: \"11- Back /背\", value: \"back\" },\n        { name: \"12- Chest /胸\", value: \"chest\" },\n        { name: \"13- Abdoment /腹\", value: \"abdoment\" },\n        { name: \"14- Groin /陰部･性器\", value: \"groin\" },\n        { name: \"15- Arm(right) /腕(右)\", value: \"armR\" },\n        { name: \"16- Arm(left) /腕(左)\", value: \"armL\" },\n        { name: \"17- Hand(right) /手(右)\", value: \"handR\" },\n        { name: \"18- Hand(left) /手(左)\", value: \"handL\" },\n        { name: \"19- Waist /腰\", value: \"waist\" },\n        { name: \"20- Buttocks /尻\", value: \"buttocks\" },\n        { name: \"21- Leg(right) /脚(右)\", value: \"legR\" },\n        { name: \"22- Leg(left) /脚(左)\", value: \"legL\" },\n        { name: \"23- Foot(right) /足(右)\", value: \"footR\" },\n        { name: \"24- Foot(left) /足(左)\", value: \"footL\" },\n        { name: \"25- knee(right) /膝(右)\", value: \"kneeR\" },\n        { name: \"26- knee(left) /膝(左)\", value: \"kneeL\" }\n    ];\n    const [values, setValues] = useContext(MedContext);\n\n    const [checkedBodyParts, setCheckedBodyParts] = React.useState([]);\n    const classes = useStyles();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n      const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 3\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleBodyParts = (object) => () => {\n        const currentIndex = values.bodyPart.indexOf(object.value);\n        const newChecked = [...values.bodyPart];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedBodyParts(newChecked);\n        setValues({...values, bodyPart:newChecked});\n        logFunction(\"Select the place where you feel the symptoms\");\n    };\n\n    //console.log(checkedBodyParts)\n    return (\n        \n            <div>\n                <div className={classes.root}>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <Grid style={{height:700, marginTop:-30, backgroundColor: 'white'}}>\n                            <img src={HumanImage} width=\"80%\" />\n\n                        </Grid>\n                        <Grid item xs={12} style={{ backgroundColor: 'white'}}>\n                            <Paper className={classes.paper}><strong><h5>{t('internalMedcine.selectPlaceSymptom')}</h5></strong></Paper>\n                        </Grid>\n\n                        <GridList container style={{ height: 362, paddingLeft: 20,paddingRight: 20, paddingTop: 16, paddingBottom: 15, backgroundColor: 'white' }} cellHeight={10} className={classes.gridList} cols={3}>\n                            {bodyParts.map((value) => {\n                                const labelId = `checkbox-list-label-${value.name}`;\n\n                                return (\n                                    <ListItem key={value.name} role={undefined} dense button onClick={handleToggleBodyParts(value)}>\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={values.bodyPart.indexOf(value.value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                    </ListItem>\n                                );\n                            })}\n                        </GridList>\n\n                    </Grid>\n\n                </div>\n            </div>\n        \n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Axios from \"axios\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MedContext } from '../internalMedContext'\nimport UserContext from '../context/UserContext.js';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const symptomoccurs = [\n        { name: t('internalMedcine.Morning') + \"/ 朝\", value: \"Morning\" },\n        { name: t('internalMedcine.Daytime') + \"/ 昼\", value: \"Daytime\" },\n        { name: t('internalMedcine.Evening') + \"/ 夕方\", value: \"Evening\" },\n        { name: t('internalMedcine.Whileinbed') + \"/ 就寝中\", value: \"Whileinbed\" },\n        { name: t('internalMedcine.Whenwakingup') + \"/ 朝\", value: \"Whenwakingup\" },\n        { name: t('internalMedcine.Irregular') + \"/ 朝\", value: \"Irregular\" },\n        { name: t('internalMedcine.Other') + \"/ 朝\", value: \"Other\" },\n    ]\n\n    const symptomlikes = [\n        { name: t('internalMedcine.Constant') + \"/ 絶え間なく、続いている\", value: \"Constant\" },\n        { name: t('internalMedcine.symptomcomesgoes') + \"/ 症状が出たり消えたりしている\", value: \"symptomcomesgoes\" },\n        { name: t('internalMedcine.symptomgraduallyworsening') + \"/ 絶え間なく、続いている\", value: \"symptomgraduallyworsening\" },\n        { name: t('internalMedcine.Other') + \"/ その他\", value: \"Other\" },\n    ]\n\n    const [values, setValues] = useContext(MedContext);\n    const classes = useStyles();\n    const [checkedSymptomoccurs, setCheckedSymptomoccurs] = React.useState([]);\n    const [checkedSymptomlikes, setCheckedSymptomlikes] = React.useState([]);\n    const [frequency, setFrequency] = React.useState('');\n    const [date, setDate] = useState(new Date());\n    const [time, setTime] = useState(new Date());\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n      const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form1\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleSymptomlikes = (object) => () => {\n        const currentIndex = values.symptomlike.indexOf(object.value);\n        const newChecked = [...values.symptomlike];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedSymptomlikes(newChecked);\n        setValues({...values, symptomlike:newChecked});\n        logFunction(\"How is the symptom like\");\n    };\n\n    const handleToggleSymptomoccurs = (object) => () => {\n        const currentIndex = values.symptomoccur.indexOf(object.value);\n        const newChecked = [...values.symptomoccur];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedSymptomoccurs(newChecked);\n        setValues({...values, symptomoccur:newChecked});\n        logFunction(\"When does the symptoms occur\");\n    };\n    const updateFrequency = (event) => {\n        setFrequency(event.target.value);\n        setValues({...values, scale1to10:event.target.value});\n        logFunction(\"If you describe the symptom on a scale of 1 - 10, how severe is it? Select the number below.\");\n    };\n\n    const updateDate = (date) => {\n        setDate(date)\n        setValues({...values, symptomstart:date})\n        logFunction(\"When did the symptom start Date\");\n    }\n    const updateTime = (time) => {\n        setTime(time)\n        setValues({...values, symtomstarttime:time})\n        logFunction(\"When did the symptom start Time\");\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomoccur')}? <br />/症状はいつ頃起こりますか？</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomoccurs.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomoccurs(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomoccur.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomlike')}? <br />/症状はどのような性質を持っていますか</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 90, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomlikes.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomlikes(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomlike.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.scale1to10')}<br />/その症状の程度を数字で表すと、どのぐらいですか？下の数字から選びなさい。</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <FormControl fullWidth xs={8} className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Select</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={values.scale1to10}\n                                onChange={updateFrequency}\n                            >\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomstart')}?<br /> /この症状はいつからありますか</h5></strong></Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                            <Grid container justify=\"space-around\">\n\n                                <KeyboardDatePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"date-picker-dialog\"\n                                    label={t('internalMedcine.Dateofbirth')}\n                                    format=\"MM/dd/yyyy\"\n                                    value={values.symptomstart}\n                                    onChange={updateDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                                <KeyboardTimePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"time-picker\"\n                                    label=\"Time picker\"\n                                    value={values.symtomstarttime}\n                                    onChange={updateTime}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change time',\n                                    }} />\n                            </Grid>\n\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n\n    const hadsurgerys = [\n        {name: t('internalMedcine.Eye') +\"/ 目\", value:\"Eye\"},\n        {name: t('internalMedcine.Ear') +\"/ 耳\", value:\"Ear\"},\n        {name: t('internalMedcine.Nose') +\"/ 鼻\", value:\"Nose\"},\n        {name: t('internalMedcine.Mouth') +\"/ 口\", value:\"Mouth\"},\n        {name: t('internalMedcine.Throat') +\"/ のど\", value:\"Throat\"},\n        {name: t('internalMedcine.neck') +\"/ 乳房\", value:\"Neck\"},\n        {name: t('internalMedcine.Brest') +\"/ 乳房\", value:\"Brest\"},\n        {name: t('internalMedcine.Esophagus') +\"/ 食道\", value:\"Esophagus\"},\n        {name: t('internalMedcine.Stomach') +\"/ 胃\", value:\"Stomach\"},\n        {name: t('internalMedcine.Intestines') +\"/ 梅毒\", value:\"Intestines\"},\n        {name: t('internalMedcine.Heart') +\"/ 心臓<\", value:\"Heart\"},\n        {name: t('internalMedcine.Cecum') +\"/ 盲腸\", value:\"Cecum\"},\n        {name: t('internalMedcine.Liver') +\"/ 肝臓\", value:\"Liver\"},\n        {name: t('internalMedcine.Pancreas') +\"/ 膵臓\", value:\"Pancreas\"},\n        {name: t('internalMedcine.kidney') +\"/ 腎臓\", value:\"kidney\"},\n        {name: t('internalMedcine.Ovary') +\"/ 卵巣\", value:\"Ovary\"},\n        {name: t('internalMedcine.Uterus') +\"/ 子宮\", value:\"Uterus\"},\n        {name: t('internalMedcine.Upperlowerlimb') +\"/ 上下肢\", value:\"EUpperlowerlimbye\"},\n        {name: t('internalMedcine.Others') +\"/ その他\", value:\"Others\"}\n       ]\n\n    const onmedications = [\n        {name: t('internalMedcine.Coldmedicine') +\"/ かぜ薬\", value:\"Coldmedicine\"},\n        {name: t('internalMedcine.Feverreducer') +\"/ 朝解熱剤\", value:\"Feverreducer\"},\n        {name: t('internalMedcine.Painkiller') +\"/ 痛み止め\", value:\"Painkiller\"},\n        {name: t('internalMedcine.Anti-suppuration') +\"/ 化膿止め\", value:\"Anti-suppuration\"},\n        {name: t('internalMedcine.Antibiotics') +\"/ 化膿止め\", value:\"Antibiotics\"}\n       ]\n\n       const ondoctorcares = [\n        {name: t('internalMedcine.bronchialasthma') +\"/ 気管支喘息 /発熱\", value:\"bronchialasthma\"},\n        {name: t('internalMedcine.highbloodpressure') +\"/ 絶高血圧\", value:\"highbloodpressure\"},\n        {name: t('internalMedcine.Diabetesmellitus') +\"/ 糖尿病\", value:\"Diabetesmellitus\"},\n        {name: t('internalMedcine.Tuberculosis') +\"/ 結核\", value:\"Tuberculosis\"},\n        {name: t('internalMedcine.Hearttrouble') +\"/ 心臓病\", value:\"Hearttrouble\"},\n        {name: t('internalMedcine.HepatitisB') +\"/ Ｂ型肝炎\", value:\"HepatitisB\"},\n        {name: t('internalMedcine.epatitisC') +\"/ Ｃ型肝炎\", value:\"epatitisC\"},\n        {name: t('internalMedcine.collagenConnectiveTissuedisease') +\"/ 膠原病\", value:\"collagenConnectiveTissuedisease\"},\n        {name: t('internalMedcine.Thyroiddisease') +\"/ 甲状腺の病気\", value:\"Thyroiddisease\"},\n        {name: t('internalMedcine.Cancertumor') +\"/ 血液の病気\", value:\"Cancertumor\"},\n        {name: t('internalMedcine.glaucoma') +\"/ 緑内障\", value:\"glaucoma\"},\n        {name: t('internalMedcine.Gastrointestinaldisorder') +\"/ 胃腸の病気\", value:\"BlooGastrointestinaldisorderddisease\"},\n        {name: t('internalMedcine.Gonorrhea') +\"/ 淋病\", value:\"Gonorrhea\"},\n        {name: t('internalMedcine.Syphilis') +\"/ 梅毒\", value:\"Syphilis\"}\n       ]\n\n    const [values, setValues] = useContext(MedContext);\n    const classes = useStyles();\n    const [medication, setMedication] = React.useState('');\n    const [medicationType, setMedicationType] = React.useState([]);\n    const [doctorcares, setDoctorcares] = React.useState('');\n    const [doctorcaresType, setDoctorcaresType] = React.useState([]);\n    const [hadsurgery, setHadsurgerys] = React.useState('');\n    const [hadsurgerysType, setHadsurgerysType] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n    \n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 5\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleToggleHadsurgerysType = (object) => () => {\n        const currentIndex = values.hadsurgerys.indexOf(object.value);\n        const newChecked = [...values.hadsurgerys];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setHadsurgerysType(newChecked);\n        setValues({...values, hadsurgerys:newChecked});\n        logFunction(\"Have had surgery option\");\n    };\n\n    const handleChangeHadsurgerys = (event) => {\n        setHadsurgerys(event.target.value);\n        setValues({...values, hadsurgery:event.target.value});\n        logFunction(\"Have had surgery\");\n    };\n\n\n    const handleToggleMedicationType = (object) => () => {\n        const currentIndex = values.onmedications.indexOf(object.value);\n        const newChecked = [...values.onmedications];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setMedicationType(newChecked);\n        setValues({...values, onmedications:newChecked});\n        logFunction(\"Are you curently on any medication option\");\n    };\n\n    const handleChange = (event) => {\n        setMedication(event.target.value);\n        setValues({...values, onMedication:event.target.value})\n        logFunction(\"Are you curently on any medication\");\n    };\n\n    const handleToggleDoctorcaresType = (object) => () => {\n        const currentIndex = values.doctorCare.indexOf(object.value);\n        const newChecked = [...values.doctorCare];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setDoctorcaresType(newChecked);\n        setValues({...values, doctorCare:newChecked});\n        logFunction(\"Are you curently on doctor care option\");\n    };\n\n    const handleChangeDoctorcare = (event) => {\n        setDoctorcares(event.target.value);\n        setValues({...values, doctorcare:event.target.value});\n        logFunction(\"Are you curently on doctor care\");\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.currentlyonmedication')} <br />/現在何か薬を飲んでいますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.onMedication} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n\n                <Grid>\n                <div>\n                    {values.onMedication === 'Yes' ? (\n                        <div>\n                        <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {onmedications.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedicationType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.onmedications.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.underdoctorcare')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.doctorcare} onChange={handleChangeDoctorcare}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.doctorcare === 'Yes' ? (\n                        <Grid container item xs={12}>\n                        <FormLabel container style={{marginTop:-25, lineHeight:2, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')} <br/>/「はい」に☑した人は、疾患名リストから選択し、治療していた医療機関名を書いてください。</strong></FormLabel>\n                        <GridList style={{ height: 200, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {ondoctorcares.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleDoctorcaresType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.doctorCare.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </Grid>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.hadsurgery')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.hadsurgery} onChange={handleChangeHadsurgerys}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.hadsurgery === 'Yes' ? (\n                        <div>\n                            <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 233, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {hadsurgerys.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n                           return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleHadsurgerysType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.hadsurgerys.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(MedContext);\n    const [year, setYear] = useState('')\n    const classes = useStyles();\n    const [smokeregularly, setSmokeregularly] = React.useState('No');\n    const [drinkregularly, setDrinkregularly] = React.useState('No');\n    const [frequency, setFrequency] = React.useState('');\n    const [frequencyDuration, setFrequencyDuration] = React.useState('');\n    const [CheckDrink, setCheckDrink] = React.useState({\n        beer: false,\n        wisky: false,\n        japsake: false,\n        wine: false,\n        others: false\n    });\n    const [beerfrequency, setBeerFrequency] = React.useState('');\n    const [wiskyfrequency, setWiskyFrequency] = React.useState('');\n    const [japsakefrequency, setJapsakeFrequency] = React.useState('');\n    const [winefrequency, setWineFrequency] = React.useState('');\n    const [othersfrequency, setOthersFrequency] = React.useState('');\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 6\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }\n\n    const handleChangeCheckDrink = (event) => {\n        const variable = event.target.name;\n        //setCheckDrink({ ...CheckDrink, [event.target.name]: event.target.checked });\n        setValues({...values, drinkeday:{...values.drinkeday, [event.target.name]:event.target.checked}})\n        console.log([event.target.name]);\n        logFunction(\"Do you drink regularly\");\n    };\n\n    const updateBeerFrequency = (event) => {\n        setBeerFrequency(event.target.value);\n        setValues({...values, drinkeday:{...values.drinkeday, nobeer:event.target.value}});\n        logFunction(\"Beer frequency\");\n    };\n\n    const updateWiskyFrequency = (event) => {\n        setWiskyFrequency(event.target.value);\n        setValues({...values, drinkeday:{...values.drinkeday, nowisky:event.target.value}});\n        logFunction(\"wisky frequency\");\n    };\n\n    const updateJapsakeFrequency = (event) => {\n        setJapsakeFrequency(event.target.value);\n        setValues({...values, drinkeday:{...values.drinkeday, nojapsake:event.target.value}});\n        logFunction(\"Japanes sake frequency\");\n    };\n\n    const updateWineFrequency = (event) => {\n        setWineFrequency(event.target.value);\n        setValues({...values, drinkeday:{...values.drinkeday, nowine:event.target.value}});\n        logFunction(\"wine frequency\");\n    };\n\n    const updateOthersFrequency = (event) => {\n        setOthersFrequency(event.target.value);\n        setValues({...values, drinkeday:{...values.drinkeday, noOther:event.target.value}})\n        logFunction(\"Others frequency\");\n    };\n\n    const handleChange = (event) => {\n        setSmokeregularly(event.target.value);\n        setValues({...values, smokeregularly:event.target.value});\n        logFunction(\"Do you smoke regularly or use to smoke\");\n    };\n\n    const handleChangeDrink = (event) => {\n        setDrinkregularly(event.target.value);\n        setValues({...values, drinkregularly:event.target.value});\n        logFunction(\"Do you drink regularly\");\n    };\n\n    const updateFrequency = (event) => {\n        setFrequency(event.target.value);\n        setValues({...values, smokeday:{...values.smokeday, amount:event.target.value}});\n        logFunction(\"Sigarette consumption per day\");\n    };\n\n    const updateFrequencyDuration = (event) => {\n        setFrequencyDuration(event.target.value);\n        setValues({...values, smokeday:{...values.smokeday, duration:event.target.value}});\n        logFunction(\"Duration of smoking\");\n    };\n    const updateYear = (event) => {\n        setYear(event.target.value);\n        setValues({...values, smokeday:{...values.smokeday, yearStop:event.target.value}});\n        logFunction(\"the year you stop smoking\");\n    }\nconsole.log(values)\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.smokeregularly')}? <br />/習慣的に、たばこを吸いますか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.smokeregularly} onChange={handleChange}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseTo\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.smokeregularly === 'Yes') || (values.smokeregularly === 'YesUseTo') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{paddingLeft:16, marginTop: -22, marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Cigaretteconsumption')} /喫煙量</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.amount}\n                                            onChange={updateFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.cigarettesDay')} 本/日</FormHelperText>\n                                       \n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Durationofsmoking')} /喫煙期間</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.duration}\n                                            onChange={updateFrequencyDuration}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.NoofYear')} /年</FormHelperText>\n                                        </FormControl>\n                                </Grid>\n                                <Grid item xs={8}>\n                                    <FormControl fullWidth className=''>\n                                        <InputLabel htmlFor=\"name\">{t('internalMedcine.yearStopSmooking')} /喫煙をやめた年</InputLabel>\n                                        <Input\n                                            id=\"name\"\n                                            type=\"number\"\n                                            values={values.smokeday.yearStop}\n                                            defaultValue={values.smokeday.yearStop}\n                                            onChange={updateYear}\n                                        />\n                                    </FormControl>\n                                </Grid>\n\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.drinkregularly')}? <br />/習慣的にお酒を飲みますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender\" value={values.drinkregularly} onChange={handleChangeDrink}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseToSmook\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.drinkregularly === 'Yes') || (values.drinkregularly === 'YesUseToSmook') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{ paddingLeft:16, marginTop: -22,  marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n                                \n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.beer}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"beer\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Beer')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nobeer}\n                                                onChange={updateBeerFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                            </FormControl>\n                                    </Grid>\n                               \n\n                               \n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.wisky}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"wisky\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Whisky')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -130 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nowisky}\n                                                onChange={updateWiskyFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.japsake}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"japsake\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Japanesesake')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -68 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nojapsake}\n                                                onChange={updateJapsakeFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.wine}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"wine\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Wine')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nowine}\n                                                onChange={updateWineFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.other}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"other\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Other')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.noOther}\n                                                onChange={updateOthersFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(MedContext);\n    const classes = useStyles();\n    const [female, setFemale] = React.useState('No');\n    const [breastFeeding, setBreastFeeding] = React.useState('No');\n    const [SpecialRequest, setSpecialRequest] = React.useState({\n        medicalexpenses: false,\n        haveinterpreter: false,\n        others: false\n    });\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 7\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleChangeCheckSpecialRequest = (event) => {\n        //setSpecialRequest({ ...SpecialRequest, [event.target.name]: event.target.checked });\n        setValues({...values, [event.target.name]:event.target.checked})\n        logFunction(\"Special request concerning consoltation\");\n    };\n\n    const handleChange = (event) => {\n        //setFemale(event.target.value);\n        setValues({...values, pregnant:event.target.value});\n        logFunction(\"Are you pregnant or possibly pregnant\");\n    };\n\n    const handleChangebreastFeeding = (event) => {\n        //setBreastFeeding(event.target.value);\n        setValues({...values, breastfeeding:event.target.value})\n        logFunction(\"Are you breastfeeding\")\n    };\nconsole.log(values)\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.Iffemale')}? <br />/女性の方のみお答えください。妊娠していますか、またその可能性はありますか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.pregnant} onChange={handleChange}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"Don't know\" control={<Radio />} label={t('internalMedcine.Donotknow') + '/わからない'} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.Areyoubreastfeeding')}? <br />/現在、授乳中ですか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.breastfeeding} onChange={handleChangebreastFeeding}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No')} />\n\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.specialrequestconcerningconsultation')}? <br />/診察でのご希望がある場合は、☑をしてください。</h5></strong></Paper>\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.medicalexpenses}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"medicalexpenses\"\n                            />\n                        }\n                        label={t('internalMedcine.informedonestimatedexpenses')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.haveinterpreter}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"haveinterpreter\"\n                            />\n                        }\n                        label={t('internalMedcine.interpreterinterpreterservice')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.otherssss}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"otherssss\"\n                            />\n                        }\n                        label={t('internalMedcine.Other')+'(s)/その他'}\n                    />\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from './nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './inteviewForms/form2'\nimport Form1 from './inteviewForms/form1'\nimport Form3 from './inteviewForms/form3'\nimport Form4 from './inteviewForms/form4'\nimport Form5 from './inteviewForms/form5'\nimport Form6 from './inteviewForms/form6'\nimport Form7 from './inteviewForms/form7'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { InternalMedContext, MedContext } from './internalMedContext';\nimport axios from \"axios\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //width: '100%',\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction getSteps() {\n    return ['', '', '', '', '', '', ''];\n}\n\nfunction GetStepContent({ activeStep, name, setValues }) {\n    //console.log(\"this is the name \"+ values.name);\n\n    switch (activeStep) {\n        case 0:\n            return <Form2\n                name={name}\n                //onChange={(value) =>setValues(value)}\n                setValues={setValues}\n            //setSelectedDate={setSelectedDate}\n            // selectedDate={selectedDate}\n            />;\n        case 1:\n            return <Form1 />;\n        case 2:\n            return <Form3 />;\n        case 3:\n            return <Form4 />;\n        case 4:\n            return <Form5 />;\n        case 5:\n            return <Form6 />;\n        case 6:\n            return <Form7 />;;\n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n    const [values, setValues] = React.useState({});\n    const [datas, setDatas] = useContext(MedContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n\n    const isStepOptional = (step) => {\n        return step === 10;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = (e) => {\n        e.preventDefault();\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const handleSubmit = () =>{\n        //console.log(datas)\n    \n       axios.post('http://localhost:5000/internaMedcine', datas)\n       .then(res => {\n         console.log(res.data)\n        // window.location = '/homepage';\n        });\n       \n      }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <div className={classes.root}>\n                    <Nav />\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            if (isStepOptional(index)) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n                            if (isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    All steps completed - you&apos;re finished\n            </Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                    Reset\n            </Button>\n                            </div>\n                        ) : (\n                                <div>\n                                    <div className={classes.instructions}>\n\n                                        { /*{getStepContent(activeStep, values, classes, t, setValues, setSelectedDate, selectedDate)}*/}\n                                       \n                                            <GetStepContent activeStep={activeStep} name={values.name} setValues={setValues} />\n                                       \n                                    </div>\n                                    <div>\n                                        <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n              </Button>\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={activeStep === steps.length - 1 ?  handleSubmit : handleNext}\n                                            className={classes.button}\n                                        >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"25px\",\n        marginLeft: \"29px\",\n        color: \"black\",\n        fontSize: \"26px\",\n        backgroundColor: \"#F87053\",\n        minHeight: \"175px\",\n        minWidth: \"28%\",\n        borderRadius: \"46px\",\n    },\n    content: {\n        paddingBottom: \"15%\",\n        paddingTop: \"15%\",\n    }\n}));\n\nfunction DialectTest() {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className=\"container\">\n            <Nav />\n            <div>\n                <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                    <Toolbar>\n\n                        <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"black\" }}>\n                            Please tell me where you came from:\n                         </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n            <div className={classes.content} style={{}}>\n\n                <Link to=\"/wakayama\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation > {t('Wakayama')}</Button></Link>\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Oosaka')}</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('Kyoto')}</Button>\n\n            </div>\n            <Footer />\n\n        </div>\n    );\n}\n\nexport default DialectTest;\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"25px\",\n        marginLeft: \"29px\",\n        color: \"white\",\n        fontSize: \"26px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"175px\",\n        minWidth: \"28%\",\n        borderRadius: \"46px\",\n    },\n    content: {\n        paddingBottom: \"15%\",\n        paddingTop: \"15%\",\n    }\n}));\n\nfunction Wakayama() {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className=\"container\">\n            <Nav />\n            <div>\n                <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                    <Toolbar>\n\n                        <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"black\" }}>\n                            Wakayama dialect\n                         </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n            <div className={classes.content} style={{}}>\n\n                <Link to=\"/basicSentences\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation > {t('Basic sentences')}</Button></Link>\n                <Link to=\"/dictionary\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('dictionary')}</Button></Link>\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('translate')}</Button>\n\n            </div>\n            <Footer />\n\n        </div>\n    );\n}\n\nexport default Wakayama;\n\n\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport axios from \"axios\";\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"8px\",\n        marginLeft: \"25px\",\n        marginTop:\"18px\",\n        color: \"white\",\n        fontSize: \"16px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"60px\",\n        minWidth: \"160px !important\", \n        borderRadius: \"10px\",\n    },\n    content: {\n        //paddingBottom: \"10%\",\n        //paddingTop: \"15%\",\n    },\n    div1: {\n        width: \"95%\",\n        height:\"100px\",\n        fontSize: \"26px\",\n        backgroundColor: \"#F2F2F2\",\n        margin: \"20px\",\n        marginLeft:\"20px\"\n    },\n\n    a: {\n        padding: \"3px\",\n        marginTop: \"5px\",\n        textDecoration: \"underline\",\n        display:\"inline\"\n    },\n\n    p1: {\n        textAlign: \"left\",\n        marginLeft:\"10px\"\n    },\n    p2: {\n        textAlign: \"left\",\n        marginLeft: \"10px\",\n        color:\"#6CAFED\"\n    }\n\n}));\n\nfunction getQueryVariable(variable) {\n    const query = window.location.search.substring(1);\n    const vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        const pair = vars[i].split(\"=\");\n        if (pair[0] == variable) { return pair[1]; }\n    }\n    return (false);\n}\n\nfunction BasicSentences() {\n    const letter = (decodeURI(getQueryVariable(\"letter\")));\n    const page = Number(getQueryVariable(\"page\")) || 1;\n    console.log(page);\n    var pageNext = page + 1;\n    var pagePre = page - 1;\n    const h1 = \"http://localhost:3000/fontDetails?letter=\" + letter + \"&page=\" + pageNext;\n    const h2 = \"http://localhost:3000/fontDetails?letter=\" + letter + \"&page=\" + pagePre;\n    const request = {\n        letter: letter,\n        page: page\n    }\n\n    //const test = (a) => {\n    //    const b = a;\n    //    const data = {\n    //        letter: letter,\n    //        page: b\n    //    }\n    //    console.log(data);\n    //    if (a > 1) {\n    //        axios.post('http://localhost:3001/wakayamaPhrase/find', data).then((response) => {\n    //            console.log(response.data);\n    //            const list = response.data.length;\n    //            const data = response.data;\n    //            const phrase = document.getElementById('phrase');\n    //            var code = ' <div class=\"makeStyles-content-2\">';              \n    //            for (var i = 0; i < list; i++) {\n    //                code += '<div class=\"makeStyles-div1-3\">' +\n    //                    '<p class=\"makeStyles-p1-5\" >' + data[i].phraseOri + '</p >' +\n    //                    '<p class=\"makeStyles-p2-6\" >' + data[i].phraseAft + '</p>' +\n    //                    '</div >';\n    //            }\n    //            phrase.innerHTML = code + '<div>';\n    //        }).catch((error) => {\n    //            console.log(error);\n    //        });\n    //    };\n    //}\n    axios.post('http://localhost:3001/wakayamaPhrase/findpage', request).then((response) => {\n        const list = response.data.length;\n        const totalpage = Math.ceil(list / 4);\n        const span = document.getElementById('span');\n        const a1 = document.getElementById('a1');\n        const a2 = document.getElementById('a2');\n        if (page == 1) {\n            a1.style = \"color: #B4C0CB; text-decoration: none;pointer-events: none; padding-right: 20px\";\n        } if (page >= totalpage) {\n            a2.style = \"color: #B4C0CB; text-decoration: none;pointer-events: none; padding-left: 20px\";\n        }\n        span.innerText = page + \"ページ/\" + totalpage + \"ページ\";\n    }).catch((error) => {\n        console.log(error);\n    });\n\n\n    axios.post('http://localhost:3001/wakayamaPhrase/find', request).then((response) => {\n        //console.log(response.data);\n        const list = response.data.length;\n        const data = response.data;\n        const phrase = document.getElementById('phrase');\n        var code = ' <div class=\"makeStyles-content-2\">';\n        for (var i = 0; i < list; i++) {\n            code += '<div class=\"makeStyles-div1-3\">' +\n                '<p class=\"makeStyles-p1-5\" >' + data[i].phraseOri + '</p >' +\n                '<p class=\"makeStyles-p2-6\" >' + data[i].phraseAft + '</p>' +\n                '</div >';\n        }\n        phrase.innerHTML = code + '<div>';\n    }).catch((error) => {\n        console.log(error);\n    });\n\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"white\", fontSize: \"30px\", fontWeight: \"bold\" }}>\n                                {letter}\n                         </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n                <div className={classes.content} id=\"phrase\">\n                    \n                </div>\n                <div>\n                    <a id=\"a1\" href={h2} title=\"前のページ\" style={{ paddingRight: \"20px\" }}>前のページ</a>\n                    <span id=\"span\">0ページ/0ページ</span>  \n                    <a id=\"a2\" href={h1} title=\"次のページ\" style={{ paddingLeft: \"20px\" }}> 次のページ</a>\n                </div>\n                <Link to=\"/basicSentences\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ float: \"left\", backgroundColor: \"#B4C0CB\", marginRight: \"20px\" }} > {t('戻る')}</Button></Link>\n                <Footer />\n\n            </div>\n        );\n   }\n\nexport default BasicSentences;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport axios from \"axios\";\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"8px\",\n        marginLeft: \"25px\",\n        marginTop:\"18px\",\n        color: \"white\",\n        fontSize: \"16px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"60px\",\n        minWidth: \"160px !important\", \n        borderRadius: \"10px\",\n    },\n    content: {\n        //paddingBottom: \"10%\",\n        //paddingTop: \"15%\",\n    },\n    div1: {\n        width: \"95%\",\n        height:\"100px\",\n        fontSize: \"26px\",\n        backgroundColor: \"#F2F2F2\",\n        margin: \"20px\",\n        marginLeft:\"20px\"\n    },\n\n    a: {\n        padding: \"3px\",\n        marginTop: \"5px\",\n        textDecoration: \"underline\",\n        display:\"inline\"\n    },\n\n    p1: {\n        textAlign: \"left\",\n        marginLeft:\"10px\"\n    },\n    p2: {\n        textAlign: \"left\",\n        marginLeft: \"10px\",\n        color:\"#6CAFED\"\n    }\n\n}));\n\nfunction getQueryVariable(variable) {\n    const query = window.location.search.substring(1);\n    const vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        const pair = vars[i].split(\"=\");\n        if (pair[0] == variable) { return pair[1]; }\n    }\n    return (false);\n}\n\nfunction FindDetails() {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n\n    const find = (decodeURI(getQueryVariable(\"find\")));\n    const page = Number(getQueryVariable(\"page\")) || 1;\n    console.log(page);\n    var pageNext = page + 1;\n    var pagePre = page - 1;\n    const h1 = \"http://localhost:3000/findDetails?find=\" + find + \"&page=\" + pageNext;\n    const h2 = \"http://localhost:3000/findDetails?find=\" + find + \"&page=\" + pagePre;\n    const request = {\n        find: find,\n        page: page\n    }\n\n    axios.post('http://localhost:3001/wakayamaPhrase/findpage2', request).then((response) => {\n        const list = response.data.length;\n        const totalpage = Math.ceil(list / 4);\n        const span = document.getElementById('span');\n        const a1 = document.getElementById('a1');\n        const a2 = document.getElementById('a2');\n        const phrase = document.getElementById('phrase');\n        if (page == 1) {\n            a1.style = \"color: #B4C0CB; text-decoration: none;pointer-events: none; padding-right: 20px\";\n        } if (page >= totalpage) {\n            a2.style = \"color: #B4C0CB; text-decoration: none;pointer-events: none; padding-left: 20px\";\n        } \n        span.innerText = page + \"ページ/\" + totalpage + \"ページ\";\n    }).catch((error) => {\n        console.log(error);\n    });\n\n\n    axios.post('http://localhost:3001/wakayamaPhrase/findphrase', request).then((response) => {\n        //console.log(response.data);\n        const list = response.data.length;\n        const data = response.data;\n        const phrase = document.getElementById('phrase');\n        var code = ' <div class=\"makeStyles-content-2\">';\n        if (list > 0) {\n            for (var i = 0; i < list; i++) {\n                code += '<div class=\"makeStyles-div1-3\">' +\n                    '<p class=\"makeStyles-p1-5\" >' + data[i].phraseOri + '</p >' +\n                    '<p class=\"makeStyles-p2-6\" >' + data[i].phraseAft + '</p>' +\n                    '</div >';\n            }\n        } else {\n            code += '<div class=\"makeStyles-div1-3\">' +          \n                '<p>Sorry, we can\\'t find the result</p>' +\n                '</div >';\n        }\n        phrase.innerHTML = code + '<div>';\n    }).catch((error) => {\n        console.log(error);\n    });\n\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"white\", fontSize: \"30px\", fontWeight: \"bold\" }}>\n                             The results of \"{find}\" are :\n                         </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n                <div className={classes.content} id=\"phrase\">\n                    \n                </div>\n                <div>\n                    <a id=\"a1\" href={h2} title=\"前のページ\" style={{ paddingRight: \"20px\" }}>前のページ</a>\n                    <span id=\"span\">0ページ/0ページ</span>  \n                    <a id=\"a2\" href={h1} title=\"次のページ\" style={{ paddingLeft: \"20px\" }}> 次のページ</a>\n                </div>\n                <Link to=\"/basicSentences\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ float: \"left\", backgroundColor: \"#B4C0CB\", marginRight: \"20px\" }} > {t('戻る')}</Button></Link>\n                <Footer />\n\n            </div>\n        );\n   }\n\nexport default FindDetails;\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n//import { SentContext } from './basicSentContext';\nimport axios from \"axios\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"8px\",\n        marginLeft: \"25px\",\n        marginTop:\"18px\",\n        color: \"white\",\n        fontSize: \"16px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"60px\",\n        minWidth: \"160px !important\", \n        borderRadius: \"10px\",\n    },\n    content: {\n        paddingBottom: \"10%\",\n        //paddingTop: \"15%\",\n    },\n    div1: {\n        width: \"40%\",\n        fontSize: \"26px\",\n        float:\"left\"\n    },\n\n     div2: {\n        width: \"45%\",\n        fontSize: \"26px\",\n        float: \"right\"\n    },\n\n    a: {\n        padding: \"3px\",\n        marginTop: \"5px\",\n        textDecoration: \"underline\",\n        display:\"inline\"\n    },\n\n}));\n\n\nfunction find() {\n    var findVal = document.getElementById(\"text1\").value;\n    //alert(findVal);\n    window.location.href = \"/findDetails?find=\" + findVal;\n}\n\nfunction BasicSentences() {\n\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useState({\n    letter : '',\n    count : '',\n    remark : ''\n});\n     const [letter, setLetter] = useState('');\n\n    axios.get('http://localhost:3001/dialectSentence').then((response) => {\n        const list = response.data.length;\n        //javascript:return false;\n        //console.log(list);\n        console.log(response.data);\n        //console.log(response.data[0].letter);\n        for (var i = 0; i< list; i++) {\n            if (response.data[i].count == 0) {\n                //document.getElementById(response.data[0].letter).href = \"javascript:return false\";\n                document.getElementById(response.data[0].letter).style = \"color: #B4C0CB; text-decoration: none;pointer-events: none;\";\n            }\n        }\n}) .catch((error) => {\n        console.log(error);\n    });\n\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"black\" }}>\n                                Basic sentences\n                         </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n                <div className={classes.content}>\n                    <TextField className={classes.textFiled} id=\"text1\" variant=\"outlined\" label=\"Input your sentences\" style={{ width: \"82%\", paddingTop: \"20px\", paddingLeft: \"10px\", borderRadius: \"15px\" }} />\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation onClick={find}> {t('search')}</Button>\n                    <div style={{ border: \"1px solid #6CAFED\", width: \"100%\", height: \"280px\", margin: \"10px\" }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: \"#6CAFED\", height: \"50px\", }}>\n                            <Toolbar>\n                                <Typography className={classes.title} variant=\"h6\" noWrap style={{ marginTop: \"-15px\", color: \"white\" }}>\n                                    Index of phrases\n                            </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <div style={{padding:\"15px\"}}>\n                            <div className={classes.div1}>\n                                <a id=\"あ\" className={classes.a} href=\"/fontDetails?letter=あ\">あ</a>&nbsp;\n                                <a id=\"い\" className={classes.a} href=\"/fontDetails?letter=い\">い</a>&nbsp;\n                                <a id=\"う\" className={classes.a} href=\"/fontDetails?letter=う\">う</a>&nbsp;\n                                <a id=\"え\" className={classes.a} href=\"/fontDetails?letter=え\">え</a>&nbsp;\n                                <a id=\"お\" className={classes.a} href=\"/fontDetails?letter=お\">お</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"か\" className={classes.a} href=\"/fontDetails?letter=か\">か</a>&nbsp;\n                                <a id=\"き\" className={classes.a} href=\"/fontDetails?letter=き\">き</a>&nbsp;\n                                <a id=\"く\" className={classes.a} href=\"/fontDetails?letter=く\">く</a>&nbsp;\n                                <a id=\"け\" className={classes.a} href=\"/fontDetails?letter=け\">け</a>&nbsp;\n                                <a id=\"こ\" className={classes.a} href=\"/fontDetails?letter=こ\">こ</a>&nbsp;<br></br>\n\n                                <a id=\"さ\" className={classes.a} href=\"/fontDetails?letter=さ\">さ</a>&nbsp;\n                                <a id=\"し\" className={classes.a} href=\"/fontDetails?letter=し\">し</a>&nbsp;\n                                <a id=\"す\" className={classes.a} href=\"/fontDetails?letter=す\">す</a>&nbsp;\n                                <a id=\"せ\" className={classes.a} href=\"/fontDetails?letter=せ\">せ</a>&nbsp;\n                                <a id=\"そ\" className={classes.a} href=\"/fontDetails?letter=そ\">そ</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"た\" className={classes.a} href=\"/fontDetails?letter=た\">た</a>&nbsp;\n                                <a id=\"ち\" className={classes.a} href=\"/fontDetails?letter=ち\">ち</a>&nbsp;\n                                <a id=\"つ\" className={classes.a} href=\"/fontDetails?letter=つ\">つ</a>&nbsp;\n                                <a id=\"て\" className={classes.a} href=\"/fontDetails?letter=て\">て</a>&nbsp;\n                                <a id=\"と\" className={classes.a} href=\"/fontDetails?letter=と\">と</a>&nbsp;<br></br>\n\n                                <a id=\"な\" className={classes.a} href=\"/fontDetails?letter=な\">な</a>&nbsp;\n                                <a id=\"に\" className={classes.a} href=\"/fontDetails?letter=に\">に</a>&nbsp;\n                                <a id=\"ぬ\" className={classes.a} href=\"/fontDetails?letter=ぬ\">ぬ</a>&nbsp;\n                                <a id=\"ね\" className={classes.a} href=\"/fontDetails?letter=ね\">ね</a>&nbsp;\n                                <a id=\"の\" className={classes.a} href=\"/fontDetails?letter=の\">の</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"は\" className={classes.a} href=\"/fontDetails?letter=は\">は</a>&nbsp;\n                                <a id=\"ひ\" className={classes.a} href=\"/fontDetails?letter=ひ\">ひ</a>&nbsp;\n                                <a id=\"ふ\" className={classes.a} href=\"/fontDetails?letter=ふ\">ふ</a>&nbsp;\n                                <a id=\"へ\" className={classes.a} href=\"/fontDetails?letter=へ\">へ</a>&nbsp;\n                                <a id=\"ほ\" className={classes.a} href=\"/fontDetails?letter=ほ\">ほ</a>&nbsp;<br></br>\n\n                                <a id=\"ま\" className={classes.a} style={{ marginLeft: \"-70px\" }} href=\"/fontDetails?letter=ま\">ま</a>&nbsp;\n                                <a id=\"み\" className={classes.a} href=\"/fontDetails?letter=み\">み</a>&nbsp;\n                                <a id=\"む\" className={classes.a} href=\"/fontDetails?letter=む\">む</a>&nbsp;\n                                <a id=\"め\" className={classes.a} href=\"/fontDetails?letter=め\">め</a>&nbsp;\n                                <a id=\"も\" className={classes.a} href=\"/fontDetails?letter=も\">も</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"や\" className={classes.a} href=\"/fontDetails?letter=や\">や</a>&nbsp;\n                                <a id=\"ゆ\" className={classes.a} href=\"/fontDetails?letter=ゆ\">ゆ</a>&nbsp;\n                                <a id=\"よ\" className={classes.a} href=\"/fontDetails?letter=よ\">よ</a>&nbsp;<br></br>\n\n                                <a id=\"ら\" className={classes.a} style={{ marginLeft: \"-70px\" }} href=\"/fontDetails?letter=ら\">ら</a>&nbsp;\n                                <a id=\"り\" className={classes.a} href=\"/fontDetails?letter=り\">り</a>&nbsp;\n                                <a id=\"る\" className={classes.a} href=\"/fontDetails?letter=る\">る</a>&nbsp;\n                                <a id=\"れ\" className={classes.a} href=\"/fontDetails?letter=れ\">れ</a>&nbsp;\n                                <a id=\"ろ\" className={classes.a} href=\"/fontDetails?letter=ろ\">ろ</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"わ\" className={classes.a} href=\"/fontDetails?letter=わ\">わ</a>&nbsp;\n                                <a id=\"を\" className={classes.a} href=\"/fontDetails?letter=を\">を</a>&nbsp;\n                                <a id=\"ん\" className={classes.a} href=\"/fontDetails?letter=ん\">ん</a>&nbsp;<br></br>\n                        　　</div>\n                        　　<div className={classes.div2}>\n                                <a id=\"が\" className={classes.a} href=\"/fontDetails?letter=が\">が</a>&nbsp;\n                                <a id=\"ぎ\" className={classes.a} href=\"/fontDetails?letter=ぎ\">ぎ</a>&nbsp;\n                                <a id=\"ぐ\" className={classes.a} href=\"/fontDetails?letter=ぐ\">ぐ</a>&nbsp;\n                                <a id=\"げ\" className={classes.a} href=\"/fontDetails?letter=げ\">げ</a>&nbsp;\n                                <a id=\"ご\" className={classes.a} href=\"/fontDetails?letter=ご\">ご</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"ざ\" className={classes.a} href=\"/fontDetails?letter=ざ\">ざ</a>&nbsp;\n                                <a id=\"じ\" className={classes.a} href=\"/fontDetails?letter=じ\">じ</a>&nbsp;\n                                <a id=\"ず\" className={classes.a} href=\"/fontDetails?letter=ず\">ず</a>&nbsp;\n                                <a id=\"ぜ\" className={classes.a} href=\"/fontDetails?letter=ぜ\">ぜ</a>&nbsp;\n                                <a id=\"ぞ\" className={classes.a} href=\"/fontDetails?letter=ぞ\">ぞ</a>&nbsp;<br></br>\n\n                                <a id=\"だ\" className={classes.a} href=\"/fontDetails?letter=だ\">だ</a>&nbsp;\n                                <a id=\"ぢ\" className={classes.a} href=\"/fontDetails?letter=ぢ\">ぢ</a>&nbsp;\n                                <a id=\"づ\" className={classes.a} href=\"/fontDetails?letter=づ\">づ</a>&nbsp;\n                                <a id=\"で\" className={classes.a} href=\"/fontDetails?letter=で\">で</a>&nbsp;\n                                <a id=\"ど\" className={classes.a} href=\"/fontDetails?letter=ど\">ど</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a id=\"ば\" className={classes.a} href=\"/fontDetails?letter=ば\">ば</a>&nbsp;\n                                <a id=\"び\" className={classes.a} href=\"/fontDetails?letter=び\">び</a>&nbsp;\n                                <a id=\"ぶ\" className={classes.a} href=\"/fontDetails?letter=ぶ\">ぶ</a>&nbsp;\n                                <a id=\"べ\" className={classes.a} href=\"/fontDetails?letter=べ\">べ</a>&nbsp;\n                                <a id=\"ぼ\" className={classes.a} href=\"/fontDetails?letter=ぼ\">ぼ</a>&nbsp;<br></br>\n\n                                <a id=\"ぱ\" className={classes.a} style={{ marginLeft: \"-175px\" }} href=\"/fontDetails?letter=ぱ\">ぱ</a>&nbsp;\n                                <a id=\"ぴ\" className={classes.a} href=\"/fontDetails?letter=ぴ\">ぴ</a>&nbsp;\n                                <a id=\"ぷ\" className={classes.a} href=\"/fontDetails?letter=ぷ\">ぷ</a>&nbsp;\n                                <a id=\"ぺ\" className={classes.a} href=\"/fontDetails?letter=ぺ\">ぺ</a>&nbsp;\n                                <a id=\"ぽ\" className={classes.a} href=\"/fontDetails?letter=ぽ\">ぽ</a>&nbsp;&nbsp;\n                        　　</div>\n                       　</div>\n                    </div>\n                    <Link to=\"/wakayama\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ float: \"right\", backgroundColor: \"#B4C0CB\", marginRight: \"20px\" }} > {t('back')}</Button></Link>\n                </div>\n                <Footer />\n\n            </div>\n        );\n   }\n\nexport default BasicSentences;\n","import React, {useState, createContext} from 'react';\n\nexport const ObstetricContext = createContext();\n\nexport const ObstetricgynecologyContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n        problemtoday : [],\n        menstrualPeriod : {\n            ageStart: '',\n            ageLast: '',\n            daysCycle: '',\n            irregular: false,\n            periodsLast: '',\n            usualFlow: '',\n            painduringyourperiods: false,\n            painkiller: '',\n            dateLastPeriod: new Date,\n        },\n        haveSexualIntercourse: false,\n        hadUterineCancerTest: false,\n        dateHadUterineCancerTest: new Date,\n        takenBirthControlPills: false,\n        pregnantOrPossiblyPregnant: false,\n        noWeeks: '',\n        doNotKnow: false,\n        Areyoubreastfeeding: false,\n        PregnantHistory:'',\n        YesPregnancyHistory: [{\n            date: new Date(),\n            delivery: \"\",\n            hadMiscarriage: \"\",\n            hadAbnomalPregnancy: \"\",\n            weeksPregnanncy : \"\"  \n              }],\n        problemDuringDelivery: false,\n        problemDelivery: [],\n        haveBabyAtThisHuspital: false,\n        symptomLike: false,\n        symptomLikeValue:[],\n        symptomstartDate: new Date(),\n        symptomStartTime: \"\",\n\n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n              \n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false\n      \n    });\n   \n\n    return(\n        <ObstetricContext.Provider value={[values, setValues]}>\n            {props.children}\n        </ObstetricContext.Provider>\n    );\n};","import React, { useEffect, useContext }  from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport { ObstetricContext } from '../ObstetricgynecologyContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n       \n        textAlign: 'center',\n        margin:10,\n        padding:3\n      },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\n\n\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const problemtodays = [\n        {name: t('obstetricGynecology.Pregnancy') + \" /妊娠\", value:\"Pregnancy\"},\n        {name: t('obstetricGynecology.Menstrualdisorder')+\" /月経異常\", value:\"Menstrual disorder\"},\n        {name: t('obstetricGynecology.Menstrualpain') +\" /月経痛\", value:\"Menstrual pain\"},\n        {name: t('obstetricGynecology.Vaginaldischarge') +\" /おりもの\", value:\"Vaginal discharge\"},\n        {name: t('obstetricGynecology.Abnormalvaginalbleeding')+\" /不正出血\", value:\"Abnormal vaginal bleeding\"},\n        {name: t('obstetricGynecology.Painwhenurinating')+\" /排尿時痛\", value:\"Pain when urinating\"},\n        {name: t('obstetricGynecology.Difficultyurinating')+\" /尿がでにくい\", value:\"Difficulty urinating\"},\n        {name: t('obstetricGynecology.Hematuria')+\" /尿に血が混じる\", value:\"Hematuria (blood inurine)\"},\n        {name: t('obstetricGynecology.Pyuria')+\" /尿に膿が混じる\", value:\"Pyuria (pus in urine)\"},\n        {name: t('obstetricGynecology.Perineumrash')+\" /会陰部にできもの\", value:\"Perineum rash\"},\n        {name: t('obstetricGynecology.Rednessandswelling')+\" /赤く脹れている\", value:\"Redness and swelling\"},\n        {name: t('obstetricGynecology.Havepain')+\" /痛みがある\", value:\"Have pain\"},\n        {name: t('obstetricGynecology.Itchiness')+\" /かゆみ\", value:\"Itchiness\"},\n        {name: t('obstetricGynecology.Urinaryincontinence')+\" /尿失禁\", value:\"Urinary incontinence\"},\n        {name: t('obstetricGynecology.Fecalincontinence')+\" /便失禁\", value:\"Fecal incontinence\"},\n        {name: t('obstetricGynecology.Uterineprolapse')+\" /子宮脱\", value:\"Uterine prolapse\"},\n        {name: t('obstetricGynecology.Consultationonfertilitytreatment')+\" /不妊の相談\", value:\"Consultation on fertility treatment\"},\n        {name: t('obstetricGynecology.Vomiting')+\" /嘔吐\", value:\"Vomiting\"},\n        {name: t('obstetricGynecology.Nausea' )+\" /嘔気\", value:\"Nausea\"},\n        {name: t('obstetricGynecology.Cancerscreening')+\" /がん健診\", value:\"Cancer screening\"},\n        {name: t('obstetricGynecology.Other(s)' )+\" /その他\", value:\"Other(s)\"},\n        {name: t('obstetricGynecology.advisedbyanother')+\" /他の医療機関から受診するように勧められた（健診含む）\", value:\"I was advised by another clinic/hospital (or at a regular check-up) to come here.\"},\n        \n       ]\n    \n\n    const [values, setValues] = useContext(ObstetricContext);\n    const classes = useStyles();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 2\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleToggleProblemtoday = (object) => () => {\n        const currentIndex = values.problemtoday.indexOf(object.value);\n        const newChecked = [...values.problemtoday];\n        \n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        \n         setValues({...values, problemtoday:newChecked});\n         logFunction(\"What is the problem today\");\n    };\n\n   \n\n    return (\n\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday')}<br/>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</h4></strong></Paper>\n                    </Grid>\n                    \n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                    <GridList container style={{height:642, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {problemtodays.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem style={{marginTop:61}} key={value.name} role={undefined} dense button onClick={handleToggleProblemtoday(value)}>\n                                    <ListItemIcon >\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.problemtoday.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} style={{display:\"table-caption\"}}/>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    \n                        </Grid>\n                    </Grid>\n\n            </div>\n        </div>\n\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { ObstetricContext } from '../ObstetricgynecologyContext'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n    gridList: {\n        width: 500,\n        height: 300,\n        textAlign: 'center',\n        margin:10,\n        padding:13\n      },\n      ListItemIcon: {\n          minWidth:32\n      }\n}));\n\nconst CenteredGrid = () => {\n    \n    const foodAlergie = [\n        { name: 'Fish Roe/魚卵', value: 'Fish Roe' },\n        { name: 'Shellfish /貝類', value: 'Shellfish' },\n        { name: 'Milk /甲殻類（エビ、カニ等)', value: 'Milk' },\n        { name: 'Cheese /卵', value: 'Cheese' },\n        { name: 'Buckwheat /魚卵', value: 'Buckwheat' },\n        { name: 'Peanuts /貝類', value: 'Peanuts' },\n        { name: 'Almonds /卵', value: 'Almonds' },\n        { name: 'wheat /小麦', value: 'wheat' },\n        { name: 'soy /大豆', value: 'soy' },\n        { name: 'Kiwifruit /キウイ', value: 'Kiwifruit' },\n        { name: 'Peaches /桃', value: 'Peaches' },\n        { name: 'Yams /山芋', value: 'Yams' },\n        { name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)/青魚\", value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\" },\n        { name: \"Shrimp/Prawns/ Crabs/Lobsters/甲殻類（エビ、カニ等)/発熱\", value: \"Shrimp/Prawns/Crabs/Lobsters\" },\n    ];\n\n    const medecinesAlergie = [\n        {name:\"Alcohol /アルコール\", value:\"Alcohol\"},\n        {name:\"fever reducer /解熱剤\", value:\"fever reducer\"},\n        {name:\"pain killer /痛み止め\", value:\"pain killer\"},\n        {name:\"antibiotics /抗生物質\", value:\"antibiotics\"},\n        {name:\"medicine for stomach and bowels /胃腸薬\", value:\"medicine for stomach and bowels\"},\n        {name:\"anesthetic /麻酔薬\", value:\"antibiotics\"}\n       ];\n\n    const [values, setValues] = useContext(ObstetricContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const [checkedFood, setCheckedFood] = React.useState([]);\n    const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 1\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleToggleFood = (value) => () => {\n        const currentIndex = values.allergis.foods.indexOf(value.value);\n        const newChecked = [...values.allergis.foods];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n        setValues({...values, allergis:{...values.allergis, foods:newChecked}});\n        logFunction(\"Food Allergie\")\n    };\n\n    \n    const handleToggleMedecin = (value) => () => {\n        const currentIndex = values.allergis.medcine.indexOf(value.value);\n        const newChecked = [...values.allergis.medcine];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n        setValues({...values, allergis:{...values.allergis, medcine:newChecked}});\n        logFunction(\"Medicine Allergie\");\n    };\n\n   const update = (e) => {\n    setValues({...values, [e.target.name]:e.target.value});\n    logFunction(\"Patient \"+[e.target.name])\n   }\n\n    const updateDate = (date) => {\n        setValues({...values, DateOfBirth:date})\n        logFunction(\"Date of birth\")\n    }\n\n    console.log(values)\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('internalMedcine.PersonnalInformation')}</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={8}>\n\n                    <FormControl fullWidth className=''>\n                        <InputLabel htmlFor=\"name\">{t('internalMedcine.LastFirstname')} /医療機関記入欄/生年月日（西暦)</InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            values={values.name}\n                            defaultValue={values.name}\n                            onChange={update}\n                            name=\"name\"\n                        />\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"yyyy/MM/dd\"\n                                value={values.DateOfBirth}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"height\">{t('internalMedcine.Height')}</InputLabel>\n                            <Input\n                                id=\"height\"\n                                type=\"number\"\n                                values={values.height}\n                                defaultValue={values.height}\n                                onChange={update}\n                                name=\"height\"\n                            />\n                        </FormControl>\n                        \n                    </Grid>\n\n                </Grid>\n                <Grid item xs={4}>\n                <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"weight\">{t('internalMedcine.Weight')}</InputLabel>\n                            <Input\n                                id=\"weight\"\n                                type=\"number\"\n                                values={values.weight}\n                                defaultValue={values.weight}\n                                onChange={update}\n                                name=\"weight\"\n                            />\n                        </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Sex')}</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.sex}\n                            onChange={update}\n                            name=\"sex\"\n                        >\n                            <MenuItem value=\"Male\">{t('internalMedcine.Male')}</MenuItem>\n                            <MenuItem value=\"Female\">{t('internalMedcine.Female')}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            \n            <Grid item xs={12}>\n                <Paper className={classes.paper}><strong><h4>{t('internalMedcine.Allergie')} /アレルギー</h4></strong></Paper>\n            </Grid>\n            <br />\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Food Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={2}>\n                        {foodAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleFood(value)}>\n                                    <ListItemIcon className={classes.ListItemIcon}>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.foods.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Medicine Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={1} style={{paddingLeft: 62}}>\n                        {medecinesAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedecin(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.medcine.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n\n                    </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ObstetricContext } from '../ObstetricgynecologyContext'\nimport FormLabel from '@material-ui/core/FormLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 3\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n    },\n}));\n\n\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(ObstetricContext);\n    const classes = useStyles();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 3\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleChangeCheckSpecialRequest = (event) => {\n        setValues({...values, menstrualPeriod:{...values.menstrualPeriod, [event.target.name]:event.target.checked} });\n        logFunction(\"irregular period\");\n    };\n\n    const update = (e) => {\n        setValues({...values, menstrualPeriod:{...values.menstrualPeriod, [e.target.name]:e.target.value} });\n        if ( [e.target.name] == \"ageStart\"){\n            logFunction(t('obstetricGynecology.Howoldwereyouwhenyoustartedhavingyourperiod')); \n        }\n        if ( [e.target.name] == \"ageLast\"){\n            logFunction(t('obstetricGynecology.Howoldwereyouwhenyouhadyourlastperiod')); \n        }\n        if ( [e.target.name] == \"daysCycle\"){\n            logFunction(t('obstetricGynecology.Howmanydayslongisyourmenstrualcycle')); \n        }\n        if ( [e.target.name] == \"painkiller\"){\n            logFunction(t('obstetricGynecology.painduringyourperiods')); \n        }\n       }\n\n       const handleChange = (event) => {\n        setValues({...values, menstrualPeriod :{...values.menstrualPeriod, [event.target.name]:event.target.value}})\n        if ([event.target.name] == \"usualFlow\")\n            logFunction(t('obstetricGynecology.Whatisyourusualflow'));\n        if ([event.target.name] == \"painduringyourperiods\")\n            logFunction(t('obstetricGynecology.painduringyourperiods'));\n        if ([event.target.name] == \"Painkiller\")\n            logFunction(t('obstetricGynecology.Painkiller'));\n    };\n\n    const updateDate = (date) => {\n        setValues({...values, menstrualPeriod :{...values.menstrualPeriod, dateLastPeriod:date}})\n        logFunction(t('obstetricGynecology.dateLastPeriod'));\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('obstetricGynecology.menstrualperiods')}<br />/月経についてお伺いします。</h4></strong></Paper>\n                </Grid>\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.Howoldwereyouwhenyoustartedhavingyourperiod')} /月経がはじまったのはいつですか。</h5>\n                </Grid>\n                <Grid container item xs={6} style={{ marginLeft: 17, marginRight: 41 }}>\n                    <FormControl fullWidth className='' style={{ marginTop: -30 }}>\n                        <InputLabel htmlFor=\"ageStart\">{t('obstetricGynecology.Whenyouwerearound')} /歳ごろ</InputLabel>\n                        <Input\n                            id=\"ageStart\"\n                            type=\"number\"\n                            values={values.menstrualPeriod.ageStart}\n                            defaultValue={values.menstrualPeriod.ageStart}\n                            onChange={update}\n                            name=\"ageStart\"\n                        />\n                    </FormControl>\n                </Grid>\n\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.Howoldwereyouwhenyouhadyourlastperiod')} /月経が終わったのはいつですか。</h5>\n                </Grid>\n                <Grid container item xs={6} style={{ marginLeft: 17, marginRight: 41 }}>\n                    <FormControl fullWidth className='' style={{ marginTop: -30 }}>\n                        <InputLabel htmlFor=\"ageLast\">{t('obstetricGynecology.Whenyouwerearound')} /歳ごろ</InputLabel>\n                        <Input\n                            id=\"ageLast\"\n                            type=\"number\"\n                            values={values.menstrualPeriod.ageLast}\n                            defaultValue={values.menstrualPeriod.ageLast}\n                            onChange={update}\n                            name=\"ageLast\"\n                        />\n                    </FormControl>\n                </Grid>\n\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.Howmanydayslongisyourmenstrualcycle')} /月経周期は何日ですか。</h5>\n                </Grid>\n                <Grid item xs={6}>\n                    <Grid container style={{ marginLeft: 17, marginRight: 41 }}>\n                        <FormControl fullWidth className='' style={{ marginTop: -30 }}>\n                            <InputLabel htmlFor=\"daysCycle\">{t('obstetricGynecology.Daymenstrualcycle')} /日型</InputLabel>\n                            <Input\n                                id=\"daysCycle\"\n                                type=\"number\"\n                                values={values.menstrualPeriod.daysCycle}\n                                defaultValue={values.menstrualPeriod.daysCycle}\n                                onChange={update}\n                                name=\"daysCycle\"\n                            />\n                        </FormControl>\n                    </Grid>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                    <FormControlLabel style={{ marginTop: -15 }}\n                        control={\n                            <Checkbox\n                                checked={values.menstrualPeriod.irregular}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"irregular\"\n                            />\n                        }\n                        label={t('obstetricGynecology.Irregular')+'/不定期で不順'}\n                    />\n                </Grid>\n                \n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.Howmanydaysdoperiodslastonaverage')} /平均月経持続日数は何日ですか。</h5>\n                </Grid>\n                <Grid container item xs={6} style={{ marginLeft: 17, marginRight: 41 }}>\n                    <FormControl fullWidth className='' style={{ marginTop: -30 }}>\n                        <InputLabel htmlFor=\"periodsLast\">{t('obstetricGynecology.Daylengthofyourmenstrualperiod')} /日間</InputLabel>\n                        <Input\n                            id=\"periodsLast\"\n                            type=\"number\"\n                            values={values.menstrualPeriod.periodsLast}\n                            defaultValue={values.menstrualPeriod.periodsLast}\n                            onChange={update}\n                            name=\"periodsLast\"\n                        />\n                    </FormControl>\n                </Grid>\n\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.Whatisyourusualflow')} /月経の量はどのぐらいですか。</h5>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: \"left\", paddingLeft: 48, marginLeft: -18, marginTop: -19}}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"usualFlow\" value={values.menstrualPeriod.usualFlow} onChange={handleChange}>\n                            <FormControlLabel value=\"Light\" control={<Radio />} label={t('obstetricGynecology.Light')+\" /少ない\"}/>\n                            <FormControlLabel value=\"Normal\" control={<Radio />} label={t('obstetricGynecology.Normal')+\" /普通\"} />\n                            <FormControlLabel value=\"Heavy\" control={<Radio />} label={t('obstetricGynecology.Heavy')+\"/多い\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <h5>{t('obstetricGynecology.painduringyourperiods')} /月経痛はありますか。</h5>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: \"left\", paddingLeft: 48, marginLeft: -18, marginTop: -19}}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"painduringyourperiods\" value={values.menstrualPeriod.painduringyourperiods} onChange={handleChange}>\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')+\" /いいえ\"}/>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')+\" /はい\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <div>\n                    {values.menstrualPeriod.painduringyourperiods === 'Yes' ? (\n                        <div>\n                        <FormLabel style={{marginTop: -15, marginLeft:65, fontSize:18}}><strong style={{lineHeight: 2}}>{t('obstetricGynecology.answeredYesandtakeapainkiller')} <br/> /「はい」と答えた方で鎮痛剤を使用されている方は、鎮痛剤も書いてください。</strong></FormLabel>\n                        <Grid item xs={10}>\n                        <FormControl fullWidth className='' style={{marginLeft: 86, marginBottom: 17, marginTop: -20}}>\n                        <InputLabel htmlFor=\"name\">{t('obstetricGynecology.Painkiller')} /鎮痛剤：</InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            name=\"painkiller\"\n                            values={values.menstrualPeriod.painkiller}\n                            defaultValue={values.menstrualPeriod.painkiller}\n                            onChange={handleChange}\n                        />\n                    </FormControl>\n                    </Grid>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                        <Grid item xs={12} style={{marginTop: -29}}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                        <Grid container justify=\"space-around\" item xs={6} className={classes.labelAligne} >\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('obstetricGynecology.dateLastPeriod')+\" /最終月経はいつですか。\"}\n                                format=\"yyyy/MM/dd\"\n                                value={values.menstrualPeriod.dateLastPeriod}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    </Grid>\n\n            </Grid>\n\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ObstetricContext } from '../ObstetricgynecologyContext'\nimport FormLabel from '@material-ui/core/FormLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 3\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(ObstetricContext);\n    const classes = useStyles();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n      const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 4\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value })\n        if ( [event.target.name] == \"haveSexualIntercourse\"){\n            logFunction(t('obstetricGynecology.haveSexualIntercourse')); \n        }\n        if ( [event.target.name] == \"hadUterineCancerTest\"){\n            logFunction(t('obstetricGynecology.hadUterineCancerTest')); \n        }\n        if ( [event.target.name] == \"takenBirthControlPills\"){\n            logFunction(t('obstetricGynecology.takenBirthControlPills')); \n        }\n        if ( [event.target.name] == \"pregnantOrPossiblyPregnant\"){\n            logFunction(t('obstetricGynecology.pregnantOrPossiblyPregnant')); \n        }\n        if ( [event.target.name] == \"Areyoubreastfeeding\"){\n            logFunction(t('obstetricGynecology.Areyoubreastfeeding')); \n        }\n        \n    };\n\n    const updateDate = (date) => {\n        setValues({ ...values, dateHadUterineCancerTest: date });\n        logFunction(t('obstetricGynecology.dateLastPeriod'));\n    }\n\n    const update = (e) => {\n        setValues({ ...values.menstrualPeriod, [e.target.name]: e.target.value });\n        logFunction(t('obstetricGynecology.noWeeks'));\n    }\n\n    const handleChangeCheckSpecialRequest = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.checked });\n        logFunction(t('obstetricGynecology.doNotKnow'));\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.haveSexualIntercourse')}<br />/今までに性交渉の経験がありますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"haveSexualIntercourse\" value={values.haveSexualIntercourse} onChange={handleChange}>\n                            <FormControlLabel value={true} control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value={false} control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.hadUterineCancerTest')}<br /> /子宮がん検診を受けたことがありますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"hadUterineCancerTest\" value={values.hadUterineCancerTest} onChange={handleChange}>\n                            <FormControlLabel value={true} control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value={false} control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <div>\n                    {values.hadUterineCancerTest === 'true' ? (\n                        <div>\n                            <FormLabel style={{ marginTop: -15, marginLeft: 65, fontSize: 18 }}><strong style={{ lineHeight: 2 }}>{t('obstetricGynecology.hadsurgerybefore')} /受けたことがある方は日付を書いてください。</strong></FormLabel>\n                            <Grid item xs={12} style={{ marginTop: -22, paddingLeft: 57 }}>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                                    <Grid container justify=\"space-around\" item xs={8} className={classes.labelAligne} >\n\n                                        <KeyboardDatePicker\n                                            fullWidth\n                                            margin=\"normal\"\n                                            id=\"date-picker-dialog\"\n                                            label={t('obstetricGynecology.dateLastPeriod') + \" /最終月経はいつですか。\"}\n                                            format=\"yyyy/MM/dd\"\n                                            value={values.dateHadUterineCancerTest}\n                                            onChange={updateDate}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change date',\n                                            }}\n                                        />\n\n                                    </Grid>\n\n                                </MuiPickersUtilsProvider>\n                            </Grid>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.takenBirthControlPills')}<br />/ピル（避妊薬）を飲んでいたことがありますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"takenBirthControlPills\" value={values.takenBirthControlPills} onChange={handleChange}>\n                            <FormControlLabel value={true} control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value={false} control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.pregnantOrPossiblyPregnant')}<br />/妊娠していますか、またその可能性はありますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"pregnantOrPossiblyPregnant\" value={values.pregnantOrPossiblyPregnant} onChange={handleChange}>\n                            <FormControlLabel value={true} control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value={false} control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                {values.pregnantOrPossiblyPregnant === 'true' ? (\n                    <Grid container spacing={3}>\n\n                        <Grid item xs={4} container style={{ marginLeft: 77, marginRight: 3 }}>\n                            <FormControl fullWidth className='' style={{ marginTop: -30 }}>\n                                <InputLabel htmlFor=\"daysCycle\">{t('obstetricGynecology.noWeeks')} /週</InputLabel>\n                                <Input\n                                    id=\"daysCycle\"\n                                    type=\"number\"\n                                    values={values.noWeeks}\n                                    defaultValue={values.noWeeks}\n                                    onChange={update}\n                                    name=\"noWeeks\"\n                                />\n                            </FormControl>\n                        </Grid>\n\n\n                        <Grid item xs={6}>\n                            <FormControlLabel style={{ marginTop: -15 }}\n                                control={\n                                    <Checkbox\n                                        checked={values.doNotKnow}\n                                        onChange={handleChangeCheckSpecialRequest}\n                                        name=\"doNotKnow\"\n                                    />\n                                }\n                                label={t('obstetricGynecology.doNotKnow') + '/わからない'}\n                            />\n                        </Grid>\n                    </Grid>\n                ) : (\n                        <nav> &apos; </nav>\n                    )}\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.Areyoubreastfeeding')}<br />/現在、授乳中ですか？</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"Areyoubreastfeeding\" value={values.Areyoubreastfeeding} onChange={handleChange}>\n                            <FormControlLabel value={true} control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value={false} control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ObstetricContext } from '../ObstetricgynecologyContext'\nimport FormLabel from '@material-ui/core/FormLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 3\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n    },\n}));\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const [values, setValues] = useContext(ObstetricContext);\n    const [fields, setFields] = useState([{\n        date: new Date(),\n        delivery: \"\",\n        hadMiscarriage: null,\n        hadAbnomalPregnancy: null,\n        weeksPregnanncy: null\n    }]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 5\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    function handleChangeweeksPregnanncy(i, event) {\n        const values1 = [...fields];\n        values1[i].weeksPregnanncy = event.target.value;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1})\n        logFunction(t('obstetricGynecology.weekpregnancy'));\n    }\n\n    function handleChangeDate(i, date) {\n        const values1 = [...fields];\n        values1[i].date = date;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1});\n        logFunction(t('obstetricGynecology.YearMonthDay'));\n    }\n\n    function handleChangeRadio(i, event) {\n        const values1 = [...fields];\n        values1[i].delivery = event.target.value;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1});\n        logFunction(t('obstetricGynecology.Delivery'));\n    }\n\n    function handleChangehadMiscarriage(i, event) {\n        const values1 = [...fields];\n        values1[i].hadMiscarriage = event.target.value;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1});\n        logFunction(t('obstetricGynecology.Hadmiscarriageornot'));\n    }\n\n    /*function handleChangehadMiscarriage(i, event) {\n        const values1 = [...fields];\n        values1[i].hadMiscarriage = event.target.value;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1})\n    }*/\n\n    function handleChangehadAbnomalPregnancy(i, event) {\n        const values1 = [...fields];\n        values1[i].hadAbnomalPregnancy = event.target.value;\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1});\n        logFunction(t('obstetricGynecology.Hadabnormalpregnancyornot'));\n    }\n\n    function handleAdd() {\n        const values1 = [...fields];\n        values1.push({ \n            date: new Date(),\n        delivery: \"\",\n        hadMiscarriage: null,\n        hadAbnomalPregnancy: null,\n        weeksPregnanncy: null\n         });\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1});\n        \n    }\n\n    function handleRemove(i) {\n        const values1 = [...fields];\n        values1.splice(i, 1);\n        setFields(values1);\n        setValues({...values, YesPregnancyHistory :values1})\n    }\n   \n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n        logFunction(t('obstetricGynecology.PregnantHistory'));\n    };\n    //console.log(values.YesPregnancyHistory);\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong ><h4 style={{ fontSize: 19, lineHeight: 1.5 }}>{t('obstetricGynecology.PregnantHistory')}<br />/妊娠歴についてお伺いします※過去の妊娠の時の母子手帳をお持ちの方は母子手帳を用意してください。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 16, marginLeft: 0, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"PregnantHistory\" value={values.PregnantHistory} onChange={handleChange}>\n                            <FormControlLabel value=\"Have no history of pregnancy\" control={<Radio />} label={t('obstetricGynecology.haveHistory') + \" /妊娠したことがない\"} />\n                            <FormControlLabel value=\"Have a history of pregnancy\" control={<Radio />} label={t('obstetricGynecology.doNotHaveHistory') + \" /妊娠したことがある\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <div>\n                    {values.PregnantHistory === 'Have a history of pregnancy' ? (\n                        <div>\n                             <FormLabel style={{ marginTop: -15, marginLeft: 65, fontSize: 14 }}><strong style={{ lineHeight: 2 }}>{t('obstetricGynecology.pregnancyHistory')} /「妊娠したことがある」に☑された方は下の妊娠歴をお書きください。</strong></FormLabel>\n            <Grid item xs={12} style={{ backgroundColor: \"#ffff0047\", paddingTop: 26, paddingLeft: 26, paddingBottom: 26, paddingRight: 26 }}>\n\n                {values.YesPregnancyHistory.map((field, idx) => {\n                    return (\n                        <div key={`${field}-${idx}`}>\n                            <hr style={{ height: 2, borderWidth: 0, color: \"gray\", backgroundColor: \"gray\" }} />\n                            <FormLabel style={{ marginTop: -15, marginLeft: 60, fontSize: 20, color:\"balck\" }}><strong style={{ lineHeight: 2 }}>{\"Baby No: \"+idx} </strong></FormLabel>\n                            <hr style={{ height: 2, borderWidth: 0, color: \"gray\", backgroundColor: \"gray\", marginTop: -6 }} />\n                            <Grid container spacing={3} style={{ padding: 20 }}>\n                                <Grid item xs={6}>\n                                    <Grid >\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <Grid container justify=\"space-around\">\n\n                                                <KeyboardDatePicker\n                                                    fullWidth\n                                                    margin=\"normal\"\n                                                    name=\"date\"\n                                                    label={t('obstetricGynecology.YearMonthDay')}\n                                                    format=\"yyyy/MM/dd\"\n                                                    value={field.date}\n                                                    onChange={e => handleChangeDate(idx, e)}\n                                                    KeyboardButtonProps={{\n                                                        'aria-label': 'change date',\n                                                    }}\n                                                />\n\n                                            </Grid>\n\n                                        </MuiPickersUtilsProvider>\n                                        <Grid >\n                                            <strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.Delivery')} / 分娩</h4></strong>\n                                        </Grid>\n                                        <Grid style={{ textAlign: \"left\", marginLeft: 5, marginTop: -15 }}>\n                                            <FormControl component=\"fieldset\">\n\n                                                <RadioGroup row aria-label=\"gender\" name=\"delivery\" value={field.delivery} onChange={e => handleChangeRadio(idx, e)}>\n                                                    <FormControlLabel value=\"Vaginal delivery\" control={<Radio />} label={t('obstetricGynecology.Vaginaldelivery') + \" /経腟分娩\"} />\n                                                    <FormControlLabel value=\"Caesarean section\" control={<Radio />} label={t('obstetricGynecology.Caesareansection') + \" /帝王切開 \"} />\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </Grid>\n\n                                        <Grid >\n                                            <strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.Hadmiscarriageornot')} /流産の有無</h4></strong>\n                                        </Grid>\n                                        <Grid style={{ textAlign: \"left\", marginLeft: 5, marginTop: -15 }}>\n                                            <FormControl component=\"fieldset\">\n\n                                                <RadioGroup row aria-label=\"gender\" name=\"hadMiscarriage\" value={field.hadMiscarriage} onChange={e => handleChangehadMiscarriage(idx, e)}>\n                                                    <FormControlLabel value=\"Miscarriage\" control={<Radio />} label={t('obstetricGynecology.Miscarriage') + \" /自然流産\"} />\n                                                    <FormControlLabel value=\"Abortion\" control={<Radio />} label={t('obstetricGynecology.Abortion') + \" /人工流産 \"} />\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid>\n                                        <strong><h4 style={{ fontSize: 19 }}>{t('obstetricGynecology.Hadabnormalpregnancyornot')} /異常妊娠の有無</h4></strong>\n                                    </Grid>\n                                    <Grid style={{ textAlign: \"left\", marginLeft: 5, marginTop: -15 }}>\n                                        <FormControl component=\"fieldset\">\n\n                                            <RadioGroup row aria-label=\"gender\" name=\"hadAbnomalPregnancy\" value={field.hadAbnomalPregnancy} onChange={e => handleChangehadAbnomalPregnancy(idx, e)}>\n                                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /自然流産\"} />\n                                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /人工流産 \"} />\n                                            </RadioGroup>\n                                        </FormControl>\n                                    </Grid>\n\n\n\n                                    <FormControl fullWidth className='' >\n                                        <InputLabel htmlFor=\"weeksPregnanncy\">{t('obstetricGynecology.weekpregnancy')} /週数</InputLabel>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"weeksPregnanncy\"\n                                            id={field.weeksPregnanncy}\n                                            className=\"age\"\n                                            value={field.weeksPregnanncy}\n                                            onChange={e => handleChangeweeksPregnanncy(idx, e)}\n                                        />\n                                    </FormControl>\n\n                                </Grid>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleRemove(idx)}\n                                    className={classes.button}\n                                >\n                                    Remove\n                                             </Button>\n\n                            </Grid>\n                        </div>\n                    );\n                })}\n                <Button\n                style={{fontSize: 20, backgroundColor: '#eb57577a', color:\"white\"}}\n                    variant=\"contained\"\n                    onClick={() => handleAdd()}\n                    className={classes.button}\n                >\n                    +\n                                             </Button>\n            </Grid>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useContext } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ObstetricContext } from '../ObstetricgynecologyContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 3\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n    },\n}));\nconst CenteredGrid = () => {\n\n    const problem = [\n        { name: 'Hypertension /高血圧', value: 'Hypertension' },\n        { name: 'Diabetes mellitus /糖尿病', value: 'Diabetes mellitus' },\n        { name: 'Swelling /むくみ', value: 'Swelling' },\n        { name: 'Threatened prematuredelivery /切迫早産', value: 'Threatened prematuredelivery' },\n        { name: 'Had a problem with blood clotting/出血が止まりにくかった', value: 'Had a problem with blood clotting' },\n        { name: 'Convulsion /けいれん', value: 'Convulsion' },\n        { name: 'Other(s)/その他', value: 'Other(s)' },\n    ]\n\n    const symptomLikeValue = [\n        { name: 'Constant/絶え間なく、続いている', value: 'Constant' },\n        { name: 'The symptom comes and goes./症状が出たり、消えたりしている', value: 'The symptom comes and goes' },\n        { name: 'The symptom is gradually worsening./徐々にひどくなっている', value: 'The symptom is gradually worsening' },\n        { name: 'Other(s)/その他', value: 'Other(s)' },\n    ]\n\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const [values, setValues] = useContext(ObstetricContext);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 6\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n        if ( [event.target.name] == \"problemDuringDelivery\"){\n            logFunction(t('obstetricGynecology.problemDuringDelivery')); \n        }\n        if ( [event.target.name] == \"haveBabyAtThisHuspital\"){\n            logFunction(t('obstetricGynecology.haveBabyAtThisHuspital')); \n        }\n        if ( [event.target.name] == \"symptomLike\"){\n            logFunction(t('obstetricGynecology.symptomLike')); \n        }\n    };\n\n    const handleToggleProblem = (value) => () => {\n        const currentIndex = values.problemDelivery.indexOf(value.value);\n        const newChecked = [...values.problemDelivery];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({ ...values, problemDelivery: newChecked });\n        logFunction(t('obstetricGynecology.problemDuringDelivery')); \n    };\n\n    const handleToggleProblemSymptomLikeValue = (value) => () => {\n        const currentIndex = values.symptomLikeValue.indexOf(value.value);\n        const newChecked = [...values.symptomLikeValue];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({ ...values, symptomLikeValue: newChecked });\n        logFunction(t('obstetricGynecology.symptomLike'));\n    };\n\n    const updateDate = (date) => {\n        //setDate(date)\n        setValues({ ...values, symptomstartDate: date });\n        logFunction(\"Symptom start date\");\n    }\n    const updateTime = (time) => {\n        //setTime(time)\n        setValues({ ...values, symtomstarttime: time });\n        logFunction(\"Symptom start time\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong ><h4 style={{ fontSize: 19, lineHeight: 1.5 }}>{t('obstetricGynecology.problemDuringDelivery')}<br />/過去に妊娠中・分娩時などの異常はありましたか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"problemDuringDelivery\" value={values.problemDuringDelivery} onChange={handleChange}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                {values.problemDuringDelivery === 'true' ? (\n                    <div>\n                        <GridList container style={{ height: 155, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                            {problem.map((value) => {\n                                const labelId = `checkbox-list-label-${value.name}`;\n\n                                return (\n                                    <ListItem key={value.name} role={undefined} dense button onClick={handleToggleProblem(value)}>\n                                        <ListItemIcon className={classes.ListItemIcon}>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={values.problemDelivery.indexOf(value.value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                    </ListItem>\n                                );\n                            })}\n                        </GridList>\n                    </div>\n\n                ) : (\n                        <nav> &apos; </nav>\n                    )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong ><h4 style={{ fontSize: 19, lineHeight: 1.5 }}>{t('obstetricGynecology.haveBabyAtThisHuspital')}<br />/妊娠の方は当院での出産を希望されますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"haveBabyAtThisHuspital\" value={values.haveBabyAtThisHuspital} onChange={handleChange}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong ><h4 style={{ fontSize: 19, lineHeight: 1.5 }}>{t('obstetricGynecology.symptomLike')}<br />/症状はどのような性質を持っていますか。</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\", paddingLeft: 48, marginLeft: -18, marginTop: -19 }}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"symptomLike\" value={values.symptomLike} onChange={handleChange}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                            <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                {values.symptomLike === 'true' ? (\n                    <div>\n                        <GridList container style={{ height: 155, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                            {symptomLikeValue.map((value) => {\n                                const labelId = `checkbox-list-label-${value.name}`;\n\n                                return (\n                                    <ListItem key={value.name} role={undefined} dense button onClick={handleToggleProblemSymptomLikeValue(value)}>\n                                        <ListItemIcon className={classes.ListItemIcon}>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={values.symptomLikeValue.indexOf(value.value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                    </ListItem>\n                                );\n                            })}\n                        </GridList>\n                    </div>\n\n                ) : (\n                        <nav> &apos; </nav>\n                    )}\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomstart')}?<br /> /この症状はいつからありますか</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={6}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                xs={8}\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"MM/dd/yyyy\"\n                                value={values.symptomstartDate}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                            <KeyboardTimePicker\n                                xs={8}\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"time-picker\"\n                                label=\"Time picker\"\n                                value={values.symtomstarttime}\n                                onChange={updateTime}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change time',\n                                }} />\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { ObstetricContext } from '../ObstetricgynecologyContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n\n    const hadsurgerys = [\n        {name: t('internalMedcine.Eye') +\"/ 目\", value:\"Eye\"},\n        {name: t('internalMedcine.Ear') +\"/ 耳\", value:\"Ear\"},\n        {name: t('internalMedcine.Nose') +\"/ 鼻\", value:\"Nose\"},\n        {name: t('internalMedcine.Mouth') +\"/ 口\", value:\"Mouth\"},\n        {name: t('internalMedcine.Throat') +\"/ のど\", value:\"Throat\"},\n        {name: t('internalMedcine.neck') +\"/ 乳房\", value:\"Neck\"},\n        {name: t('internalMedcine.Brest') +\"/ 乳房\", value:\"Brest\"},\n        {name: t('internalMedcine.Esophagus') +\"/ 食道\", value:\"Esophagus\"},\n        {name: t('internalMedcine.Stomach') +\"/ 胃\", value:\"Stomach\"},\n        {name: t('internalMedcine.Intestines') +\"/ 梅毒\", value:\"Intestines\"},\n        {name: t('internalMedcine.Heart') +\"/ 心臓<\", value:\"Heart\"},\n        {name: t('internalMedcine.Cecum') +\"/ 盲腸\", value:\"Cecum\"},\n        {name: t('internalMedcine.Liver') +\"/ 肝臓\", value:\"Liver\"},\n        {name: t('internalMedcine.Pancreas') +\"/ 膵臓\", value:\"Pancreas\"},\n        {name: t('internalMedcine.kidney') +\"/ 腎臓\", value:\"kidney\"},\n        {name: t('internalMedcine.Ovary') +\"/ 卵巣\", value:\"Ovary\"},\n        {name: t('internalMedcine.Uterus') +\"/ 子宮\", value:\"Uterus\"},\n        {name: t('internalMedcine.Upperlowerlimb') +\"/ 上下肢\", value:\"EUpperlowerlimbye\"},\n        {name: t('internalMedcine.Others') +\"/ その他\", value:\"Others\"}\n       ]\n\n    const onmedications = [\n        {name: t('internalMedcine.Coldmedicine') +\"/ かぜ薬\", value:\"Coldmedicine\"},\n        {name: t('internalMedcine.Feverreducer') +\"/ 朝解熱剤\", value:\"Feverreducer\"},\n        {name: t('internalMedcine.Painkiller') +\"/ 痛み止め\", value:\"Painkiller\"},\n        {name: t('internalMedcine.Anti-suppuration') +\"/ 化膿止め\", value:\"Anti-suppuration\"},\n        {name: t('internalMedcine.Antibiotics') +\"/ 化膿止め\", value:\"Antibiotics\"}\n       ]\n\n       const ondoctorcares = [\n        {name: t('internalMedcine.bronchialasthma') +\"/ 気管支喘息 /発熱\", value:\"bronchialasthma\"},\n        {name: t('internalMedcine.highbloodpressure') +\"/ 絶高血圧\", value:\"highbloodpressure\"},\n        {name: t('internalMedcine.Diabetesmellitus') +\"/ 糖尿病\", value:\"Diabetesmellitus\"},\n        {name: t('internalMedcine.Tuberculosis') +\"/ 結核\", value:\"Tuberculosis\"},\n        {name: t('internalMedcine.Hearttrouble') +\"/ 心臓病\", value:\"Hearttrouble\"},\n        {name: t('internalMedcine.HepatitisB') +\"/ Ｂ型肝炎\", value:\"HepatitisB\"},\n        {name: t('internalMedcine.epatitisC') +\"/ Ｃ型肝炎\", value:\"epatitisC\"},\n        {name: t('internalMedcine.collagenConnectiveTissuedisease') +\"/ 膠原病\", value:\"collagenConnectiveTissuedisease\"},\n        {name: t('internalMedcine.Thyroiddisease') +\"/ 甲状腺の病気\", value:\"Thyroiddisease\"},\n        {name: t('internalMedcine.Cancertumor') +\"/ 血液の病気\", value:\"Cancertumor\"},\n        {name: t('internalMedcine.glaucoma') +\"/ 緑内障\", value:\"glaucoma\"},\n        {name: t('internalMedcine.Gastrointestinaldisorder') +\"/ 胃腸の病気\", value:\"BlooGastrointestinaldisorderddisease\"},\n        {name: t('internalMedcine.Gonorrhea') +\"/ 淋病\", value:\"Gonorrhea\"},\n        {name: t('internalMedcine.Syphilis') +\"/ 梅毒\", value:\"Syphilis\"}\n       ]\n\n    const [values, setValues] = useContext(ObstetricContext);\n    const classes = useStyles();\n    const [medication, setMedication] = React.useState('');\n    const [medicationType, setMedicationType] = React.useState([]);\n    const [doctorcares, setDoctorcares] = React.useState('');\n    const [doctorcaresType, setDoctorcaresType] = React.useState([]);\n    const [hadsurgery, setHadsurgerys] = React.useState('');\n    const [hadsurgerysType, setHadsurgerysType] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 3\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n    \n\n    const handleToggleHadsurgerysType = (object) => () => {\n        const currentIndex = values.hadsurgerys.indexOf(object.value);\n        const newChecked = [...values.hadsurgerys];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setHadsurgerysType(newChecked);\n        setValues({...values, hadsurgerys:newChecked});\n        logFunction(t('internalMedcine.currentlyonmedicationyesno'));\n    };\n\n    const handleChangeHadsurgerys = (event) => {\n        setHadsurgerys(event.target.value);\n        setValues({...values, hadsurgery:event.target.value});\n        logFunction(t('internalMedcine.hadsurgery'));\n    };\n\n\n    const handleToggleMedicationType = (object) => () => {\n        const currentIndex = values.onmedications.indexOf(object.value);\n        const newChecked = [...values.onmedications];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setMedicationType(newChecked);\n        setValues({...values, onmedications:newChecked});\n        logFunction(t('internalMedcine.currentlyonmedicationyesno'));\n    };\n\n    const handleChange = (event) => {\n        setMedication(event.target.value);\n        setValues({...values, onMedication:event.target.value});\n        logFunction(t('internalMedcine.currentlyonmedication'));\n    };\n\n    const handleToggleDoctorcaresType = (object) => () => {\n        const currentIndex = values.doctorCare.indexOf(object.value);\n        const newChecked = [...values.doctorCare];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setDoctorcaresType(newChecked);\n        setValues({...values, doctorCare:newChecked});\n        logFunction(t('internalMedcine.currentlyonmedicationyesno'));\n    };\n\n    const handleChangeDoctorcare = (event) => {\n        setDoctorcares(event.target.value);\n        setValues({...values, doctorcare:event.target.value});\n        logFunction(t('internalMedcine.underdoctorcare'));\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.currentlyonmedication')} <br />/現在何か薬を飲んでいますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.onMedication} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n\n                <Grid>\n                <div>\n                    {values.onMedication === 'Yes' ? (\n                        <div>\n                        <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {onmedications.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedicationType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.onmedications.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.underdoctorcare')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.doctorcare} onChange={handleChangeDoctorcare}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.doctorcare === 'Yes' ? (\n                        <Grid container item xs={12}>\n                        <FormLabel container style={{marginTop:-25, lineHeight:2, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')} <br/>/「はい」に☑した人は、疾患名リストから選択し、治療していた医療機関名を書いてください。</strong></FormLabel>\n                        <GridList style={{ height: 200, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {ondoctorcares.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleDoctorcaresType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.doctorCare.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </Grid>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.hadsurgery')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.hadsurgery} onChange={handleChangeHadsurgerys}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.hadsurgery === 'Yes' ? (\n                        <div>\n                            <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 233, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {hadsurgerys.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n                           return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleHadsurgerysType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.hadsurgerys.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useEffect, useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { ObstetricContext } from '../ObstetricgynecologyContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(ObstetricContext);\n    const [year, setYear] = useState('')\n    const classes = useStyles();\n    const [smokeregularly, setSmokeregularly] = React.useState('No');\n    const [drinkregularly, setDrinkregularly] = React.useState('No');\n    const [frequency, setFrequency] = React.useState('');\n    const [frequencyDuration, setFrequencyDuration] = React.useState('');\n    const [CheckDrink, setCheckDrink] = React.useState({\n        beer: false,\n        wisky: false,\n        japsake: false,\n        wine: false,\n        others: false\n    });\n    const [beerfrequency, setBeerFrequency] = React.useState('');\n    const [wiskyfrequency, setWiskyFrequency] = React.useState('');\n    const [japsakefrequency, setJapsakeFrequency] = React.useState('');\n    const [winefrequency, setWineFrequency] = React.useState('');\n    const [othersfrequency, setOthersFrequency] = React.useState('');\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n            'x-auth-token': userData.token,\n        },\n    });\n\n    const logFunction = async (question) => {\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 3\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n        };\n        const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n        );\n    }\n\n    const handleChangeCheckDrink = (event) => {\n        const variable = event.target.name;\n        //setCheckDrink({ ...CheckDrink, [event.target.name]: event.target.checked });\n        setValues({ ...values, drinkeday: { ...values.drinkeday, [event.target.name]: event.target.checked } })\n        // console.log([event.target.name])\n        if ([event.target.name] == \"beer\") {\n            logFunction(t('internalMedcine.Beer'));\n        }\n        if ([event.target.name] == \"wisky\") {\n            logFunction(t('internalMedcine.Whisky'));\n        }\n        if ([event.target.name] == \"japsake\") {\n            logFunction(t('internalMedcine.Japanesesake'));\n        }\n        if ([event.target.name] == \"wine\") {\n            logFunction(t('internalMedcine.Wine'));\n        }\n        if ([event.target.name] == \"other\") {\n            logFunction(t('internalMedcine.Other'));\n        }\n    };\n\n    const updateBeerFrequency = (event) => {\n        setBeerFrequency(event.target.value);\n        setValues({ ...values, drinkeday: { ...values.drinkeday, nobeer: event.target.value } });\n        logFunction(\"Quantity of beer\");\n    };\n\n    const updateWiskyFrequency = (event) => {\n        setWiskyFrequency(event.target.value);\n        setValues({ ...values, drinkeday: { ...values.drinkeday, nowisky: event.target.value } });\n        logFunction(\"Quantity of wisky\");\n    };\n\n    const updateJapsakeFrequency = (event) => {\n        setJapsakeFrequency(event.target.value);\n        setValues({ ...values, drinkeday: { ...values.drinkeday, nojapsake: event.target.value } });\n        logFunction(\"Quantity of Japanese sake\");\n    };\n\n    const updateWineFrequency = (event) => {\n        setWineFrequency(event.target.value);\n        setValues({ ...values, drinkeday: { ...values.drinkeday, nowine: event.target.value } });\n        logFunction(\"Quantity of Japanese sake\");\n    };\n\n    const updateOthersFrequency = (event) => {\n        setOthersFrequency(event.target.value);\n        setValues({ ...values, drinkeday: { ...values.drinkeday, noOther: event.target.value } });\n        logFunction(\"Quantity of Japanese sake\");\n    };\n\n    const handleChange = (event) => {\n        setSmokeregularly(event.target.value);\n        setValues({ ...values, smokeregularly: event.target.value });\n        logFunction(t('internalMedcine.smokeregularly'));\n    };\n\n    const handleChangeDrink = (event) => {\n        setDrinkregularly(event.target.value);\n        setValues({ ...values, drinkregularly: event.target.value });\n        logFunction(t('internalMedcine.drinkregularly'));\n    };\n\n    const updateFrequency = (event) => {\n        setFrequency(event.target.value);\n        setValues({ ...values, smokeday: { ...values.smokeday, amount: event.target.value } });\n        logFunction(t('internalMedcine.cigarettesDay'));\n    };\n\n    const updateFrequencyDuration = (event) => {\n        setFrequencyDuration(event.target.value);\n        setValues({ ...values, smokeday: { ...values.smokeday, duration: event.target.value } });\n        logFunction(t('internalMedcine.Cigaretteconsumption'));\n    };\n    const updateYear = (event) => {\n        setYear(event.target.value);\n        setValues({ ...values, smokeday: { ...values.smokeday, yearStop: event.target.value } });\n        logFunction(t('internalMedcine.yearStopSmooking'));\n    }\n\n    const handleChangeCheckSpecialRequest = (event) => {\n        //setSpecialRequest({ ...SpecialRequest, [event.target.name]: event.target.checked });\n        setValues({ ...values, [event.target.name]: event.target.checked });\n        if ([event.target.name] == \"medicalexpenses\") {\n            logFunction(t('internalMedcine.informedonestimatedexpenses'));\n        }\n        if ([event.target.name] == \"haveinterpreter\") {\n            logFunction(t('internalMedcine.interpreterinterpreterservice'));\n        }\n        if ([event.target.name] == \"otherssss\") {\n            logFunction(t('internalMedcine.Other'));\n        }\n    };\n    console.log(values)\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.smokeregularly')}? <br />/習慣的に、たばこを吸いますか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.smokeregularly} onChange={handleChange}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseTo\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.smokeregularly === 'Yes') || (values.smokeregularly === 'YesUseTo') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{ paddingLeft: 16, marginTop: -22, marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Cigaretteconsumption')} /喫煙量</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.amount}\n                                            onChange={updateFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.cigarettesDay')} 本/日</FormHelperText>\n\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Durationofsmoking')} /喫煙期間</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.duration}\n                                            onChange={updateFrequencyDuration}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.NoofYear')} /年</FormHelperText>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={8}>\n                                    <FormControl fullWidth className=''>\n                                        <InputLabel htmlFor=\"name\">{t('internalMedcine.yearStopSmooking')} /喫煙をやめた年</InputLabel>\n                                        <Input\n                                            id=\"name\"\n                                            type=\"number\"\n                                            values={values.smokeday.yearStop}\n                                            defaultValue={values.smokeday.yearStop}\n                                            onChange={updateYear}\n                                        />\n                                    </FormControl>\n                                </Grid>\n\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.drinkregularly')}? <br />/習慣的にお酒を飲みますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender\" value={values.drinkregularly} onChange={handleChangeDrink}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseToSmook\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.drinkregularly === 'Yes') || (values.drinkregularly === 'YesUseToSmook') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{ paddingLeft: 16, marginTop: -22, marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n\n                                <Grid container item xs={3}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={values.drinkeday.beer}\n                                                onChange={handleChangeCheckDrink}\n                                                name=\"beer\"\n                                            />\n                                        }\n                                        label={t('internalMedcine.Beer')}\n                                    />\n                                </Grid>\n                                <Grid container item xs={3}>\n                                    <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                        <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.drinkeday.nobeer}\n                                            onChange={updateBeerFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n\n                                <Grid container item xs={3}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={values.drinkeday.wisky}\n                                                onChange={handleChangeCheckDrink}\n                                                name=\"wisky\"\n                                            />\n                                        }\n                                        label={t('internalMedcine.Whisky')}\n                                    />\n                                </Grid>\n                                <Grid container item xs={3}>\n                                    <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -130 }}>\n                                        <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.drinkeday.nowisky}\n                                            onChange={updateWiskyFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid container item xs={3}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={values.drinkeday.japsake}\n                                                onChange={handleChangeCheckDrink}\n                                                name=\"japsake\"\n                                            />\n                                        }\n                                        label={t('internalMedcine.Japanesesake')}\n                                    />\n                                </Grid>\n                                <Grid container item xs={3}>\n                                    <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -68 }}>\n                                        <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.drinkeday.nojapsake}\n                                            onChange={updateJapsakeFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid container item xs={3}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={values.drinkeday.wine}\n                                                onChange={handleChangeCheckDrink}\n                                                name=\"wine\"\n                                            />\n                                        }\n                                        label={t('internalMedcine.Wine')}\n                                    />\n                                </Grid>\n                                <Grid container item xs={3}>\n                                    <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                        <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.drinkeday.nowine}\n                                            onChange={updateWineFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid container item xs={3}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={values.drinkeday.other}\n                                                onChange={handleChangeCheckDrink}\n                                                name=\"other\"\n                                            />\n                                        }\n                                        label={t('internalMedcine.Other')}\n                                    />\n                                </Grid>\n                                <Grid container item xs={3}>\n                                    <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                        <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.drinkeday.noOther}\n                                            onChange={updateOthersFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.specialrequestconcerningconsultation')}? <br />/診察でのご希望がある場合は、☑をしてください。</h5></strong></Paper>\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.medicalexpenses}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"medicalexpenses\"\n                            />\n                        }\n                        label={t('internalMedcine.informedonestimatedexpenses')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.haveinterpreter}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"haveinterpreter\"\n                            />\n                        }\n                        label={t('internalMedcine.interpreterinterpreterservice')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.otherssss}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"otherssss\"\n                            />\n                        }\n                        label={t('internalMedcine.Other') + '(s)/その他'}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from './nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './ObstetricgynecologyForms/form2'\nimport Form1 from './ObstetricgynecologyForms/form1'\nimport Form3 from './ObstetricgynecologyForms/form3'\nimport Form4 from './ObstetricgynecologyForms/form4'\nimport Form5 from './ObstetricgynecologyForms/form5'\nimport Form6 from './ObstetricgynecologyForms/form6'\nimport Form7 from './ObstetricgynecologyForms/form7'\nimport Form8 from './ObstetricgynecologyForms/form8'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { ObstetricgynecologyContext, ObstetricContext } from './ObstetricgynecologyContext';\nimport axios from \"axios\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //width: '100%',\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction getSteps() {\n    return ['', '', '', '', '', '', '', ''];\n}\n\nfunction GetStepContent({ activeStep, name, setValues }) {\n    //console.log(\"this is the name \"+ values.name);\n\n    switch (activeStep) {\n        case 0:\n            return <Form1　/>;\n        case 1:\n            return <Form2 />;\n        case 2:\n            return <Form3 />;\n        case 3:\n            return <Form4 />;\n        case 4:\n            return <Form5 />;\n        case 5:\n            return <Form6 />;\n        case 6:\n            return <Form7 />;\n        case 7:\n            return <Form8 />;\n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n    const [values, setValues] = React.useState({});\n    const [datas, setDatas] = useContext(ObstetricContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n\n    const isStepOptional = (step) => {\n        return step === 10;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = (e) => {\n        e.preventDefault();\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const handleSubmit = () =>{\n        //console.log(datas)\n    \n       axios.post('http://localhost:3001/internaMedcine', datas)\n       .then(res => {\n         console.log(res.data)\n        // window.location = '/homepage';\n        });\n       \n      }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <div className={classes.root}>\n                    <Nav />\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            if (isStepOptional(index)) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n                            if (isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    All steps completed - you&apos;re finished\n            </Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                    Reset\n            </Button>\n                            </div>\n                        ) : (\n                                <div>\n                                    <div className={classes.instructions}>\n\n                                        { /*{getStepContent(activeStep, values, classes, t, setValues, setSelectedDate, selectedDate)}*/}\n                                       \n                                            <GetStepContent activeStep={activeStep} name={values.name} setValues={setValues} />\n                                       \n                                    </div>\n                                    <div>\n                                        <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n              </Button>\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={activeStep === steps.length - 1 ?  handleSubmit : handleNext}\n                                            className={classes.button}\n                                        >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"./nav.js\";\nimport Paper from '@material-ui/core/Paper';\nimport Footer from \"./footer\";\nimport '../App.css';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"14px\",\n        color: \"black\",\n        fontSize: \"16px\",\n        backgroundColor: \"#57EBEB\",\n        minHeight: \"75px\",\n        minWidth: \"200px !important\",\n        borderRadius: \"46px\"\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#eb57577a',\n    },\n    content: {\n        paddingBottom: \"600px\",\n        paddingTop: \"39px\",\n\n    }\n}));\n\nfunction Homepage() {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n\n    const handleConfirm = () => {\n        window.location = '/homepage';\n    }\n\n    const handleCancel = () => {\n        window.location = '/';\n    }\n\n    return (\n        <div className=\"container\">\n            <Nav />\n            <div className=\"content\" style={{ paddingRight: 100, paddingLeft: 100 }}>\n                <Grid container spacing={3} style={{ padding: 20, marginTop: 30 }}>\n                    <Grid className={classes.labelAligne} item xs={12}>\n                        <Paper className={classes.paper}> <strong><h4>{t('disclaimerCopyright.disclaimer')} /免責事項</h4></strong></Paper>\n                    </Grid>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> 本システムは、ご利用者樣の自己責任にてご使用いただくことを、使用条件とさせていただきます。本システムの使用及び利用により生じた問題については、開発者は一切の法的責任を負いません</nav>\n                    </Typography>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> 特に本システムの使用によって、医療従事者が患者に対して情報を提供する際の、情報の正確性、利用目的との適合性、利用結果（患者が正確に理解できることを含む）の一切について、開発者は何ら保証いたしませんので、御注意ください。</nav>\n                    </Typography>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> また、開発者の事前かつ明示の書面による許諾なく、本システムの営利目的での使用及び利用を禁じます。</nav>\n                    </Typography>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> {t('disclaimerCopyright.disclaimerText')}</nav>\n                    </Typography>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> {t('disclaimerCopyright.disclaimerText2')}</nav>\n                    </Typography>\n                    <br />\n                    <Typography style={{ }} className={classes.instructions}>\n                        <nav> {t('disclaimerCopyright.disclaimerText1')}</nav>\n                    </Typography>\n                    <br />\n                   \n                    <Grid className={classes.labelAligne} item xs={12}>\n                        <Paper className={classes.paper}> <strong><h4>{t('disclaimerCopyright.copyright')} /著作権</h4></strong></Paper>\n                    </Grid>\n                    <br />\n                    <Typography className={classes.instructions}>\n                        <nav> 本アプリケーションは「上智大学理工学部情報理工学科高岡研究室」にて研究・開発されています。</nav>\n                    </Typography>\n                    <br />\n                    <Typography style={{ marginBottom: 54 }} className={classes.instructions}>\n                        <nav> 本アプリケーションの著作権は高岡研究室のメンバーに属しています</nav>\n                    </Typography>\n                    <br/>\n                    <Typography className={classes.instructions}>\n                        <nav> {t('disclaimerCopyright.copyrightText')}</nav>\n                    </Typography>\n                    <br />\n                    <Typography  className={classes.instructions}>\n                        <nav> {t('disclaimerCopyright.copyrightText1')}</nav>\n                    </Typography>\n                    \n                    <br/>\n                    <Grid item xs={6}>\n                        <Button style={{ width: 150, backgroundColor: \"gray\", color: \"white\" }} variant=\"contained\" onClick={handleCancel}>\n                            Cancel\n                    </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button color=\"primary\" variant=\"contained\" style={{ width: 150 }} onClick={handleConfirm}>\n                            Confirm\n                    </Button>\n                    </Grid>\n                </Grid>\n            </div>\n            <Footer />\n\n        </div>\n    );\n}\n\nexport default Homepage;\n","import React, {useState, createContext} from 'react';\n\nexport const CovidContext = createContext();\n\nexport const Covid19Context = props => {\n    const [values, setValues] = useState({\n        checkBoxApplicable1:false,\n        checkBoxApplicable2:'',\n        checkBoxApplicable3:'',\n        haveSymptoms1:'',\n        Cough:'',\n        Phlegm:'',\n        Shortnessofbreath:'',\n        Senseoffatigue:'',\n        Abnormalityinthesenseofsmell:'',\n        Unabletoappreciatetaste:'',\n        VomitingNausea:'',\n        Diarrhea:'',\n        Noappetite:''\n    });\n\n    return(\n        <CovidContext.Provider value={[values, setValues]}>\n            {props.children}\n        </CovidContext.Provider>\n    );\n};","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"./nav.js\";\nimport Paper from '@material-ui/core/Paper';\nimport Footer from \"./footer\";\nimport '../App.css';\nimport { CovidContext } from \"./context/covid19Context\"\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"14px\",\n        color: \"black\",\n        fontSize: \"16px\",\n        backgroundColor: \"#57EBEB\",\n        minHeight: \"75px\",\n        minWidth: \"200px !important\",\n        borderRadius: \"46px\"\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#eb57577a',\n    },\n    content: {\n        paddingBottom: \"600px\",\n        paddingTop: \"39px\",\n\n    }\n}));\n\nfunction Homepage() {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(CovidContext);\n\n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value })\n    };\n\n    \n    const handleConfirm = () => {\n        window.location = '/login';\n    }\n\n    return (\n        <div className=\"container\">\n            <Nav />\n            <div className=\"content\" style={{ paddingRight: 30, paddingLeft: 30 }}>\n                <br />\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <strong><h3 style={{ textAlign: \"center\" }}>{t('covid-19.COVI-19Question')} <br />/新型コロナウイルス感染症に関する問診票</h3></strong>\n                </Grid>\n                <hr style={{ height: 2, borderWidth: 0, color: \"gray\", backgroundColor: \"gray\" }} />\n                <Grid container spacing={3} style={{ padding: 5 }}>\n                    <Grid className={classes.labelAligne} item xs={12}>\n                        <Paper className={classes.paper}> <strong><h5>{t('covid-19.checkBoxApplicable')} /当てはまるものに○をつけてください（はい　いいえ）どちらかに〇印をつけてください）</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.checkBoxApplicable1')}<br /> 2週間以内に、あなた、または、同居の家族が新型コロナウイルス感染者の⽅と⼀緒にいたことがありますか︖</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender1\" name=\"checkBoxApplicable1\" value={values.checkBoxApplicable1} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.checkBoxApplicable2')}<br /> ２週間以内に、県外（海外含む）にいきましたか？</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"checkBoxApplicable2\" value={values.checkBoxApplicable2} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.checkBoxApplicable3')}<br /> 2週間以内に、多⼈数が集まる換気の悪い密閉された場所（カラオケ、スナックなど）に⾏きましたか︖</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"checkBoxApplicable3\" value={values.checkBoxApplicable3} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid className={classes.labelAligne} item xs={12}>\n                        <Paper className={classes.paper}> <strong><h5>{t('covid-19.haveSymptoms')} /当てはまる症状がありますか？（はい　いいえ）どちらかに〇印をつけてください</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.haveSymptoms1')}<br /> 発熱（37.5℃以上）</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"haveSymptoms1\" value={values.haveSymptoms1} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Cough')}<br /> /咳（せき)</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Cough\" value={values.Cough} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Phlegm')}<br /> /痰（たん)</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Phlegm\" value={values.Phlegm} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Shortnessofbreath')}<br /> /息苦しい</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Shortnessofbreath\" value={values.Shortnessofbreath} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Senseoffatigue')}<br /> /倦怠感（強いだるさ）</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Senseoffatigue\" value={values.Senseoffatigue} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Abnormalityinthesenseofsmell')}<br /> /臭いがわかりにくい</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Abnormalityinthesenseofsmell\" value={values.Abnormalityinthesenseofsmell} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Unabletoappreciatetaste')}<br /> / 食べ物や飲み物の味がわからない</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Unabletoappreciatetaste\" value={values.Unabletoappreciatetaste} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.VomitingNausea')}<br /> / 吐き気・嘔吐</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"VomitingNausea\" value={values.VomitingNausea} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Diarrhea')}<br /> / 下痢</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Diarrhea\" value={values.Diarrhea} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8} style={{ textAlign: \"left\"}}>\n                        <strong><h4 style={{ fontSize: 19 }}>{t('covid-19.Noappetite')}<br /> / 食欲がない</h4></strong>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"left\"}}>\n                        <FormControl component=\"fieldset\">\n\n                            <RadioGroup row aria-label=\"gender\" name=\"Noappetite\" value={values.Noappetite} onChange={handleChange}>\n                                <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes') + \" /はい\"} />\n                                <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No') + \" /いいえ\"} />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} style={{ textAlign: \"right\"}}>\n                        <Button color=\"primary\" variant=\"contained\" style={{ width: 150 }} onClick={handleConfirm}>\n                            Confirm\n                    </Button>\n                    </Grid>\n                </Grid>\n            </div>\n            <Footer />\n\n        </div>\n    );\n}\n\nexport default Homepage;\n","import React, {useState, createContext} from 'react';\n\nexport const CardiologyContext = createContext();\n\nexport const CardioContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n        problemtoday : [],\n\n        symptomoccur : [],\n        symptomlike : [],\n        scale1to10 : '',\n        symptomstart : new Date,\n        symtomstarttime : new Date,\n\n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n\n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n\n        pregnant : '',\n        breastfeeding : false,\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false\n    });\n\n    return(\n        <CardiologyContext.Provider value={[values, setValues]}>\n            {props.children}\n        </CardiologyContext.Provider>\n    );\n};","import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CardiologyContext } from '../context/cardiologyContext'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n       \n        textAlign: 'center',\n        margin:10,\n        padding:3\n      },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const problem = [\n        { name: 'Irregular pulse /脈が乱れる', value: 'Irregular pulse' },\n        { name: 'Chest pain /胸痛', value: 'Chest pain' },\n        { name: 'Cold sweat /冷汗', value: 'Cold sweat' },\n        { name: 'Heaviness in chest /胸が重たい', value: 'Heaviness in chest' },\n        { name: 'Difficulty breathing /息苦しさ', value: 'Difficulty breathing' },\n        { name: 'Shortness of breath /息切れ', value: 'Shortness of breath' },\n        { name: 'Have a palpitation /動悸がする', value: 'Have a palpitation' },\n        { name: 'Lightheadedness /立ちくらみ', value: 'Lightheadedness' },\n        { name: 'Swelling (face, hands, feet) /むくみ（顔・手・足）', value: 'Swelling (face, hands, feet)' },\n        { name: 'Cold hands and feet /手足が冷たい', value: 'Cold hands and feet' },\n        { name: 'Other(s) /その他：', value: 'Other(s)' },\n        { name: 'I was advised by another clinic/hospital (or at a regular check-up) to come here./他の医療機関から受診するように勧められた（健診含む）', value: 'I was advised by another clinic/hospital (or at a regular check-up) to come here.' },\n    ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const handleToggleProblem = (value) => () => {\n        const currentIndex = values.problemtoday.indexOf(value.value);\n        const newChecked = [...values.problemtoday];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({ ...values, problemtoday: newChecked })\n    };\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday')}<br/>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</h4></strong></Paper>\n                    </Grid>\n                    \n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                    <GridList container style={{height:438, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {problem.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem style={{marginTop:61}} key={value.name} role={undefined} dense button onClick={handleToggleProblem(value)}>\n                                    <ListItemIcon >\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.problemtoday.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} style={{display:\"table-caption\"}}/>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    \n                        </Grid>\n                    </Grid>\n\n            </div>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { CardiologyContext } from '../context/cardiologyContext'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n    gridList: {\n        width: 500,\n        height: 300,\n        textAlign: 'center',\n        margin:10,\n        padding:13\n      },\n      ListItemIcon: {\n          minWidth:32\n      }\n}));\n\nconst CenteredGrid = () => {\n    \n    const foodAlergie = [\n        { name: 'Fish Roe/魚卵', value: 'Fish Roe' },\n        { name: 'Shellfish /貝類', value: 'Shellfish' },\n        { name: 'Milk /甲殻類（エビ、カニ等)', value: 'Milk' },\n        { name: 'Cheese /卵', value: 'Cheese' },\n        { name: 'Buckwheat /魚卵', value: 'Buckwheat' },\n        { name: 'Peanuts /貝類', value: 'Peanuts' },\n        { name: 'Almonds /卵', value: 'Almonds' },\n        { name: 'wheat /小麦', value: 'wheat' },\n        { name: 'soy /大豆', value: 'soy' },\n        { name: 'Kiwifruit /キウイ', value: 'Kiwifruit' },\n        { name: 'Peaches /桃', value: 'Peaches' },\n        { name: 'Yams /山芋', value: 'Yams' },\n        { name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)/青魚\", value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\" },\n        { name: \"Shrimp/Prawns/ Crabs/Lobsters/甲殻類（エビ、カニ等)/発熱\", value: \"Shrimp/Prawns/Crabs/Lobsters\" },\n    ];\n\n    const medecinesAlergie = [\n        {name:\"Alcohol /アルコール\", value:\"Alcohol\"},\n        {name:\"fever reducer /解熱剤\", value:\"fever reducer\"},\n        {name:\"pain killer /痛み止め\", value:\"pain killer\"},\n        {name:\"antibiotics /抗生物質\", value:\"antibiotics\"},\n        {name:\"medicine for stomach and bowels /胃腸薬\", value:\"medicine for stomach and bowels\"},\n        {name:\"anesthetic /麻酔薬\", value:\"antibiotics\"}\n       ];\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const [name, setName] = useState('')\n    const [height, setHeight] = useState('')\n    const [weight, setWeight] = useState('')\n    const [date, setDate] = useState('')\n    const [sex, setSex] = useState('');\n\n    const [checkedFood, setCheckedFood] = React.useState([]);\n    const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n\n    const handleToggleFood = (value) => () => {\n        const currentIndex = values.allergis.foods.indexOf(value.value);\n        const newChecked = [...values.allergis.foods];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n        setValues({...values, allergis:{...values.allergis, foods:newChecked}})\n    };\n\n    \n    const handleToggleMedecin = (value) => () => {\n        const currentIndex = values.allergis.medcine.indexOf(value.value);\n        const newChecked = [...values.allergis.medcine];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n        setValues({...values, allergis:{...values.allergis, medcine:newChecked}})\n    };\n    //console.log(checkedFood)\n   // console.log(checkedMedecine)\n\n    const updateName = (e) => {\n        setName(e.target.value);\n        setValues({...values, name:e.target.value})\n       }\nconsole.log(values)\n\n    const updateHeight = (e) => {\n        setHeight(e.target.value);\n        setValues({...values, height:e.target.value})\n    }\n\n    const updateWeight = (e) => {\n        setWeight(e.target.value);\n        setValues({...values, weight:e.target.value})\n    }\n\n    const updateDate = (date) => {\n        setDate(date)\n        setValues({...values, DateOfBirth:date})\n    }\n\n    const updateSex = (event) => {\n        setSex(event.target.value);\n        setValues({...values, sex:event.target.value})\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('internalMedcine.PersonnalInformation')}</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={8}>\n\n                    <FormControl fullWidth className=''>\n                        <InputLabel htmlFor=\"name\">{t('internalMedcine.LastFirstname')} /医療機関記入欄/生年月日（西暦)</InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            values={name}\n                            defaultValue={values.name}\n                            onChange={updateName}\n                        />\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"yyyy/MM/dd\"\n                                value={values.DateOfBirth}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"height\">{t('internalMedcine.Height')}</InputLabel>\n                            <Input\n                                id=\"height\"\n                                type=\"number\"\n                                values={height}\n                                defaultValue={values.height}\n                                onChange={updateHeight}\n                            />\n                        </FormControl>\n                        \n                    </Grid>\n\n                </Grid>\n                <Grid item xs={4}>\n                <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"weight\">{t('internalMedcine.Weight')}</InputLabel>\n                            <Input\n                                id=\"weight\"\n                                type=\"number\"\n                                values={weight}\n                                defaultValue={values.weight}\n                                onChange={updateWeight}\n                            />\n                        </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Sex')}</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.sex}\n                            onChange={updateSex}\n                        >\n                            <MenuItem value=\"Male\">{t('internalMedcine.Male')}</MenuItem>\n                            <MenuItem value=\"Female\">{t('internalMedcine.Female')}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            \n            <Grid item xs={12}>\n                <Paper className={classes.paper}><strong><h4>{t('internalMedcine.Allergie')} /アレルギー</h4></strong></Paper>\n            </Grid>\n            <br />\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Food Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={2}>\n                        {foodAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleFood(value)}>\n                                    <ListItemIcon className={classes.ListItemIcon}>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.foods.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Medicine Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={1} style={{paddingLeft: 62}}>\n                        {medecinesAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedecin(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.medcine.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n\n                    </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { CardiologyContext } from '../context/cardiologyContext'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const symptomoccurs = [\n        { name: t('internalMedcine.Morning') + \"/ 朝\", value: \"Morning\" },\n        { name: t('internalMedcine.Daytime') + \"/ 昼\", value: \"Daytime\" },\n        { name: t('internalMedcine.Evening') + \"/ 夕方\", value: \"Evening\" },\n        { name: t('internalMedcine.Whileinbed') + \"/ 就寝中\", value: \"Whileinbed\" },\n        { name: t('internalMedcine.Whenwakingup') + \"/ 朝\", value: \"Whenwakingup\" },\n        { name: t('internalMedcine.Irregular') + \"/ 朝\", value: \"Irregular\" },\n        { name: t('internalMedcine.Other') + \"/ 朝\", value: \"Other\" },\n    ]\n\n    const symptomlikes = [\n        { name: t('internalMedcine.Constant') + \"/ 絶え間なく、続いている\", value: \"Constant\" },\n        { name: t('internalMedcine.symptomcomesgoes') + \"/ 症状が出たり消えたりしている\", value: \"symptomcomesgoes\" },\n        { name: t('internalMedcine.symptomgraduallyworsening') + \"/ 絶え間なく、続いている\", value: \"symptomgraduallyworsening\" },\n        { name: t('internalMedcine.Other') + \"/ その他\", value: \"Other\" },\n    ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n\n    const handleToggleSymptomlikes = (object) => () => {\n        const currentIndex = values.symptomlike.indexOf(object.value);\n        const newChecked = [...values.symptomlike];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomlike:newChecked})\n    };\n\n    const handleToggleSymptomoccurs = (object) => () => {\n        const currentIndex = values.symptomoccur.indexOf(object.value);\n        const newChecked = [...values.symptomoccur];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomoccur:newChecked})\n    };\n    const updateFrequency = (event) => {\n        setValues({...values, scale1to10:event.target.value});\n    };\n\n    const updateDate = (date) => {\n        setValues({...values, symptomstart:date})\n    }\n    const updateTime = (time) => {\n        setValues({...values, symtomstarttime:time})\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomoccur')}? <br />/症状はいつ頃起こりますか？</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomoccurs.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomoccurs(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomoccur.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomlike')}? <br />/症状はどのような性質を持っていますか</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 90, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomlikes.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomlikes(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomlike.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.scale1to10')}<br />/その症状の程度を数字で表すと、どのぐらいですか？下の数字から選びなさい。</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <FormControl fullWidth xs={8} className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Select</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={values.scale1to10}\n                                onChange={updateFrequency}\n                            >\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomstart')}?<br /> /この症状はいつからありますか</h5></strong></Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                            <Grid container justify=\"space-around\">\n\n                                <KeyboardDatePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"date-picker-dialog\"\n                                    label={t('internalMedcine.Dateofbirth')}\n                                    format=\"MM/dd/yyyy\"\n                                    value={values.symptomstart}\n                                    onChange={updateDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                                <KeyboardTimePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"time-picker\"\n                                    label=\"Time picker\"\n                                    value={values.symtomstarttime}\n                                    onChange={updateTime}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change time',\n                                    }} />\n                            </Grid>\n\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { CardiologyContext } from '../context/cardiologyContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n\n    const hadsurgerys = [\n        {name: t('internalMedcine.Eye') +\"/ 目\", value:\"Eye\"},\n        {name: t('internalMedcine.Ear') +\"/ 耳\", value:\"Ear\"},\n        {name: t('internalMedcine.Nose') +\"/ 鼻\", value:\"Nose\"},\n        {name: t('internalMedcine.Mouth') +\"/ 口\", value:\"Mouth\"},\n        {name: t('internalMedcine.Throat') +\"/ のど\", value:\"Throat\"},\n        {name: t('internalMedcine.neck') +\"/ 乳房\", value:\"Neck\"},\n        {name: t('internalMedcine.Brest') +\"/ 乳房\", value:\"Brest\"},\n        {name: t('internalMedcine.Esophagus') +\"/ 食道\", value:\"Esophagus\"},\n        {name: t('internalMedcine.Stomach') +\"/ 胃\", value:\"Stomach\"},\n        {name: t('internalMedcine.Intestines') +\"/ 梅毒\", value:\"Intestines\"},\n        {name: t('internalMedcine.Heart') +\"/ 心臓<\", value:\"Heart\"},\n        {name: t('internalMedcine.Cecum') +\"/ 盲腸\", value:\"Cecum\"},\n        {name: t('internalMedcine.Liver') +\"/ 肝臓\", value:\"Liver\"},\n        {name: t('internalMedcine.Pancreas') +\"/ 膵臓\", value:\"Pancreas\"},\n        {name: t('internalMedcine.kidney') +\"/ 腎臓\", value:\"kidney\"},\n        {name: t('internalMedcine.Ovary') +\"/ 卵巣\", value:\"Ovary\"},\n        {name: t('internalMedcine.Uterus') +\"/ 子宮\", value:\"Uterus\"},\n        {name: t('internalMedcine.Upperlowerlimb') +\"/ 上下肢\", value:\"EUpperlowerlimbye\"},\n        {name: t('internalMedcine.Others') +\"/ その他\", value:\"Others\"}\n       ]\n\n    const onmedications = [\n        {name: t('internalMedcine.Coldmedicine') +\"/ かぜ薬\", value:\"Coldmedicine\"},\n        {name: t('internalMedcine.Feverreducer') +\"/ 朝解熱剤\", value:\"Feverreducer\"},\n        {name: t('internalMedcine.Painkiller') +\"/ 痛み止め\", value:\"Painkiller\"},\n        {name: t('internalMedcine.Anti-suppuration') +\"/ 化膿止め\", value:\"Anti-suppuration\"},\n        {name: t('internalMedcine.Antibiotics') +\"/ 化膿止め\", value:\"Antibiotics\"}\n       ]\n\n       const ondoctorcares = [\n        {name: t('internalMedcine.bronchialasthma') +\"/ 気管支喘息 /発熱\", value:\"bronchialasthma\"},\n        {name: t('internalMedcine.highbloodpressure') +\"/ 絶高血圧\", value:\"highbloodpressure\"},\n        {name: t('internalMedcine.Diabetesmellitus') +\"/ 糖尿病\", value:\"Diabetesmellitus\"},\n        {name: t('internalMedcine.Tuberculosis') +\"/ 結核\", value:\"Tuberculosis\"},\n        {name: t('internalMedcine.Hearttrouble') +\"/ 心臓病\", value:\"Hearttrouble\"},\n        {name: t('internalMedcine.HepatitisB') +\"/ Ｂ型肝炎\", value:\"HepatitisB\"},\n        {name: t('internalMedcine.epatitisC') +\"/ Ｃ型肝炎\", value:\"epatitisC\"},\n        {name: t('internalMedcine.collagenConnectiveTissuedisease') +\"/ 膠原病\", value:\"collagenConnectiveTissuedisease\"},\n        {name: t('internalMedcine.Thyroiddisease') +\"/ 甲状腺の病気\", value:\"Thyroiddisease\"},\n        {name: t('internalMedcine.Cancertumor') +\"/ 血液の病気\", value:\"Cancertumor\"},\n        {name: t('internalMedcine.glaucoma') +\"/ 緑内障\", value:\"glaucoma\"},\n        {name: t('internalMedcine.Gastrointestinaldisorder') +\"/ 胃腸の病気\", value:\"BlooGastrointestinaldisorderddisease\"},\n        {name: t('internalMedcine.Gonorrhea') +\"/ 淋病\", value:\"Gonorrhea\"},\n        {name: t('internalMedcine.Syphilis') +\"/ 梅毒\", value:\"Syphilis\"}\n       ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n    \n\n    const handleToggleHadsurgerysType = (object) => () => {\n        const currentIndex = values.hadsurgerys.indexOf(object.value);\n        const newChecked = [...values.hadsurgerys];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, hadsurgerys:newChecked})\n    };\n\n    const handleChangeHadsurgerys = (event) => {\n        setValues({...values, hadsurgery:event.target.value})\n    };\n\n\n    const handleToggleMedicationType = (object) => () => {\n        const currentIndex = values.onmedications.indexOf(object.value);\n        const newChecked = [...values.onmedications];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, onmedications:newChecked})\n    };\n\n    const handleChange = (event) => {\n        setValues({...values, onMedication:event.target.value})\n    };\n\n    const handleToggleDoctorcaresType = (object) => () => {\n        const currentIndex = values.doctorCare.indexOf(object.value);\n        const newChecked = [...values.doctorCare];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, doctorCare:newChecked})\n    };\n\n    const handleChangeDoctorcare = (event) => {\n        setValues({...values, doctorcare:event.target.value})\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.currentlyonmedication')} <br />/現在何か薬を飲んでいますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.onMedication} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n\n                <Grid>\n                <div>\n                    {values.onMedication === 'Yes' ? (\n                        <div>\n                        <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {onmedications.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedicationType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.onmedications.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.underdoctorcare')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.doctorcare} onChange={handleChangeDoctorcare}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.doctorcare === 'Yes' ? (\n                        <Grid container item xs={12}>\n                        <FormLabel container style={{marginTop:-25, lineHeight:2, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')} <br/>/「はい」に☑した人は、疾患名リストから選択し、治療していた医療機関名を書いてください。</strong></FormLabel>\n                        <GridList style={{ height: 200, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {ondoctorcares.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleDoctorcaresType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.doctorCare.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </Grid>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.hadsurgery')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.hadsurgery} onChange={handleChangeHadsurgerys}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.hadsurgery === 'Yes' ? (\n                        <div>\n                            <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 233, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {hadsurgerys.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n                           return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleHadsurgerysType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.hadsurgerys.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { CardiologyContext } from '../context/cardiologyContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(CardiologyContext);\n    const [year, setYear] = useState('')\n    const classes = useStyles();\n   \n\n    const handleChangeCheckDrink = (event) => {\n        const variable = event.target.name;\n        //setCheckDrink({ ...CheckDrink, [event.target.name]: event.target.checked });\n        setValues({...values, drinkeday:{...values.drinkeday, [event.target.name]:event.target.checked}})\n        console.log([event.target.name])\n    };\n\n    const updateBeerFrequency = (event) => {\n        setValues({...values, drinkeday:{...values.drinkeday, nobeer:event.target.value}})\n    };\n\n    const updateWiskyFrequency = (event) => {\n       setValues({...values, drinkeday:{...values.drinkeday, nowisky:event.target.value}})\n    };\n\n    const updateJapsakeFrequency = (event) => {\n        setValues({...values, drinkeday:{...values.drinkeday, nojapsake:event.target.value}})\n    };\n\n    const updateWineFrequency = (event) => {\n       setValues({...values, drinkeday:{...values.drinkeday, nowine:event.target.value}})\n    };\n\n    const updateOthersFrequency = (event) => {\n       setValues({...values, drinkeday:{...values.drinkeday, noOther:event.target.value}})\n    };\n\n    const handleChange = (event) => {\n       setValues({...values, smokeregularly:event.target.value})\n    };\n\n    const handleChangeDrink = (event) => {\n        setValues({...values, drinkregularly:event.target.value})\n    };\n\n    const updateFrequency = (event) => {\n        setValues({...values, smokeday:{...values.smokeday, amount:event.target.value}})\n    };\n\n    const updateFrequencyDuration = (event) => {\n        setValues({...values, smokeday:{...values.smokeday, duration:event.target.value}})\n    };\n    const updateYear = (event) => {\n        setValues({...values, smokeday:{...values.smokeday, yearStop:event.target.value}})\n    }\nconsole.log(values)\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.smokeregularly')}? <br />/習慣的に、たばこを吸いますか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.smokeregularly} onChange={handleChange}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseTo\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.smokeregularly === 'Yes') || (values.smokeregularly === 'YesUseTo') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{paddingLeft:16, marginTop: -22, marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Cigaretteconsumption')} /喫煙量</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.amount}\n                                            onChange={updateFrequency}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.cigarettesDay')} 本/日</FormHelperText>\n                                       \n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <FormControl fullWidth className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Durationofsmoking')} /喫煙期間</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={values.smokeday.duration}\n                                            onChange={updateFrequencyDuration}\n                                        >\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={3}>3</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={5}>5</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{t('internalMedcine.NoofYear')} /年</FormHelperText>\n                                        </FormControl>\n                                </Grid>\n                                <Grid item xs={8}>\n                                    <FormControl fullWidth className=''>\n                                        <InputLabel htmlFor=\"name\">{t('internalMedcine.yearStopSmooking')} /喫煙をやめた年</InputLabel>\n                                        <Input\n                                            id=\"name\"\n                                            type=\"number\"\n                                            values={values.smokeday.yearStop}\n                                            defaultValue={values.smokeday.yearStop}\n                                            onChange={updateYear}\n                                        />\n                                    </FormControl>\n                                </Grid>\n\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.drinkregularly')}? <br />/習慣的にお酒を飲みますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender\" value={values.drinkregularly} onChange={handleChangeDrink}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"YesUseToSmook\" control={<Radio />} label={t('internalMedcine.Usedtosmoke')} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} >\n\n                    <div >\n                        {(values.drinkregularly === 'Yes') || (values.drinkregularly === 'YesUseToSmook') ? (\n                            <Grid className=\"shadow\" container spacing={3} style={{ padding: 20 }} style={{ paddingLeft:16, marginTop: -22,  marginRigh: 18, marginBottom: 18, paddingTop: 12, paddingBottom: 12, border: 'solid', borderTopWidth: 1, borderLeftWidth: 1, borderRightWidth: 1, borderBottomWidth: 1, backgroundColor: '#0000001a', borderRadius: 5, borderColor: 'black' }}>\n                                \n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.beer}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"beer\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Beer')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nobeer}\n                                                onChange={updateBeerFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                            </FormControl>\n                                    </Grid>\n                               \n\n                               \n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.wisky}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"wisky\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Whisky')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -130 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nowisky}\n                                                onChange={updateWiskyFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.japsake}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"japsake\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Japanesesake')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -68 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nojapsake}\n                                                onChange={updateJapsakeFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.wine}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"wine\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Wine')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.nowine}\n                                                onChange={updateWineFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid container item xs={3}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={values.drinkeday.other}\n                                                    onChange={handleChangeCheckDrink}\n                                                    name=\"other\"\n                                                />\n                                            }\n                                            label={t('internalMedcine.Other')}\n                                        />\n                                    </Grid>\n                                    <Grid container item xs={3}>\n                                        <FormControl fullWidth className={classes.formControl} style={{ marginTop: -13, marginLeft: -146 }}>\n                                            <InputLabel id=\"demo-simple-select-label\">ml /Day/日</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={values.drinkeday.noOther}\n                                                onChange={updateOthersFrequency}\n                                            >\n                                                <MenuItem value={1}>1</MenuItem>\n                                                <MenuItem value={2}>2</MenuItem>\n                                                <MenuItem value={3}>3</MenuItem>\n                                                <MenuItem value={4}>4</MenuItem>\n                                                <MenuItem value={5}>5</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                            </Grid>\n                        ) : (\n                                <nav> &apos; </nav>\n                            )}\n                    </div>\n\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CardiologyContext } from '../context/cardiologyContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n\n    const handleChangeCheckSpecialRequest = (event) => {\n        setValues({...values, [event.target.name]:event.target.checked})\n    };\n\n    const handleChange = (event) => {\n        setValues({...values, pregnant:event.target.value})\n    };\n\n    const handleChangebreastFeeding = (event) => {\n        setValues({...values, breastfeeding:event.target.value})\n    };\nconsole.log(values)\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.Iffemale')}? <br />/女性の方のみお答えください。妊娠していますか、またその可能性はありますか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.pregnant} onChange={handleChange}>\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"No\" control={<Radio />} label={t('internalMedcine.No')} />\n                            <FormControlLabel value=\"Don't know\" control={<Radio />} label={t('internalMedcine.Donotknow') + '/わからない'} />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.Areyoubreastfeeding')}? <br />/現在、授乳中ですか。</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n\n                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.breastfeeding} onChange={handleChangebreastFeeding}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label={t('internalMedcine.yes')} />\n                            <FormControlLabel value=\"false\" control={<Radio />} label={t('internalMedcine.No')} />\n\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.specialrequestconcerningconsultation')}? <br />/診察でのご希望がある場合は、☑をしてください。</h5></strong></Paper>\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.medicalexpenses}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"medicalexpenses\"\n                            />\n                        }\n                        label={t('internalMedcine.informedonestimatedexpenses')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.haveinterpreter}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"haveinterpreter\"\n                            />\n                        }\n                        label={t('internalMedcine.interpreterinterpreterservice')}\n                    />\n                </Grid>\n\n                <Grid container item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={values.otherssss}\n                                onChange={handleChangeCheckSpecialRequest}\n                                name=\"otherssss\"\n                            />\n                        }\n                        label={t('internalMedcine.Other')+'(s)/その他'}\n                    />\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\nexport default CenteredGrid;","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from '../nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './form2';\nimport Form1 from './form1';\nimport Form3 from './form3';\nimport Form4 from './form4';\nimport Form5 from './form5';\nimport Form6 from './form6';\nimport Form7 from './form7';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { CardiologyContext } from '../context/cardiologyContext';\nimport axios from \"axios\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //width: '100%',\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction getSteps() {\n    return ['', '', '', '', '', ''];\n}\n\nfunction GetStepContent({ activeStep, name, setValues }) {\n    //console.log(\"this is the name \"+ values.name);\n\n    switch (activeStep) {\n        case 0:\n            return <Form1　/>;\n        case 1:\n            return <Form2 />;\n        case 2:\n            return <Form3 />;\n        case 3:\n            return <Form4 />;\n        case 4:\n            return <Form5 />;\n        case 5:\n            return <Form6 />;\n        \n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n    const [values, setValues] = React.useState({});\n    const [datas, setDatas] = useContext(CardiologyContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n\n    const isStepOptional = (step) => {\n        return step === 10;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = (e) => {\n        e.preventDefault();\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const handleSubmit = () =>{\n        //console.log(datas)\n    /*\n       axios.post('http://localhost:5000/internaMedcine', datas)\n       .then(res => {\n         console.log(res.data)\n        // window.location = '/homepage';\n        });\n       */\n      }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <div className={classes.root}>\n                    <Nav />\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            if (isStepOptional(index)) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n                            if (isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    All steps completed - you&apos;re finished\n            </Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                    Reset\n            </Button>\n                            </div>\n                        ) : (\n                                <div>\n                                    <div className={classes.instructions}>\n\n                                        { /*{getStepContent(activeStep, values, classes, t, setValues, setSelectedDate, selectedDate)}*/}\n                                       \n                                            <GetStepContent activeStep={activeStep} name={values.name} setValues={setValues} />\n                                       \n                                    </div>\n                                    <div>\n                                        <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n              </Button>\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={activeStep === steps.length - 1 ?  handleSubmit : handleNext}\n                                            className={classes.button}\n                                        >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, { useState, useContext }  from 'react'\n\n\nconst CenteredGrid = () => {\n    return (\n        <div>\n\n        </div>\n        )\n    }\n    export default CenteredGrid;","import React, {useState, createContext} from 'react';\n\nexport const GastrologyContext = createContext();\n\nexport const GastroContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n \n        problemtoday : [],\n        stools : [],\n        stoolfrequency : '',\n       \n        symptomoccur : [],\n        symptomlike : [],\n        scale1to10 : '',\n        symptomstart : new Date,\n        symtomstarttime : new Date,\n        \n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n        \n        \n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n        pregnant : '',\n        breastfeeding : false,\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false,\n\n        bodyPart : []\n    });\n   \n\n    return(\n        <GastrologyContext.Provider value={[values, setValues]}>\n            {props.children}\n        </GastrologyContext.Provider>\n    );\n};","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from '../nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './form2';\nimport Form1 from './form1';\nimport Form3 from './form3';\nimport Form4 from './form4';\nimport Form5 from './form5';\nimport Form6 from './form6';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { GastrologyContext } from '../context/gastrologyContext';\nimport axios from \"axios\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //width: '100%',\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction getSteps() {\n    return ['', '', '', '', '', ''];\n}\n\nfunction GetStepContent({ activeStep, name, setValues }) {\n    //console.log(\"this is the name \"+ values.name);\n\n    switch (activeStep) {\n        case 0:\n            return <Form1　/>;\n        case 1:\n            return <Form2 />;\n        case 2:\n            return <Form3 />;\n        case 3:\n            return <Form4 />;\n        case 4:\n            return <Form5 />;\n        case 5:\n            return <Form6 />;\n        \n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n    const [values, setValues] = React.useState({});\n    const [datas, setDatas] = useContext(GastrologyContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n\n    const isStepOptional = (step) => {\n        return step === 10;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = (e) => {\n        e.preventDefault();\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const handleSubmit = () =>{\n        //console.log(datas)\n    /*\n       axios.post('http://localhost:3001/internaMedcine', datas)\n       .then(res => {\n         console.log(res.data)\n        // window.location = '/homepage';\n        });\n       */\n      }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n                <div className={classes.root}>\n                    <Nav />\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            if (isStepOptional(index)) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n                            if (isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    All steps completed - you&apos;re finished\n            </Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                    Reset\n            </Button>\n                            </div>\n                        ) : (\n                                <div>\n                                    <div className={classes.instructions}>\n\n                                        { /*{getStepContent(activeStep, values, classes, t, setValues, setSelectedDate, selectedDate)}*/}\n                                       \n                                            <GetStepContent activeStep={activeStep} name={values.name} setValues={setValues} />\n                                       \n                                    </div>\n                                    <div>\n                                        <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n              </Button>\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={activeStep === steps.length - 1 ?  handleSubmit : handleNext}\n                                            className={classes.button}\n                                        >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n","import React, {useState, createContext} from 'react';\n\nexport const LogfileContext = createContext();\n\nexport const LogContext = props => {\n    const [values, setValues] = useState({\n        inteviewName: '',\n        userName: '',\n        language: '',\n        contentSentence: '',\n        date: new Date,\n    });\n   \n\n    return(\n        <LogfileContext.Provider value={[values, setValues]}>\n            {props.children}\n        </LogfileContext.Provider>\n    );\n};","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n//import { SentContext } from './basicSentContext';\nimport axios from \"axios\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"8px\",\n        marginLeft: \"25px\",\n        color: \"white\",\n        fontSize: \"16px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"60px\",\n        minWidth: \"160px !important\", \n        borderRadius: \"10px\"\n    },\n    content: {\n        //paddingBottom: \"10%\",\n        //paddingTop: \"15%\",\n    },\n\n    foot:{\n        bottom: 0\n    },\n\n    div1: {\n        width: \"95%\",\n        height: \"150px\",\n        fontSize: \"26px\",\n        backgroundColor: \"#6CAFED\",\n        margin: \"20px\",\n        marginLeft: \"20px\",\n        borderRadius:\"10px\"\n    },\n\n     div2: {\n        width: \"95%\",\n         height: \"fit-content\",\n         fontSize: \"26px\",\n         backgroundColor: \"#B4C0CB\",\n         margin: \"20px\",\n         marginLeft: \"20px\",\n         paddingBottom:\"20px\",\n         borderRadius: \"10px\"\n    },\n\n    a: {\n        padding: \"3px\",\n        marginTop: \"5px\",\n        textDecoration: \"underline\",\n        display:\"inline\"\n    },\n\n    p1: {\n        textAlign: \"left\",\n        marginLeft: \"20px\",\n        marginTop: \"20px\",\n        fontSize: \"44px\",\n        fontWeight:\"bold\",\n        color: \"white\"\n    },\n    p2: {\n        textAlign: \"left\",\n        marginLeft: \"20px\",\n        color: \"white\"\n    },\n    p3: {\n        textAlign: \"left\",\n        marginTop: \"20px\",\n        marginLeft: \"20px\",\n        fontWeight: \"bold\"\n    },\n    p4: {\n        textAlign: \"left\",\n        marginLeft: \"80px\"\n    }\n}));\n\n\nfunction find() {\n    var findVal = document.getElementById(\"text1\").value;\n    //alert(findVal);\n    window.location.href = \"/wordDetails?find=\" + findVal;\n}\n\nfunction getQueryVariable(variable) {\n    const query = window.location.search.substring(1);\n    const vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        const pair = vars[i].split(\"=\");\n        if (pair[0] == variable) { return pair[1]; }\n    }\n    return (false);\n}\n\nfunction WordDetails() {\n\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n    const words = (decodeURI(getQueryVariable(\"find\")));\n    const request = {       \n        words: words\n    }\n    \n    axios.post('http://localhost:3001/wakayamaWord/findWords', request).then((response) => {\n        const list = response.data.length;\n        const data = response.data;\n        const div1 = document.getElementById('div1');\n        const div2 = document.getElementById('div2');\n        if (list > 0) {\n            div1.innerHTML =\n                '<p class=\"makeStyles-p1-6\" >' + data[0].words + '</p >' +\n                '<p class=\"makeStyles-p2-7\" >' + data[0].explain + '</p>';\n            div2.innerHTML =\n                '<p class=\"makeStyles-p3-8\" >詳細</p >' +\n                '<p class=\"makeStyles-p4-9\" >' + data[0].detail + '</p>';\n        } else {\n            div1.innerHTML =\n                '<p class=\"makeStyles-p1-6\" >Sorry, we can\\'t find the word</p >';\n            div2.hidden=\"hidden\";\n        }\n}) .catch((error) => {\n        console.log(error);\n    });\n\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"black\" }}>\n                                Word Detail\n                         </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n                <div className={classes.content}>\n                    <TextField className={classes.textFiled} id=\"text1\" variant=\"outlined\" label=\"Input your word\" style={{ width: \"62%\", marginTop: \"20px\", paddingLeft: \"10px\", borderRadius: \"15px\" }} />\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ marginTop: \"20px\" }} onClick={find}> {t('search')}</Button>\n                    <Link to=\"/wakayama\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ backgroundColor: \"#B4C0CB\", marginRight: \"20px\", marginTop: \"20px\" }} > {t('back')}</Button></Link>\n                    <div className={classes.div1} id=\"div1\">                 \n                    </div >\n                    <div className={classes.div2} id=\"div2\">                     \n                    </div >\n                </div>\n                <div className={classes.foot}>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#eb5757b5\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"133px\" }}>\n                                Copyright 2019 ETL (Eiko Takaoka Laboratory, Sophia University)\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n            </div>\n        );\n   }\n\nexport default WordDetails;\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n//import { SentContext } from './basicSentContext';\nimport axios from \"axios\"\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"8px\",\n        marginLeft: \"25px\",\n        color: \"white\",\n        fontSize: \"16px\",\n        backgroundColor: \"#6CAFED\",\n        minHeight: \"60px\",\n        minWidth: \"160px !important\", \n        borderRadius: \"10px\"\n    },\n    content: {\n        paddingBottom: \"14%\",\n        paddingTop: \"10%\"\n    },\n    div1: {\n        width: \"40%\",\n        fontSize: \"26px\",\n        float:\"left\"\n    },\n\n     div2: {\n        width: \"45%\",\n        fontSize: \"26px\",\n        float: \"right\"\n    },\n\n    a: {\n        padding: \"3px\",\n        marginTop: \"5px\",\n        textDecoration: \"underline\",\n        display:\"inline\"\n    },\n\n    p: {\n        textAlign: \"center\",\n        fontSize: \"22px\",\n        display: \"inline\"\n    }\n\n}));\n\n\nfunction find() {\n    var findVal = document.getElementById(\"text1\").value;\n    //alert(findVal);\n    window.location.href = \"/wordDetails?find=\" + findVal;\n}\n\nfunction Dictionary() {\n\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n    const [values, setValues] = useState({\n    letter : '',\n    count : '',\n    remark : ''\n});\n     const [letter, setLetter] = useState('');\n\n    axios.get('http://localhost:3001/dialectSentence').then((response) => {\n        const list = response.data.length;\n        //javascript:return false;\n        //console.log(list);\n        console.log(response.data);\n        //console.log(response.data[0].letter);\n        for (var i = 0; i< list; i++) {\n            if (response.data[i].count == 0) {\n                //document.getElementById(response.data[0].letter).href = \"javascript:return false\";\n                document.getElementById(response.data[0].letter).style = \"color: #B4C0CB; text-decoration: none;pointer-events: none;\";\n            }\n        }\n}) .catch((error) => {\n        console.log(error);\n    });\n\n        return (\n            <div className=\"container\">\n                <Nav />\n                <div>\n                    <AppBar position=\"static\" style={{ backgroundColor: \"#F9B1B1\", }}>\n                        <Toolbar>\n                            <Typography className={classes.title} variant=\"h6\" noWrap style={{ paddingLeft: \"10px\", color: \"black\" }}>\n                                Wakayama Dialect Dictionary \n                         </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </div>\n                <div className={classes.content}>\n                    <TextField className={classes.textFiled} id=\"text1\" variant=\"outlined\" label=\"Input your word\" style={{ width: \"82%\", marginTop: \"80px\", paddingLeft: \"10px\", borderRadius: \"15px\" }} />\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ marginTop: \"80px\" }} onClick={find}> {t('search')}</Button>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                <p className={classes.p}>No words you want? Try:</p>\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation> {t('translate')}</Button>\n                <p className={classes.p}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or &nbsp;&nbsp;</p>\n                <Link to=\"/wakayama\"><Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation style={{ backgroundColor: \"#B4C0CB\", marginRight: \"20px\" }} > {t('back')}</Button></Link>\n                </div>\n                <Footer />\n            </div>\n        );\n   }\n\nexport default Dictionary;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './i18n';\nimport Axios from \"axios\";\nimport UserContext from \"./components/context/UserContext\";\n//import Nav from \"./components/nav\";\n\nimport Login1 from \"./components/auth/login1\";\nimport Hompage from \"./components/homepage\";\nimport Nav from \"./components/nav\";\nimport Inteview from \"./components/inteview\";\nimport InternalMedcine from \"./components/InternalMedcine\";\nimport Dialect from \"./components/diaLect/dialect\";\nimport Wakayama from \"./components/diaLect/wakayama\";\nimport FontDetails from \"./components/diaLect/fontDetails\";\nimport FindDetails from \"./components/diaLect/findDetails\";\nimport BasicSentences from \"./components/diaLect/basicSentences\";\nimport Obstetricgynecology from \"./components/Obstetricgynecology\";\nimport Disclaimer from \"./components/disclaimer\";\nimport Covid19 from \"./components/covid-19\";\nimport Cardiology from \"./components/CardiologyForms/cardiology\";\nimport Gastrology from \"./components/GastrologyForm/gastrology\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { InternalMedContext } from './components/internalMedContext';\nimport { CardioContext } from './components/context/cardiologyContext';\nimport { LogContext } from './components/context/logfileContext';\nimport { GastrologyContext } from './components/context/gastrologyContext';\n//import { BasicSentContext } from './components/diaLect/basicSentContext';\nimport { ObstetricgynecologyContext } from \"./components/ObstetricgynecologyContext\"\nimport { Covid19Context } from \"./components/context/covid19Context\"\n\nimport WordDetails from \"./components/diaLect/wordDetails\";\nimport Dictionary from \"./components/diaLect/dictionary\";\n\n\nfunction App() {\n\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"http://localhost:5000/user/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://localhost:5000/user/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    }\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <>\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <LogContext>\n        <Covid19Context>\n          <Route exact path=\"/\" component={Covid19} />\n        </Covid19Context>\n        \n        <Route path=\"/login1\" component={Login1} />\n        <Route path=\"/homepage\" component={Hompage} />\n        <Route path=\"/inteview\" component={Inteview} />\n        <Route path=\"/nav\" component={Nav} />\n\n\n        <Route path=\"/disclaimer\" component={Disclaimer} />\n\n        <InternalMedContext>\n          <Route path=\"/internalMedcine\" component={InternalMedcine} />\n        </InternalMedContext>\n\n        <ObstetricgynecologyContext>\n          <Route path=\"/obstetricgynecology\" component={Obstetricgynecology} />\n        </ObstetricgynecologyContext>\n\n        <CardioContext>\n          <Route path=\"/cardiology\" component={Cardiology} />\n        </CardioContext>\n\n\n        <Route path=\"/gastrology\" component={Gastrology} />\n\n\n        <Route path=\"/dialect\" component={Dialect} />\n        <Route path=\"/wakayama\" component={Wakayama} />\n        <Route path=\"/basicSentences\" component={BasicSentences} />\n        <Route path=\"/fontDetails\" component={FontDetails} />\n        <Route path=\"/findDetails\" component={FindDetails} />\n        <Route path=\"/dictionary\" component={Dictionary} />\n        <Route path=\"/wordDetails\" component={WordDetails} />\n\n        </LogContext>\n      </UserContext.Provider>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\">\n    <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}