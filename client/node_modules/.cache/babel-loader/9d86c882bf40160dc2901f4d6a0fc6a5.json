{"ast":null,"code":"import _slicedToArray from\"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext}from'react';export var MedContext=createContext();export var InternalMedContext=function InternalMedContext(props){var _useState=useState({name:'',DateOfBirth:new Date(),height:'',weight:'',sex:'',allergis:{foods:[],medcine:[]},problemtoday:[],stools:[],stoolfrequency:'',symptomoccur:[],symptomlike:[],scale1to10:'',symptomstart:new Date(),symtomstarttime:new Date(),onMedication:'',onmedications:[],doctorcare:'',doctorCare:[],hadsurgerys:[],hadsurgery:'',smokeregularly:'',smokeday:{amount:'',duration:'',yearStop:''},drinkregularly:'',drinkeday:{beer:false,nobeer:'',japsake:false,nojapsake:'',wisky:false,nowisky:'',wine:false,nowine:'',other:false,noOther:''},pregnant:'',breastfeeding:false,medicalexpenses:false,haveinterpreter:false,otherssss:false,bodyPart:[]}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];return/*#__PURE__*/React.createElement(MedContext.Provider,{value:[values,setValues]},props.children);};","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/internalMedContext.js"],"names":["React","useState","createContext","MedContext","InternalMedContext","props","name","DateOfBirth","Date","height","weight","sex","allergis","foods","medcine","problemtoday","stools","stoolfrequency","symptomoccur","symptomlike","scale1to10","symptomstart","symtomstarttime","onMedication","onmedications","doctorcare","doctorCare","hadsurgerys","hadsurgery","smokeregularly","smokeday","amount","duration","yearStop","drinkregularly","drinkeday","beer","nobeer","japsake","nojapsake","wisky","nowisky","wine","nowine","other","noOther","pregnant","breastfeeding","medicalexpenses","haveinterpreter","otherssss","bodyPart","values","setValues","children"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,aAAzB,KAA6C,OAA7C,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGD,aAAa,EAAhC,CAEP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,KAAK,CAAI,eACXJ,QAAQ,CAAC,CACjCK,IAAI,CAAG,EAD0B,CAEjCC,WAAW,CAAG,GAAIC,CAAAA,IAAJ,EAFmB,CAGjCC,MAAM,CAAG,EAHwB,CAIjCC,MAAM,CAAG,EAJwB,CAKjCC,GAAG,CAAG,EAL2B,CAMjCC,QAAQ,CAAG,CACPC,KAAK,CAAG,EADD,CAEPC,OAAO,CAAG,EAFH,CANsB,CAWjCC,YAAY,CAAG,EAXkB,CAYjCC,MAAM,CAAG,EAZwB,CAajCC,cAAc,CAAG,EAbgB,CAejCC,YAAY,CAAG,EAfkB,CAgBjCC,WAAW,CAAG,EAhBmB,CAiBjCC,UAAU,CAAG,EAjBoB,CAkBjCC,YAAY,CAAG,GAAIb,CAAAA,IAAJ,EAlBkB,CAmBjCc,eAAe,CAAG,GAAId,CAAAA,IAAJ,EAnBe,CAqBjCe,YAAY,CAAG,EArBkB,CAsBjCC,aAAa,CAAE,EAtBkB,CAwBjCC,UAAU,CAAE,EAxBqB,CAyBjCC,UAAU,CAAG,EAzBoB,CA2BjCC,WAAW,CAAE,EA3BoB,CA4BjCC,UAAU,CAAE,EA5BqB,CA+BjCC,cAAc,CAAG,EA/BgB,CAgCjCC,QAAQ,CAAG,CACPC,MAAM,CAAG,EADF,CAEPC,QAAQ,CAAG,EAFJ,CAGPC,QAAQ,CAAG,EAHJ,CAhCsB,CAqCjCC,cAAc,CAAE,EArCiB,CAsCjCC,SAAS,CAAE,CACPC,IAAI,CAAG,KADA,CAEPC,MAAM,CAAG,EAFF,CAGPC,OAAO,CAAG,KAHH,CAIPC,SAAS,CAAG,EAJL,CAKPC,KAAK,CAAG,KALD,CAMPC,OAAO,CAAG,EANH,CAOPC,IAAI,CAAG,KAPA,CAQPC,MAAM,CAAG,EARF,CASPC,KAAK,CAAG,KATD,CAUPC,OAAO,CAAG,EAVH,CAtCsB,CAkDjCC,QAAQ,CAAG,EAlDsB,CAmDjCC,aAAa,CAAG,KAnDiB,CAoDjCC,eAAe,CAAG,KApDe,CAqDjCC,eAAe,CAAG,KArDe,CAsDjCC,SAAS,CAAG,KAtDqB,CAwDjCC,QAAQ,CAAG,EAxDsB,CAAD,CADG,wCAChCC,MADgC,eACxBC,SADwB,eA6DvC,mBACI,oBAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAE,CAACD,MAAD,CAASC,SAAT,CAA5B,EACKhD,KAAK,CAACiD,QADX,CADJ,CAKH,CAlEM","sourcesContent":["import React, {useState, createContext} from 'react';\n\nexport const MedContext = createContext();\n\nexport const InternalMedContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n \n        problemtoday : [],\n        stools : [],\n        stoolfrequency : '',\n       \n        symptomoccur : [],\n        symptomlike : [],\n        scale1to10 : '',\n        symptomstart : new Date,\n        symtomstarttime : new Date,\n        \n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n        \n        \n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n        pregnant : '',\n        breastfeeding : false,\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false,\n\n        bodyPart : []\n    });\n   \n\n    return(\n        <MedContext.Provider value={[values, setValues]}>\n            {props.children}\n        </MedContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}