{"ast":null,"code":"import _objectSpread from\"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import Paper from'@material-ui/core/Paper';import{useTranslation}from'react-i18next';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import Checkbox from'@material-ui/core/Checkbox';import GridList from'@material-ui/core/GridList';import FormControl from'@material-ui/core/FormControl';import MenuItem from'@material-ui/core/MenuItem';import InputLabel from'@material-ui/core/InputLabel';import Select from'@material-ui/core/Select';import{MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker}from'@material-ui/pickers';import DateFnsUtils from'@date-io/date-fns';import{CardiologyContext}from'../context/cardiologyContext';var useStyles=makeStyles(function(theme){return{root:{width:'100%'},gridList:{width:1000,textAlign:'center',margin:10,padding:5},button:{marginRight:theme.spacing(1)},instructions:{marginTop:theme.spacing(1),marginBottom:theme.spacing(1)},paper:{padding:theme.spacing(2),textAlign:'center',color:'black'}};});var CenteredGrid=function CenteredGrid(){var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var symptomoccurs=[{name:t('internalMedcine.Morning')+\"/ 朝\",value:\"Morning\"},{name:t('internalMedcine.Daytime')+\"/ 昼\",value:\"Daytime\"},{name:t('internalMedcine.Evening')+\"/ 夕方\",value:\"Evening\"},{name:t('internalMedcine.Whileinbed')+\"/ 就寝中\",value:\"Whileinbed\"},{name:t('internalMedcine.Whenwakingup')+\"/ 朝\",value:\"Whenwakingup\"},{name:t('internalMedcine.Irregular')+\"/ 朝\",value:\"Irregular\"},{name:t('internalMedcine.Other')+\"/ 朝\",value:\"Other\"}];var symptomlikes=[{name:t('internalMedcine.Constant')+\"/ 絶え間なく、続いている\",value:\"Constant\"},{name:t('internalMedcine.symptomcomesgoes')+\"/ 症状が出たり消えたりしている\",value:\"symptomcomesgoes\"},{name:t('internalMedcine.symptomgraduallyworsening')+\"/ 絶え間なく、続いている\",value:\"symptomgraduallyworsening\"},{name:t('internalMedcine.Other')+\"/ その他\",value:\"Other\"}];var _useContext=useContext(CardiologyContext),_useContext2=_slicedToArray(_useContext,2),values=_useContext2[0],setValues=_useContext2[1];var classes=useStyles();var handleToggleSymptomlikes=function handleToggleSymptomlikes(object){return function(){var currentIndex=values.symptomlike.indexOf(object.value);var newChecked=_toConsumableArray(values.symptomlike);if(currentIndex===-1){newChecked.push(object.value);}else{newChecked.splice(currentIndex,1);}setValues(_objectSpread({},values,{symptomlike:newChecked}));};};var handleToggleSymptomoccurs=function handleToggleSymptomoccurs(object){return function(){var currentIndex=values.symptomoccur.indexOf(object.value);var newChecked=_toConsumableArray(values.symptomoccur);if(currentIndex===-1){newChecked.push(object.value);}else{newChecked.splice(currentIndex,1);}setValues(_objectSpread({},values,{symptomoccur:newChecked}));};};var updateFrequency=function updateFrequency(event){setValues(_objectSpread({},values,{scale1to10:event.target.value}));};var updateDate=function updateDate(date){setValues(_objectSpread({},values,{symptomstart:date}));};var updateTime=function updateTime(time){setValues(_objectSpread({},values,{symtomstarttime:time}));};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3,style:{padding:20}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"strong\",null,/*#__PURE__*/React.createElement(\"h5\",null,t('internalMedcine.symptomoccur'),\"? \",/*#__PURE__*/React.createElement(\"br\",null),\"/\\u75C7\\u72B6\\u306F\\u3044\\u3064\\u9803\\u8D77\\u3053\\u308A\\u307E\\u3059\\u304B\\uFF1F\")))),/*#__PURE__*/React.createElement(GridList,{style:{height:120,padding:20},cellHeight:10,className:classes.gridList,cols:3},symptomoccurs.map(function(value){var labelId=\"checkbox-list-label-\".concat(value.name);return/*#__PURE__*/React.createElement(ListItem,{key:value.name,role:undefined,dense:true,button:true,onClick:handleToggleSymptomoccurs(value)},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(Checkbox,{edge:\"start\",checked:values.symptomoccur.indexOf(value.value)!==-1,tabIndex:-1,disableRipple:true,inputProps:{'aria-labelledby':labelId}})),/*#__PURE__*/React.createElement(ListItemText,{id:labelId,primary:\"\".concat(value.name)}));})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"strong\",null,/*#__PURE__*/React.createElement(\"h5\",null,t('internalMedcine.symptomlike'),\"? \",/*#__PURE__*/React.createElement(\"br\",null),\"/\\u75C7\\u72B6\\u306F\\u3069\\u306E\\u3088\\u3046\\u306A\\u6027\\u8CEA\\u3092\\u6301\\u3063\\u3066\\u3044\\u307E\\u3059\\u304B\")))),/*#__PURE__*/React.createElement(GridList,{style:{height:90,padding:20},cellHeight:10,className:classes.gridList,cols:3},symptomlikes.map(function(value){var labelId=\"checkbox-list-label-\".concat(value.name);return/*#__PURE__*/React.createElement(ListItem,{key:value.name,role:undefined,dense:true,button:true,onClick:handleToggleSymptomlikes(value)},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(Checkbox,{edge:\"start\",checked:values.symptomlike.indexOf(value.value)!==-1,tabIndex:-1,disableRipple:true,inputProps:{'aria-labelledby':labelId}})),/*#__PURE__*/React.createElement(ListItemText,{id:labelId,primary:\"\".concat(value.name)}));})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"strong\",null,/*#__PURE__*/React.createElement(\"h5\",null,t('internalMedcine.scale1to10'),/*#__PURE__*/React.createElement(\"br\",null),\"/\\u305D\\u306E\\u75C7\\u72B6\\u306E\\u7A0B\\u5EA6\\u3092\\u6570\\u5B57\\u3067\\u8868\\u3059\\u3068\\u3001\\u3069\\u306E\\u3050\\u3089\\u3044\\u3067\\u3059\\u304B\\uFF1F\\u4E0B\\u306E\\u6570\\u5B57\\u304B\\u3089\\u9078\\u3073\\u306A\\u3055\\u3044\\u3002\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,xs:8,className:classes.formControl},/*#__PURE__*/React.createElement(InputLabel,{id:\"demo-simple-select-label\"},\"Select\"),/*#__PURE__*/React.createElement(Select,{labelId:\"demo-simple-select-label\",id:\"demo-simple-select\",value:values.scale1to10,onChange:updateFrequency},/*#__PURE__*/React.createElement(MenuItem,{value:1},\"1\"),/*#__PURE__*/React.createElement(MenuItem,{value:2},\"2\"),/*#__PURE__*/React.createElement(MenuItem,{value:3},\"3\"),/*#__PURE__*/React.createElement(MenuItem,{value:4},\"4\"),/*#__PURE__*/React.createElement(MenuItem,{value:5},\"5\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"strong\",null,/*#__PURE__*/React.createElement(\"h5\",null,t('internalMedcine.symptomstart'),\"?\",/*#__PURE__*/React.createElement(\"br\",null),\" /\\u3053\\u306E\\u75C7\\u72B6\\u306F\\u3044\\u3064\\u304B\\u3089\\u3042\\u308A\\u307E\\u3059\\u304B\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"space-around\"},/*#__PURE__*/React.createElement(KeyboardDatePicker,{xs:8,fullWidth:true,margin:\"normal\",id:\"date-picker-dialog\",label:t('internalMedcine.Dateofbirth'),format:\"MM/dd/yyyy\",value:values.symptomstart,onChange:updateDate,KeyboardButtonProps:{'aria-label':'change date'}}),/*#__PURE__*/React.createElement(KeyboardTimePicker,{xs:8,fullWidth:true,margin:\"normal\",id:\"time-picker\",label:\"Time picker\",value:values.symtomstarttime,onChange:updateTime,KeyboardButtonProps:{'aria-label':'change time'}})))))));};export default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/CardiologyForms/form3.js"],"names":["React","useState","useContext","makeStyles","Grid","Paper","useTranslation","ListItem","ListItemIcon","ListItemText","Checkbox","GridList","FormControl","MenuItem","InputLabel","Select","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","CardiologyContext","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","t","i18n","symptomoccurs","name","value","symptomlikes","values","setValues","classes","handleToggleSymptomlikes","object","currentIndex","symptomlike","indexOf","newChecked","push","splice","handleToggleSymptomoccurs","symptomoccur","updateFrequency","event","scale1to10","target","updateDate","date","symptomstart","updateTime","time","symtomstarttime","height","map","labelId","undefined","formControl"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { CardiologyContext } from '../context/cardiologyContext'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const symptomoccurs = [\n        { name: t('internalMedcine.Morning') + \"/ 朝\", value: \"Morning\" },\n        { name: t('internalMedcine.Daytime') + \"/ 昼\", value: \"Daytime\" },\n        { name: t('internalMedcine.Evening') + \"/ 夕方\", value: \"Evening\" },\n        { name: t('internalMedcine.Whileinbed') + \"/ 就寝中\", value: \"Whileinbed\" },\n        { name: t('internalMedcine.Whenwakingup') + \"/ 朝\", value: \"Whenwakingup\" },\n        { name: t('internalMedcine.Irregular') + \"/ 朝\", value: \"Irregular\" },\n        { name: t('internalMedcine.Other') + \"/ 朝\", value: \"Other\" },\n    ]\n\n    const symptomlikes = [\n        { name: t('internalMedcine.Constant') + \"/ 絶え間なく、続いている\", value: \"Constant\" },\n        { name: t('internalMedcine.symptomcomesgoes') + \"/ 症状が出たり消えたりしている\", value: \"symptomcomesgoes\" },\n        { name: t('internalMedcine.symptomgraduallyworsening') + \"/ 絶え間なく、続いている\", value: \"symptomgraduallyworsening\" },\n        { name: t('internalMedcine.Other') + \"/ その他\", value: \"Other\" },\n    ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n\n    const handleToggleSymptomlikes = (object) => () => {\n        const currentIndex = values.symptomlike.indexOf(object.value);\n        const newChecked = [...values.symptomlike];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomlike:newChecked})\n    };\n\n    const handleToggleSymptomoccurs = (object) => () => {\n        const currentIndex = values.symptomoccur.indexOf(object.value);\n        const newChecked = [...values.symptomoccur];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomoccur:newChecked})\n    };\n    const updateFrequency = (event) => {\n        setValues({...values, scale1to10:event.target.value});\n    };\n\n    const updateDate = (date) => {\n        setValues({...values, symptomstart:date})\n    }\n    const updateTime = (time) => {\n        setValues({...values, symtomstarttime:time})\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomoccur')}? <br />/症状はいつ頃起こりますか？</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomoccurs.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomoccurs(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomoccur.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomlike')}? <br />/症状はどのような性質を持っていますか</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 90, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomlikes.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomlikes(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomlike.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.scale1to10')}<br />/その症状の程度を数字で表すと、どのぐらいですか？下の数字から選びなさい。</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <FormControl fullWidth xs={8} className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Select</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={values.scale1to10}\n                                onChange={updateFrequency}\n                            >\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomstart')}?<br /> /この症状はいつからありますか</h5></strong></Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                            <Grid container justify=\"space-around\">\n\n                                <KeyboardDatePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"date-picker-dialog\"\n                                    label={t('internalMedcine.Dateofbirth')}\n                                    format=\"MM/dd/yyyy\"\n                                    value={values.symptomstart}\n                                    onChange={updateDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                                <KeyboardTimePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"time-picker\"\n                                    label=\"Time picker\"\n                                    value={values.symtomstarttime}\n                                    onChange={updateTime}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change time',\n                                    }} />\n                            </Grid>\n\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </div>\n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}