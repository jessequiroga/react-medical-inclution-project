{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form2.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CardiologyContext } from '../context/cardiologyContext';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridList: {\n    width: 1000,\n    textAlign: 'center',\n    margin: 10,\n    padding: 3\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  }\n}));\n\nconst CenteredGrid = () => {\n  const problem = [{\n    name: 'Irregular pulse /脈が乱れる',\n    value: 'Irregular pulse'\n  }, {\n    name: 'Chest pain /胸痛',\n    value: 'Chest pain'\n  }, {\n    name: 'Cold sweat /冷汗',\n    value: 'Cold sweat'\n  }, {\n    name: 'Heaviness in chest /胸が重たい',\n    value: 'Heaviness in chest'\n  }, {\n    name: 'Difficulty breathing /息苦しさ',\n    value: 'Difficulty breathing'\n  }, {\n    name: 'Shortness of breath /息切れ',\n    value: 'Shortness of breath'\n  }, {\n    name: 'Have a palpitation /動悸がする',\n    value: 'Have a palpitation'\n  }, {\n    name: 'Lightheadedness /立ちくらみ',\n    value: 'Lightheadedness'\n  }, {\n    name: 'Swelling (face, hands, feet) /むくみ（顔・手・足）',\n    value: 'Swelling (face, hands, feet)'\n  }, {\n    name: 'Cold hands and feet /手足が冷たい',\n    value: 'Cold hands and feet'\n  }, {\n    name: 'Other(s) /その他：',\n    value: 'Other(s)'\n  }, {\n    name: 'I was advised by another clinic/hospital (or at a regular check-up) to come here./他の医療機関から受診するように勧められた（健診含む）',\n    value: 'I was advised by another clinic/hospital (or at a regular check-up) to come here.'\n  }];\n  const [values, setValues] = useContext(CardiologyContext);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n\n  const handleToggleProblem = value => () => {\n    const currentIndex = values.problemtoday.indexOf(value.value);\n    const newChecked = [...values.problemtoday];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      problemtoday: newChecked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.problemtoday'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 105\n    }\n  }), \"/\\u4ECA\\u65E5\\u306F\\u3069\\u306E\\u3088\\u3046\\u306A\\u75C7\\u72B6\\u304C\\u3042\\u308A\\u307E\\u3059\\u304B\\u3002\\uFF08\\u8907\\u6570\\u3042\\u308B\\u65B9\\u306F\\u8907\\u6570\\u2611\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044.)\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    container: true,\n    style: {\n      height: 438,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, problem.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      style: {\n        marginTop: 61\n      },\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleProblem(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.problemtoday.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      style: {\n        display: \"table-caption\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }));\n  }))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form2.js"],"names":["React","useState","useContext","makeStyles","Paper","Grid","useTranslation","ListItem","ListItemIcon","ListItemText","GridList","Checkbox","CardiologyContext","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","problem","name","value","values","setValues","t","i18n","classes","handleToggleProblem","currentIndex","problemtoday","indexOf","newChecked","push","splice","height","map","labelId","undefined","display"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CardiologyContext } from '../context/cardiologyContext'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n       \n        textAlign: 'center',\n        margin:10,\n        padding:3\n      },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const problem = [\n        { name: 'Irregular pulse /脈が乱れる', value: 'Irregular pulse' },\n        { name: 'Chest pain /胸痛', value: 'Chest pain' },\n        { name: 'Cold sweat /冷汗', value: 'Cold sweat' },\n        { name: 'Heaviness in chest /胸が重たい', value: 'Heaviness in chest' },\n        { name: 'Difficulty breathing /息苦しさ', value: 'Difficulty breathing' },\n        { name: 'Shortness of breath /息切れ', value: 'Shortness of breath' },\n        { name: 'Have a palpitation /動悸がする', value: 'Have a palpitation' },\n        { name: 'Lightheadedness /立ちくらみ', value: 'Lightheadedness' },\n        { name: 'Swelling (face, hands, feet) /むくみ（顔・手・足）', value: 'Swelling (face, hands, feet)' },\n        { name: 'Cold hands and feet /手足が冷たい', value: 'Cold hands and feet' },\n        { name: 'Other(s) /その他：', value: 'Other(s)' },\n        { name: 'I was advised by another clinic/hospital (or at a regular check-up) to come here./他の医療機関から受診するように勧められた（健診含む）', value: 'I was advised by another clinic/hospital (or at a regular check-up) to come here.' },\n    ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const handleToggleProblem = (value) => () => {\n        const currentIndex = values.problemtoday.indexOf(value.value);\n        const newChecked = [...values.problemtoday];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({ ...values, problemtoday: newChecked })\n    };\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday')}<br/>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</h4></strong></Paper>\n                    </Grid>\n                    \n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                    <GridList container style={{height:438, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {problem.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem style={{marginTop:61}} key={value.name} role={undefined} dense button onClick={handleToggleProblem(value)}>\n                                    <ListItemIcon >\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.problemtoday.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} style={{display:\"table-caption\"}}/>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    \n                        </Grid>\n                    </Grid>\n\n            </div>\n        </div>\n    )\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}