{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/InternalMedcine.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from './nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './inteviewForms/form2';\nimport Form1 from './inteviewForms/form1';\nimport Form3 from './inteviewForms/form3';\nimport Form4 from './inteviewForms/form4';\nimport Form5 from './inteviewForms/form5';\nimport Form6 from './inteviewForms/form6';\nimport Form7 from './inteviewForms/form7';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { InternalMedContext, MedContext } from './internalMedContext';\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction getSteps() {\n  return ['', '', '', '', '', '', ''];\n}\n\nfunction GetStepContent({\n  activeStep,\n  name,\n  setValues\n}) {\n  //console.log(\"this is the name \"+ values.name);\n  switch (activeStep) {\n    case 0:\n      return /*#__PURE__*/React.createElement(Form2, {\n        name: name //onChange={(value) =>setValues(value)}\n        ,\n        setValues: setValues //setSelectedDate={setSelectedDate}\n        // selectedDate={selectedDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      });\n\n    case 1:\n      return /*#__PURE__*/React.createElement(Form1, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(Form3, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(Form4, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      });\n\n    case 4:\n      return /*#__PURE__*/React.createElement(Form5, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      });\n\n    case 5:\n      return /*#__PURE__*/React.createElement(Form6, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      });\n\n    case 6:\n      return /*#__PURE__*/React.createElement(Form7, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      });\n      ;\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper() {\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  const [values, setValues] = React.useState({});\n  const [datas, setDatas] = useContext(MedContext);\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const isStepOptional = step => {\n    return step === 10;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = e => {\n    e.preventDefault();\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleSubmit = () => {\n    //console.log(datas)\n    axios.post('http://localhost:5000/internaMedcine', datas).then(res => {\n      console.log(res.data); // window.location = '/homepage';\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 55\n        }\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }), label));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(GetStepContent, {\n    activeStep: activeStep,\n    name: values.name,\n    setValues: setValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, \"Back\"), isStepOptional(activeStep) && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 45\n    }\n  }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))))));\n}","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/InternalMedcine.js"],"names":["React","useState","useContext","makeStyles","Stepper","Step","StepLabel","Button","Typography","Nav","useTranslation","Form2","Form1","Form3","Form4","Form5","Form6","Form7","CssBaseline","Container","InternalMedContext","MedContext","axios","useStyles","theme","root","width","flexGrow","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","padding","textAlign","color","palette","text","secondary","getSteps","GetStepContent","activeStep","name","setValues","HorizontalLinearStepper","t","classes","setActiveStep","skipped","setSkipped","Set","steps","values","datas","setDatas","selectedDate","setSelectedDate","Date","isStepOptional","step","isStepSkipped","has","handleNext","e","preventDefault","newSkipped","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","handleSubmit","post","then","res","console","log","data","map","label","index","stepProps","labelProps","optional","completed","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Nav from './nav';\nimport { useTranslation } from 'react-i18next';\nimport Form2 from './inteviewForms/form2'\nimport Form1 from './inteviewForms/form1'\nimport Form3 from './inteviewForms/form3'\nimport Form4 from './inteviewForms/form4'\nimport Form5 from './inteviewForms/form5'\nimport Form6 from './inteviewForms/form6'\nimport Form7 from './inteviewForms/form7'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { InternalMedContext, MedContext } from './internalMedContext';\nimport axios from \"axios\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        flexGrow: 1,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction getSteps() {\n    return ['', '', '', '', '', '', ''];\n}\n\nfunction GetStepContent({ activeStep, name, setValues }) {\n    //console.log(\"this is the name \"+ values.name);\n\n    switch (activeStep) {\n        case 0:\n            return <Form2\n                name={name}\n                //onChange={(value) =>setValues(value)}\n                setValues={setValues}\n            //setSelectedDate={setSelectedDate}\n            // selectedDate={selectedDate}\n            />;\n        case 1:\n            return <Form1 />;\n        case 2:\n            return <Form3 />;\n        case 3:\n            return <Form4 />;\n        case 4:\n            return <Form5 />;\n        case 5:\n            return <Form6 />;\n        case 6:\n            return <Form7 />;;\n        default:\n            return 'Unknown step';\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n    const [values, setValues] = React.useState({});\n    const [datas, setDatas] = useContext(MedContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n\n    const isStepOptional = (step) => {\n        return step === 10;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = (e) => {\n        e.preventDefault();\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const handleSubmit = () =>{\n        //console.log(datas)\n    \n       axios.post('http://localhost:5000/internaMedcine', datas)\n       .then(res => {\n         console.log(res.data)\n        // window.location = '/homepage';\n        });\n       \n      }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container >\n                <div className={classes.root}>\n                    <Nav />\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n                            if (isStepOptional(index)) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n                            if (isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n                            return (\n                                <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography className={classes.instructions}>\n                                    All steps completed - you&apos;re finished\n            </Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                    Reset\n            </Button>\n                            </div>\n                        ) : (\n                                <div>\n                                    <div className={classes.instructions}>\n\n                                        { /*{getStepContent(activeStep, values, classes, t, setValues, setSelectedDate, selectedDate)}*/}\n                                       \n                                            <GetStepContent activeStep={activeStep} name={values.name} setValues={setValues} />\n                                       \n                                    </div>\n                                    <div>\n                                        <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                                            Back\n              </Button>\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={activeStep === steps.length - 1 ?  handleSubmit : handleNext}\n                                            className={classes.button}\n                                        >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}