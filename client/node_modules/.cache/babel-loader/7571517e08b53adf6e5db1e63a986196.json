{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/react-medical-inclution-project/client/src/components/internalMedContext.js\";\nimport React, { useState, createContext } from 'react';\nexport const MedContext = createContext();\nexport const InternalMedContext = props => {\n  const [values, setValues] = useState({\n    name: '',\n    DateOfBirth: new Date(),\n    height: '',\n    weight: '',\n    sex: '',\n    allergis: {\n      foods: [],\n      medcine: []\n    },\n    problemtoday: [],\n    stools: [],\n    stoolfrequency: '',\n    symptomoccur: [],\n    symptomlike: [],\n    scale1to10: '',\n    symptomstart: new Date(),\n    symtomstarttime: new Date(),\n    onMedication: '',\n    onmedications: [],\n    doctorcare: '',\n    doctorCare: [],\n    hadsurgerys: [],\n    hadsurgery: '',\n    smokeregularly: '',\n    smokeday: {\n      amount: '',\n      duration: '',\n      yearStop: ''\n    },\n    drinkregularly: '',\n    drinkeday: {\n      beer: false,\n      nobeer: '',\n      japsake: false,\n      nojapsake: '',\n      wisky: false,\n      nowisky: '',\n      wine: false,\n      nowine: '',\n      other: false,\n      noOther: ''\n    },\n    pregnant: '',\n    breastfeeding: false,\n    medicalexpenses: false,\n    haveinterpreter: false,\n    otherssss: false,\n    bodyPart: []\n  });\n  return /*#__PURE__*/React.createElement(MedContext.Provider, {\n    value: [values, setValues],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/etl/Documents/react-medical-inclution-project/client/src/components/internalMedContext.js"],"names":["React","useState","createContext","MedContext","InternalMedContext","props","values","setValues","name","DateOfBirth","Date","height","weight","sex","allergis","foods","medcine","problemtoday","stools","stoolfrequency","symptomoccur","symptomlike","scale1to10","symptomstart","symtomstarttime","onMedication","onmedications","doctorcare","doctorCare","hadsurgerys","hadsurgery","smokeregularly","smokeday","amount","duration","yearStop","drinkregularly","drinkeday","beer","nobeer","japsake","nojapsake","wisky","nowisky","wine","nowine","other","noOther","pregnant","breastfeeding","medicalexpenses","haveinterpreter","otherssss","bodyPart","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AAEA,OAAO,MAAMC,UAAU,GAAGD,aAAa,EAAhC;AAEP,OAAO,MAAME,kBAAkB,GAAGC,KAAK,IAAI;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,IAAI,EAAG,EAD0B;AAEjCC,IAAAA,WAAW,EAAG,IAAIC,IAAJ,EAFmB;AAGjCC,IAAAA,MAAM,EAAG,EAHwB;AAIjCC,IAAAA,MAAM,EAAG,EAJwB;AAKjCC,IAAAA,GAAG,EAAG,EAL2B;AAMjCC,IAAAA,QAAQ,EAAG;AACPC,MAAAA,KAAK,EAAG,EADD;AAEPC,MAAAA,OAAO,EAAG;AAFH,KANsB;AAWjCC,IAAAA,YAAY,EAAG,EAXkB;AAYjCC,IAAAA,MAAM,EAAG,EAZwB;AAajCC,IAAAA,cAAc,EAAG,EAbgB;AAejCC,IAAAA,YAAY,EAAG,EAfkB;AAgBjCC,IAAAA,WAAW,EAAG,EAhBmB;AAiBjCC,IAAAA,UAAU,EAAG,EAjBoB;AAkBjCC,IAAAA,YAAY,EAAG,IAAIb,IAAJ,EAlBkB;AAmBjCc,IAAAA,eAAe,EAAG,IAAId,IAAJ,EAnBe;AAqBjCe,IAAAA,YAAY,EAAG,EArBkB;AAsBjCC,IAAAA,aAAa,EAAE,EAtBkB;AAwBjCC,IAAAA,UAAU,EAAE,EAxBqB;AAyBjCC,IAAAA,UAAU,EAAG,EAzBoB;AA2BjCC,IAAAA,WAAW,EAAE,EA3BoB;AA4BjCC,IAAAA,UAAU,EAAE,EA5BqB;AA+BjCC,IAAAA,cAAc,EAAG,EA/BgB;AAgCjCC,IAAAA,QAAQ,EAAG;AACPC,MAAAA,MAAM,EAAG,EADF;AAEPC,MAAAA,QAAQ,EAAG,EAFJ;AAGPC,MAAAA,QAAQ,EAAG;AAHJ,KAhCsB;AAqCjCC,IAAAA,cAAc,EAAE,EArCiB;AAsCjCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAG,KADA;AAEPC,MAAAA,MAAM,EAAG,EAFF;AAGPC,MAAAA,OAAO,EAAG,KAHH;AAIPC,MAAAA,SAAS,EAAG,EAJL;AAKPC,MAAAA,KAAK,EAAG,KALD;AAMPC,MAAAA,OAAO,EAAG,EANH;AAOPC,MAAAA,IAAI,EAAG,KAPA;AAQPC,MAAAA,MAAM,EAAG,EARF;AASPC,MAAAA,KAAK,EAAG,KATD;AAUPC,MAAAA,OAAO,EAAG;AAVH,KAtCsB;AAkDjCC,IAAAA,QAAQ,EAAG,EAlDsB;AAmDjCC,IAAAA,aAAa,EAAG,KAnDiB;AAoDjCC,IAAAA,eAAe,EAAG,KApDe;AAqDjCC,IAAAA,eAAe,EAAG,KArDe;AAsDjCC,IAAAA,SAAS,EAAG,KAtDqB;AAwDjCC,IAAAA,QAAQ,EAAG;AAxDsB,GAAD,CAApC;AA4DA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAAC/C,MAAD,EAASC,SAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACiD,QADX,CADJ;AAKH,CAlEM","sourcesContent":["import React, {useState, createContext} from 'react';\n\nexport const MedContext = createContext();\n\nexport const InternalMedContext = props => {\n    const [values, setValues] = useState({\n        name : '',\n        DateOfBirth : new Date,\n        height : '',\n        weight : '',\n        sex : '',\n        allergis : {\n            foods : [],\n            medcine : [],\n        },\n \n        problemtoday : [],\n        stools : [],\n        stoolfrequency : '',\n       \n        symptomoccur : [],\n        symptomlike : [],\n        scale1to10 : '',\n        symptomstart : new Date,\n        symtomstarttime : new Date,\n        \n        onMedication : '',\n        onmedications: [],\n        \n        doctorcare: '',\n        doctorCare : [],\n\n        hadsurgerys: [],\n        hadsurgery: '',\n        \n        \n        smokeregularly : '',\n        smokeday : {\n            amount : '',\n            duration : '',\n            yearStop : '',\n        },\n        drinkregularly: '',\n        drinkeday: {\n            beer : false,\n            nobeer : '',\n            japsake : false,\n            nojapsake : '',\n            wisky : false,\n            nowisky : '',\n            wine : false,\n            nowine : '',\n            other : false,\n            noOther : '',\n        },\n        pregnant : '',\n        breastfeeding : false,\n        medicalexpenses : false,\n        haveinterpreter : false,\n        otherssss : false,\n\n        bodyPart : []\n    });\n   \n\n    return(\n        <MedContext.Provider value={[values, setValues]}>\n            {props.children}\n        </MedContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}