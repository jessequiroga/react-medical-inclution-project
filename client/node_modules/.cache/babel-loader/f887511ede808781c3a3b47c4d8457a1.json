{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/viewInternalMed.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { useTranslation } from 'react-i18next';\nimport { MedContext } from '../internalMedContext';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black',\n    marginBottom: 10,\n    marginTop: 10,\n    fontSize: 20\n  },\n  h4: {\n    fontSize: 20,\n    textAlign: \"center\"\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst CenteredGrid = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n  const [values, setValues] = useContext(MedContext);\n  const rows = [createData('Name', values.name), createData('Date Of Birth', values.DateOfBirth.toLocaleDateString()), createData('Height', values.height), createData('Weight', values.weight), createData('Sex', values.sex)];\n  const rows0 = [createData('Problem today', values.problemtoday)];\n  const rows1 = [createData('Food allergis', values.allergis.foods), createData('Medcine allergis', values.allergis.medcine)];\n  const rows2 = [createData('stools', values.stools), createData('stoolfrequency', values.stoolfrequency)];\n  const rows33 = [createData('Place where you experience symptom', values.symptomoccur), createData('When does the symptoms occur', values.bodyPart), createData('What is the symptoms like', values.symptomlike)];\n  const rows3 = [createData('Symptoms on a scale of 1 to 10', values.scale1to10), createData('Symptoms start time', values.symptomstart.toLocaleDateString()), createData('Symptoms start date', values.symtomstarttime.toLocaleDateString())];\n  const rows4 = [createData('On medication', values.onMedication), createData('Condition', values.onmedications)];\n  const rows5 = [createData('Doctor care', values.doctorcare), createData('Condition', values.doctorCare)];\n  const rows6 = [createData('Had surgery', values.hadsurgerys), createData('Condition', values.hadsurgery)];\n  const rows7 = [createData('Do yo regularly or used to smoke', values.smokeregularly), createData('Amount you smoke', values.smokeday.amount), createData('Duration you smoke', values.smokeday.duration), createData('The year you stop smoking', values.smokeday.yearStop)];\n  const rows8 = [createData('Beer', values.drinkeday.beer, values.drinkeday.nobeer), createData('Japanese sake', values.drinkeday.japsake, values.drinkeday.japsake), createData('Wisky', values.drinkeday.wisky, values.drinkeday.nowisky), createData('Wine', values.drinkeday.wine, values.drinkeday.nowine), createData('Other', values.drinkeday.other, values.drinkeday.noOther)];\n  const rows9 = [createData('Pregnant', values.pregnant), createData('Breastfeeding', values.breastfeeding), createData('Medicalexpenses', values.medicalexpenses), createData('Have interpreter', values.haveinterpreter), createData('Others', values.otherssss)];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.PersonnalInformation')))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.problemtoday1'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 106\n    }\n  }), \"/\\u4ECA\\u65E5\\u306F\\u3069\\u306E\\u3088\\u3046\\u306A\\u75C7\\u72B6\\u304C\\u3042\\u308A\\u307E\\u3059\\u304B\\u3002\\uFF08\\u8907\\u6570\\u3042\\u308B\\u65B9\\u306F\\u8907\\u6570\\u2611\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044.)\")))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, rows0.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }, row.name)), row.calories.map((item, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, item))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.Allergie'), \" /\\u30A2\\u30EC\\u30EB\\u30AE\\u30FC\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, rows1.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, row.name)), row.calories.map((item, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, item))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 52\n    }\n  }, \"All that apply to your stool\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, rows2.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, row.name)), row.calories.map((item, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, item))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 52\n    }\n  }, \"Symptoms\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, rows33.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, rows3.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 37\n    }\n  }, row.name)), row.calories.map((item, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }, item))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.currentlyonmedication'), \" \"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, rows4.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.underdoctorcare'), \"?\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, rows5.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.hadsurgery')))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, rows6.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.smokeregularly'), \"?\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, rows7.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 37\n    }\n  }, row.calories)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 52\n    }\n  }, t('internalMedcine.drinkregularly'), \"?\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, \"yes/no\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, \"Quantity\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, rows8.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 37\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 37\n    }\n  }, row.fat)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.Iffemale'), \"? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 99\n    }\n  }), \"/\\u5973\\u6027\\u306E\\u65B9\\u306E\\u307F\\u304A\\u7B54\\u3048\\u304F\\u3060\\u3055\\u3044\\u3002\\u598A\\u5A20\\u3057\\u3066\\u3044\\u307E\\u3059\\u304B\\u3001\\u307E\\u305F\\u305D\\u306E\\u53EF\\u80FD\\u6027\\u306F\\u3042\\u308A\\u307E\\u3059\\u304B\\u3002\")))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, rows9.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 37\n    }\n  }, row.name)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 37\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 37\n    }\n  }, row.fat))))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/viewInternalMed.js"],"names":["React","useEffect","useState","useContext","makeStyles","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","useTranslation","MedContext","useStyles","theme","table","minWidth","paper","padding","spacing","textAlign","color","marginBottom","marginTop","fontSize","h4","createData","name","calories","fat","carbs","protein","CenteredGrid","t","i18n","classes","values","setValues","rows","DateOfBirth","toLocaleDateString","height","weight","sex","rows0","problemtoday","rows1","allergis","foods","medcine","rows2","stools","stoolfrequency","rows33","symptomoccur","bodyPart","symptomlike","rows3","scale1to10","symptomstart","symtomstarttime","rows4","onMedication","onmedications","rows5","doctorcare","doctorCare","rows6","hadsurgerys","hadsurgery","rows7","smokeregularly","smokeday","amount","duration","yearStop","rows8","drinkeday","beer","nobeer","japsake","wisky","nowisky","wine","nowine","other","noOther","rows9","pregnant","breastfeeding","medicalexpenses","haveinterpreter","otherssss","map","row","item","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { useTranslation } from 'react-i18next';\nimport { MedContext } from '../internalMedContext';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n\n    },\n    h4: {\n        fontSize: 20,\n        textAlign: \"center\"\n    }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\n\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const [values, setValues] = useContext(MedContext);\n\n    const rows = [\n        createData('Name', values.name),\n        createData('Date Of Birth', values.DateOfBirth.toLocaleDateString()),\n        createData('Height', values.height),\n        createData('Weight', values.weight),\n        createData('Sex', values.sex),\n    ];\n\n    const rows0 = [\n        createData('Problem today', values.problemtoday),\n    ];\n\n    const rows1 = [\n        createData('Food allergis', values.allergis.foods),\n        createData('Medcine allergis', values.allergis.medcine),\n    ];\n\n    const rows2 = [\n        createData('stools', values.stools),\n        createData('stoolfrequency', values.stoolfrequency),\n    ]\n\n    const rows33 = [\n        createData('Place where you experience symptom', values.symptomoccur),\n        createData('When does the symptoms occur', values.bodyPart),\n        createData('What is the symptoms like', values.symptomlike),\n    ]\n\n    const rows3 = [\n        createData('Symptoms on a scale of 1 to 10', values.scale1to10),\n        createData('Symptoms start time', values.symptomstart.toLocaleDateString()),\n        createData('Symptoms start date', values.symtomstarttime.toLocaleDateString()),\n\n    ]\n\n    const rows4 = [\n        createData('On medication', values.onMedication),\n        createData('Condition', values.onmedications),\n    ]\n\n    const rows5 = [\n        createData('Doctor care', values.doctorcare),\n        createData('Condition', values.doctorCare),\n    ]\n\n    const rows6 = [\n        createData('Had surgery', values.hadsurgerys),\n        createData('Condition', values.hadsurgery),\n    ]\n\n    const rows7 = [\n        createData('Do yo regularly or used to smoke', values.smokeregularly),\n        createData('Amount you smoke', values.smokeday.amount),\n        createData('Duration you smoke', values.smokeday.duration),\n        createData('The year you stop smoking', values.smokeday.yearStop),\n    ]\n\n    const rows8 = [\n        createData('Beer', values.drinkeday.beer, values.drinkeday.nobeer,),\n        createData('Japanese sake', values.drinkeday.japsake, values.drinkeday.japsake,),\n        createData('Wisky', values.drinkeday.wisky, values.drinkeday.nowisky,),\n        createData('Wine', values.drinkeday.wine, values.drinkeday.nowine,),\n        createData('Other', values.drinkeday.other, values.drinkeday.noOther,),\n    ]\n\n    const rows9 = [\n        createData('Pregnant', values.pregnant),\n        createData('Breastfeeding', values.breastfeeding),\n        createData('Medicalexpenses', values.medicalexpenses),\n        createData('Have interpreter', values.haveinterpreter),\n        createData('Others', values.otherssss),\n    ]\n\n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"md\">\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.PersonnalInformation')}</h4></strong>\n                </Grid>\n\n                <TableContainer component={Paper} >\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday1')}<br/>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</h4></strong></Paper>\n                </Grid>\n\n                <TableContainer component={Paper} >\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows0.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    {\n                                        row.calories.map((item, i) =>(\n                                    <TableCell key={i}>\n                                        {item}\n                                        </TableCell>\n                                        ))}\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.Allergie')} /アレルギー</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows1.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    {\n                                        row.calories.map((item, i) =>(\n                                    <TableCell key={i}>\n                                        {item}\n                                        </TableCell>\n                                        ))}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                \n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>All that apply to your stool</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows2.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    {\n                                        row.calories.map((item, i) =>(\n                                    <TableCell key={i}>\n                                        {item}\n                                        </TableCell>\n                                        ))}\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>Symptoms</h4></strong>\n                </Grid>\n                <TableContainer component={Paper} >\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows33.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows3.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    {\n                                        row.calories.map((item, i) =>(\n                                    <TableCell key={i}>\n                                        {item}\n                                        </TableCell>\n                                        ))}\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.currentlyonmedication')} </h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows4.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.underdoctorcare')}?</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows5.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.hadsurgery')}</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows6.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.smokeregularly')}?</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n\n                        <TableBody>\n                            {rows7.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <strong className={classes.h4}><h4 className={classes.paper}>{t('internalMedcine.drinkregularly')}?</h4></strong>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                            <TableCell>Name</TableCell>\n                                <TableCell>yes/no</TableCell>\n                                <TableCell align=\"left\">Quantity</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows8.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n                                    <TableCell align=\"left\">{row.fat}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.Iffemale')}? <br />/女性の方のみお答えください。妊娠していますか、またその可能性はありますか。</h5></strong></Paper>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                               \n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows9.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                    <strong>{row.name}</strong>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.calories}</TableCell>\n                                    <TableCell align=\"left\">{row.fat}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </div>\n    )\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}