{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/auth/register.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Errormsg from './errormsg';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport Axios from 'axios';\nimport UserContext from '../context/UserContext';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: \"14px\",\n    color: \"black\",\n    fontSize: \"16px\",\n    backgroundColor: \"#57EBEB\",\n    minHeight: \"75px\",\n    minWidth: \"200px !important\",\n    borderRadius: \"46px\"\n  },\n  labelAligne: {\n    textAlign: \"left\",\n    marginLeft: 16\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#eb57577a'\n  },\n  content: {\n    paddingBottom: \"600px\",\n    paddingTop: \"39px\"\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Register = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n  const [error, setError] = useState(\"\");\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const newUser = {\n        email,\n        password,\n        passwordCheck,\n        displayName\n      };\n      const registerRes = await Axios.post(\"http://localhost:5000/user/register\", newUser);\n      const loginRes = await Axios.post(\"http://localhost:5000/user/login\", {\n        email,\n        password\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/homepage\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 30,\n      paddingLeft: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.labelAligne,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, t('registration.userRegistration'))), error && /*#__PURE__*/React.createElement(Errormsg, {\n    message: error,\n    clearError: () => setError(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"register-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, t('registration.email')), /*#__PURE__*/React.createElement(Input, {\n    id: \"register-email\",\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"register-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, t('registration.password')), /*#__PURE__*/React.createElement(Input, {\n    id: \"register-password\",\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"register-passwordCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, t('registration.verifypassword')), /*#__PURE__*/React.createElement(Input, {\n    labelAligne: t('registration.verifypassword'),\n    id: \"register-passwordCheck\",\n    type: \"password\",\n    onChange: e => setPasswordCheck(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"register-displayName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, t('registration.email')), /*#__PURE__*/React.createElement(Input, {\n    id: \"register-displayName\",\n    type: \"text\",\n    onChange: e => setDisplayName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login1\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Have an account? Sign In\")))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/auth/register.js"],"names":["React","useState","useContext","makeStyles","Nav","InputLabel","Container","CssBaseline","Footer","Errormsg","FormControl","Input","useTranslation","Link","useHistory","Grid","Axios","UserContext","Button","useStyles","theme","button","margin","color","fontSize","backgroundColor","minHeight","minWidth","borderRadius","labelAligne","textAlign","marginLeft","paper","padding","spacing","content","paddingBottom","paddingTop","submit","Register","t","i18n","classes","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","displayName","setDisplayName","error","setError","setUserData","history","e","preventDefault","newUser","registerRes","post","loginRes","token","data","user","localStorage","setItem","push","err","response","msg","paddingRight","paddingLeft","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from \"../nav.js\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Footer from \"../footer\";\nimport '../../App.css';\nimport Errormsg from './errormsg';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom'\nimport { Grid } from '@material-ui/core';\nimport Axios from 'axios';\nimport UserContext from '../context/UserContext';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: \"14px\",\n        color: \"black\",\n        fontSize: \"16px\",\n        backgroundColor: \"#57EBEB\",\n        minHeight: \"75px\",\n        minWidth: \"200px !important\",\n        borderRadius: \"46px\"\n    },\n    labelAligne: {\n        textAlign: \"left\",\n        marginLeft: 16\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#eb57577a',\n    },\n    content: {\n        paddingBottom: \"600px\",\n        paddingTop: \"39px\",\n\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Register = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState(\"\");\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            const registerRes = await Axios.post(\n                \"http://localhost:5000/user/register\",\n                newUser\n            );\n            const loginRes = await Axios.post(\"http://localhost:5000/user/login\", {\n                email,\n                password,\n            });\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user,\n            });\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\n            history.push(\"/homepage\")\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n    }\n    return (\n        <div style={{ paddingRight: 30, paddingLeft: 30 }}>\n            <Nav />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <br />\n                <Grid className={classes.labelAligne} item xs={12}>\n                    <strong><h3 style={{ textAlign: \"center\" }}>{t('registration.userRegistration')}</h3></strong>\n                    {error && (\n                        <Errormsg message={error} clearError={() => setError(undefined)} />\n                    )}\n                    <form onSubmit={submit}>\n                        <FormControl fullWidth className=''>\n                            <InputLabel htmlFor=\"register-email\">{t('registration.email')}</InputLabel>\n                            <Input\n                                id=\"register-email\"\n                                type=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </FormControl>\n\n                        <FormControl fullWidth className=''>\n                            <InputLabel htmlFor=\"register-password\">{t('registration.password')}</InputLabel>\n                            <Input\n                                id=\"register-password\"\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </FormControl>\n\n                        <FormControl fullWidth className=''>\n                            <InputLabel htmlFor=\"register-passwordCheck\">{t('registration.verifypassword')}</InputLabel>\n                            <Input\n                                labelAligne={t('registration.verifypassword')}\n                                id=\"register-passwordCheck\"\n                                type=\"password\"\n                                onChange={(e) => setPasswordCheck(e.target.value)}\n                            />\n                        </FormControl>\n\n                        <FormControl fullWidth className=''>\n                            <InputLabel htmlFor=\"register-displayName\">{t('registration.email')}</InputLabel>\n                            <Input\n                                id=\"register-displayName\"\n                                type=\"text\"\n                                onChange={(e) => setDisplayName(e.target.value)}\n                            />\n                        </FormControl>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            Register\n       </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link to=\"/login1\" variant=\"body2\">\n                                    {\"Have an account? Sign In\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Grid>\n            </Container>\n            <Footer />\n        </div>\n    )\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}