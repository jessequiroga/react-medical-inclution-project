{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/react-medical-inclution-project/client/src/components/inteviewForms/form3.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport HumanImage from '../img/human-image1.png';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridList: {\n    width: 1000,\n    textAlign: 'center',\n    margin: 10,\n    padding: 5\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  }\n}));\n\nconst CenteredGrid = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const bodyParts = [{\n    name: \"1- Head /頭\",\n    value: \"head\"\n  }, {\n    name: \"2- Eye(right) /目(右)\",\n    value: \"eyeR\"\n  }, {\n    name: \"3- Eye(left) /目(左)\",\n    value: \"eyeL1\"\n  }, {\n    name: \"4- Ear(right) /耳(右)\",\n    value: \"earR\"\n  }, {\n    name: \"5- Ear(left) /耳(左)\",\n    value: \"earL\"\n  }, {\n    name: \"6- Nose /鼻\",\n    value: \"nose\"\n  }, {\n    name: \"7- Mouth /口\",\n    value: \"mouth\"\n  }, {\n    name: \"8- Throat /のど\",\n    value: \"throat\"\n  }, {\n    name: \"9- Neck /首\",\n    value: \"eaneckrL\"\n  }, {\n    name: \"10- Sholder /肩\",\n    value: \"sholder\"\n  }, {\n    name: \"11- Back /背\",\n    value: \"back\"\n  }, {\n    name: \"12- Chest /胸\",\n    value: \"chest\"\n  }, {\n    name: \"13- Abdoment /腹\",\n    value: \"abdoment\"\n  }, {\n    name: \"14- Groin /陰部･性器\",\n    value: \"groin\"\n  }, {\n    name: \"15- Arm(right) /腕(右)\",\n    value: \"armR\"\n  }, {\n    name: \"16- Arm(left) /腕(左)\",\n    value: \"armL\"\n  }, {\n    name: \"17- Hand(right) /手(右)\",\n    value: \"handR\"\n  }, {\n    name: \"18- Hand(left) /手(左)\",\n    value: \"handL\"\n  }, {\n    name: \"19- Waist /腰\",\n    value: \"waist\"\n  }, {\n    name: \"20- Buttocks /尻\",\n    value: \"buttocks\"\n  }, {\n    name: \"21- Leg(right) /脚(右)\",\n    value: \"legR\"\n  }, {\n    name: \"22- Leg(left) /脚(左)\",\n    value: \"legL\"\n  }, {\n    name: \"23- Foot(right) /足(右)\",\n    value: \"footR\"\n  }, {\n    name: \"24- Foot(left) /足(左)\",\n    value: \"footL\"\n  }, {\n    name: \"25- knee(right) /膝(右)\",\n    value: \"kneeR\"\n  }, {\n    name: \"26- knee(left) /膝(左)\",\n    value: \"kneeL\"\n  }];\n  const [values, setValues] = useContext(MedContext);\n  const [checkedBodyParts, setCheckedBodyParts] = React.useState([]);\n  const classes = useStyles();\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) history.push(\"/login1\");\n  });\n  const authAxios = Axios.create({\n    baseURL: \"http://localhost:5000\",\n    headers: {\n      'x-auth-token': userData.token\n    }\n  });\n\n  const logFunction = async question => {\n    const loginfo = {\n      inteviewName: \"Internal Medcine form 3\",\n      //userName: userData.user.userName,\n      language: i18n.language,\n      contentSentence: question,\n      date: new Date(),\n      userId: userData.user.id\n    };\n    const loginInput = await authAxios.post(\"/logfile/insert\", loginfo);\n  };\n\n  const handleToggleBodyParts = object => () => {\n    const currentIndex = values.bodyPart.indexOf(object.value);\n    const newChecked = [...values.bodyPart];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedBodyParts(newChecked);\n    setValues({ ...values,\n      bodyPart: newChecked\n    });\n    logFunction(\"Select the place where you feel the symptoms\");\n  }; //console.log(checkedBodyParts)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      height: 700,\n      marginTop: -30,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: HumanImage,\n    width: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 62\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 70\n    }\n  }, t('internalMedcine.selectPlaceSymptom'))))), /*#__PURE__*/React.createElement(GridList, {\n    container: true,\n    style: {\n      height: 362,\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 16,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, bodyParts.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleBodyParts(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.bodyPart.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }));\n  })))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/react-medical-inclution-project/client/src/components/inteviewForms/form3.js"],"names":["React","useEffect","useState","useContext","useHistory","makeStyles","Grid","Paper","useTranslation","HumanImage","ListItem","ListItemIcon","ListItemText","Checkbox","GridList","MedContext","UserContext","Axios","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","t","i18n","bodyParts","name","value","values","setValues","checkedBodyParts","setCheckedBodyParts","classes","userData","history","user","push","authAxios","create","baseURL","headers","token","logFunction","question","loginfo","inteviewName","language","contentSentence","date","Date","userId","id","loginInput","post","handleToggleBodyParts","object","currentIndex","bodyPart","indexOf","newChecked","splice","height","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport HumanImage from '../img/human-image1.png';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const bodyParts = [\n        { name: \"1- Head /頭\", value: \"head\" },\n        { name: \"2- Eye(right) /目(右)\", value: \"eyeR\" },\n        { name: \"3- Eye(left) /目(左)\", value: \"eyeL1\" },\n        { name: \"4- Ear(right) /耳(右)\", value: \"earR\" },\n        { name: \"5- Ear(left) /耳(左)\", value: \"earL\" },\n        { name: \"6- Nose /鼻\", value: \"nose\" },\n        { name: \"7- Mouth /口\", value: \"mouth\" },\n        { name: \"8- Throat /のど\", value: \"throat\" },\n        { name: \"9- Neck /首\", value: \"eaneckrL\" },\n        { name: \"10- Sholder /肩\", value: \"sholder\" },\n        { name: \"11- Back /背\", value: \"back\" },\n        { name: \"12- Chest /胸\", value: \"chest\" },\n        { name: \"13- Abdoment /腹\", value: \"abdoment\" },\n        { name: \"14- Groin /陰部･性器\", value: \"groin\" },\n        { name: \"15- Arm(right) /腕(右)\", value: \"armR\" },\n        { name: \"16- Arm(left) /腕(左)\", value: \"armL\" },\n        { name: \"17- Hand(right) /手(右)\", value: \"handR\" },\n        { name: \"18- Hand(left) /手(左)\", value: \"handL\" },\n        { name: \"19- Waist /腰\", value: \"waist\" },\n        { name: \"20- Buttocks /尻\", value: \"buttocks\" },\n        { name: \"21- Leg(right) /脚(右)\", value: \"legR\" },\n        { name: \"22- Leg(left) /脚(左)\", value: \"legL\" },\n        { name: \"23- Foot(right) /足(右)\", value: \"footR\" },\n        { name: \"24- Foot(left) /足(左)\", value: \"footL\" },\n        { name: \"25- knee(right) /膝(右)\", value: \"kneeR\" },\n        { name: \"26- knee(left) /膝(左)\", value: \"kneeL\" }\n    ];\n    const [values, setValues] = useContext(MedContext);\n\n    const [checkedBodyParts, setCheckedBodyParts] = React.useState([]);\n    const classes = useStyles();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n      const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 3\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleBodyParts = (object) => () => {\n        const currentIndex = values.bodyPart.indexOf(object.value);\n        const newChecked = [...values.bodyPart];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedBodyParts(newChecked);\n        setValues({...values, bodyPart:newChecked});\n        logFunction(\"Select the place where you feel the symptoms\");\n    };\n\n    //console.log(checkedBodyParts)\n    return (\n        \n            <div>\n                <div className={classes.root}>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <Grid style={{height:700, marginTop:-30, backgroundColor: 'white'}}>\n                            <img src={HumanImage} width=\"80%\" />\n\n                        </Grid>\n                        <Grid item xs={12} style={{ backgroundColor: 'white'}}>\n                            <Paper className={classes.paper}><strong><h5>{t('internalMedcine.selectPlaceSymptom')}</h5></strong></Paper>\n                        </Grid>\n\n                        <GridList container style={{ height: 362, paddingLeft: 20,paddingRight: 20, paddingTop: 16, paddingBottom: 15, backgroundColor: 'white' }} cellHeight={10} className={classes.gridList} cols={3}>\n                            {bodyParts.map((value) => {\n                                const labelId = `checkbox-list-label-${value.name}`;\n\n                                return (\n                                    <ListItem key={value.name} role={undefined} dense button onClick={handleToggleBodyParts(value)}>\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={values.bodyPart.indexOf(value.value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                    </ListItem>\n                                );\n                            })}\n                        </GridList>\n\n                    </Grid>\n\n                </div>\n            </div>\n        \n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}