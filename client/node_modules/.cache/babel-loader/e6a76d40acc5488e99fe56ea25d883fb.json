{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/form2.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { MedContext } from '../internalMedContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  },\n  gridList: {\n    width: 500,\n    height: 300,\n    textAlign: 'center',\n    margin: 10,\n    padding: 13\n  },\n  ListItemIcon: {\n    minWidth: 32\n  }\n}));\n\nconst CenteredGrid = () => {\n  const blue = text => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, text);\n  };\n\n  const foodAlergie = [{\n    name: 'Fish Roe',\n    text: '/魚卵',\n    value: 'Fish Roe'\n  }, {\n    name: 'Shellfish',\n    text: '/貝類',\n    value: 'Shellfish'\n  }, {\n    name: 'Milk ',\n    text: '/甲殻類（エビ、カニ等)',\n    value: 'Milk'\n  }, {\n    name: 'Cheese ',\n    text: '/卵',\n    value: 'Cheese'\n  }, {\n    name: 'Buckwheat ',\n    text: '/魚卵',\n    value: 'Buckwheat'\n  }, {\n    name: 'Peanuts ',\n    text: '/貝類',\n    value: 'Peanuts'\n  }, {\n    name: 'Almonds ',\n    text: '/卵',\n    value: 'Almonds'\n  }, {\n    name: 'Wheat ',\n    text: '/小麦',\n    value: 'wheat'\n  }, {\n    name: 'Soy ',\n    text: '/大豆',\n    value: 'Soy'\n  }, {\n    name: 'Kiwifruit ',\n    text: '/キウイ',\n    value: 'Kiwifruit'\n  }, {\n    name: 'Peaches ',\n    text: '/桃',\n    value: 'Peaches'\n  }, {\n    name: 'Yams ',\n    text: '/山芋',\n    value: 'Yams'\n  }, {\n    name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\",\n    text: '/青魚',\n    value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\"\n  }, {\n    name: \"Shrimp/Prawns/ Crabs/Lobsters\",\n    text: '/甲殻類（エビ、カニ等)/発熱',\n    value: \"Shrimp/Prawns/Crabs/Lobsters\"\n  }];\n  const medecinesAlergie = [{\n    name: \"Alcohol \",\n    text: '/アルコール',\n    value: \"Alcohol\"\n  }, {\n    name: \"Fever reducer \",\n    text: '/解熱剤',\n    value: \"Fever reducer\"\n  }, {\n    name: \"Pain killer \",\n    text: '/痛み止め',\n    value: \"Pain killer\"\n  }, {\n    name: \"Antibiotics \",\n    text: '/抗生物質',\n    value: \"Antibiotics\"\n  }, {\n    name: \"Medicine for stomach and bowels \",\n    text: '/胃腸薬',\n    value: \"Medicine for stomach and bowels\"\n  }, {\n    name: \"Anesthetic \",\n    text: '/麻酔薬',\n    value: \"Antibiotics\"\n  }];\n  const [values, setValues] = useContext(MedContext);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [date, setDate] = useState('');\n  const [sex, setSex] = useState('');\n  const [checkedFood, setCheckedFood] = React.useState([]);\n  const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) history.push(\"/login1\");\n  });\n  const authAxios = Axios.create({\n    baseURL: \"http://localhost:5000\",\n    headers: {\n      'x-auth-token': userData.token\n    }\n  });\n\n  const logFunction = async question => {\n    const loginfo = {\n      inteviewName: \"Internal Medcine form1\",\n      //userName: userData.user.userName,\n      language: i18n.language,\n      contentSentence: question,\n      date: new Date(),\n      userId: userData.user.id\n    };\n    const loginInput = await authAxios.post(\"/logfile/insert\", loginfo);\n  };\n\n  const handleToggleFood = value => () => {\n    const currentIndex = values.allergis.foods.indexOf(value.value);\n    const newChecked = [...values.allergis.foods];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    } //setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n\n\n    setValues({ ...values,\n      allergis: { ...values.allergis,\n        foods: newChecked\n      }\n    });\n    logFunction(\"Food Allergie\");\n  };\n\n  const handleToggleMedecin = value => () => {\n    const currentIndex = values.allergis.medcine.indexOf(value.value);\n    const newChecked = [...values.allergis.medcine];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    } //setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n\n\n    setValues({ ...values,\n      allergis: { ...values.allergis,\n        medcine: newChecked\n      }\n    });\n    logFunction(\"Medicine Allergie\");\n  }; //console.log(checkedFood)\n  // console.log(checkedMedecine)\n\n\n  const updateName = e => {\n    // setName(e.target.value);\n    setValues({ ...values,\n      name: e.target.value\n    });\n    logFunction(\"Patient name\");\n  };\n\n  console.log(values);\n\n  const updateHeight = e => {\n    // setHeight(e.target.value);\n    setValues({ ...values,\n      height: e.target.value\n    });\n    logFunction(\"Patient height\");\n  };\n\n  const updateWeight = e => {\n    //setWeight(e.target.value);\n    setValues({ ...values,\n      weight: e.target.value\n    });\n    logFunction(\"Patient Weight\");\n  };\n\n  const updateDate = date => {\n    setDate(date);\n    setValues({ ...values,\n      DateOfBirth: date\n    });\n    logFunction(\"Date of birth\");\n  };\n\n  const updateSex = event => {\n    //setSex(event.target.value);\n    setValues({ ...values,\n      sex: event.target.value\n    });\n    logFunction(\"Patient sex\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.PersonnalInformation'), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"#0000ffbf\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 110\n    }\n  }, \"\\u500B\\u4EBA\\u60C5\\u5831\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, t('internalMedcine.LastFirstname'), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"#0000ffbf\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 89\n    }\n  }, \"/\\u533B\\u7642\\u6A5F\\u95A2\\u8A18\\u5165\\u6B04/\\u751F\\u5E74\\u6708\\u65E5\\uFF08\\u897F\\u66A6)\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    type: \"text\" //values={name}\n    ,\n    defaultValue: values.name,\n    onChange: updateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    fullWidth: true,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: t('internalMedcine.Dateofbirth'),\n    format: \"yyyy/MM/dd\",\n    value: values.DateOfBirth,\n    onChange: updateDate,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 6,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Height')), /*#__PURE__*/React.createElement(Input, {\n    id: \"height\",\n    type: \"number\" //values={height}\n    ,\n    defaultValue: values.height,\n    onChange: updateHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 6,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Weight')), /*#__PURE__*/React.createElement(Input, {\n    id: \"weight\",\n    type: \"number\" //values={weight}\n    ,\n    defaultValue: values.weight,\n    onChange: updateWeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, t('internalMedcine.Sex')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: values.sex,\n    onChange: updateSex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Male')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Female'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 58\n    }\n  }, t('internalMedcine.Allergie'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 94\n    }\n  }, \"/\\u30A2\\u30EC\\u30EB\\u30AE\\u30FC\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 62\n    }\n  }, \"Food Allergie\"))), /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, foodAlergie.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleFood(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: classes.ListItemIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.allergis.foods.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 37\n      }\n    }, value.name, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }, value.text)));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 62\n    }\n  }, \"Medicine Allergie\"))), /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 1,\n    style: {\n      paddingLeft: 62\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, medecinesAlergie.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleMedecin(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.allergis.medcine.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 37\n      }\n    }, value.name, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 41\n      }\n    }, value.text)));\n  }))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/form2.js"],"names":["React","useEffect","useState","useContext","useHistory","makeStyles","Paper","Grid","useTranslation","FormControl","Input","InputLabel","DateFnsUtils","Checkbox","Select","MenuItem","MuiPickersUtilsProvider","KeyboardDatePicker","MedContext","ListItem","ListItemIcon","ListItemText","GridList","UserContext","Axios","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","gridList","width","height","margin","minWidth","CenteredGrid","blue","text","foodAlergie","name","value","medecinesAlergie","values","setValues","t","i18n","classes","setName","setHeight","weight","setWeight","date","setDate","sex","setSex","checkedFood","setCheckedFood","checkedMedecine","setCheckedMedecine","userData","history","user","push","authAxios","create","baseURL","headers","token","logFunction","question","loginfo","inteviewName","language","contentSentence","Date","userId","id","loginInput","post","handleToggleFood","currentIndex","allergis","foods","indexOf","newChecked","splice","handleToggleMedecin","medcine","updateName","e","target","console","log","updateHeight","updateWeight","updateDate","DateOfBirth","updateSex","event","formControl","map","labelId","undefined","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { MedContext } from '../internalMedContext'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n    gridList: {\n        width: 500,\n        height: 300,\n        textAlign: 'center',\n        margin:10,\n        padding:13\n      },\n      ListItemIcon: {\n          minWidth:32\n      }\n}));\n\nconst CenteredGrid = () => {\n    const blue = (text) =>{\n        return(\n        <span style={{color:\"blue\"}}>{text}</span>\n        );\n      \n    }\n\n    const foodAlergie = [\n        { name: 'Fish Roe', text:'/魚卵', value: 'Fish Roe' },\n        { name: 'Shellfish', text:'/貝類', value: 'Shellfish' },\n        { name: 'Milk ', text:'/甲殻類（エビ、カニ等)',  value: 'Milk' },\n        { name: 'Cheese ', text:'/卵', value: 'Cheese' },\n        { name: 'Buckwheat ', text:'/魚卵', value: 'Buckwheat' },\n        { name: 'Peanuts ', text:'/貝類',  value: 'Peanuts' },\n        { name: 'Almonds ', text:'/卵', value: 'Almonds' },\n        { name: 'Wheat ', text:'/小麦', value: 'wheat' },\n        { name: 'Soy ', text:'/大豆',  value: 'Soy' },\n        { name: 'Kiwifruit ', text:'/キウイ', value: 'Kiwifruit' },\n        { name: 'Peaches ', text:'/桃', value: 'Peaches' },\n        { name: 'Yams ', text:'/山芋', value: 'Yams' },\n        { name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\", text:'/青魚', value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\" },\n        { name: \"Shrimp/Prawns/ Crabs/Lobsters\", text:'/甲殻類（エビ、カニ等)/発熱', value: \"Shrimp/Prawns/Crabs/Lobsters\" },\n    ];\n\n    const medecinesAlergie = [\n        {name:\"Alcohol \", text:'/アルコール', value:\"Alcohol\"},\n        {name:\"Fever reducer \", text:'/解熱剤', value:\"Fever reducer\"},\n        {name:\"Pain killer \", text:'/痛み止め', value:\"Pain killer\"},\n        {name:\"Antibiotics \", text:'/抗生物質', value:\"Antibiotics\"},\n        {name:\"Medicine for stomach and bowels \", text:'/胃腸薬', value:\"Medicine for stomach and bowels\"},\n        {name:\"Anesthetic \", text:'/麻酔薬', value:\"Antibiotics\"}\n       ];\n\n    const [values, setValues] = useContext(MedContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const [name, setName] = useState('')\n    const [height, setHeight] = useState('')\n    const [weight, setWeight] = useState('')\n    const [date, setDate] = useState('')\n    const [sex, setSex] = useState('');\n\n    const [checkedFood, setCheckedFood] = React.useState([]);\n    const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form1\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleFood = (value) => () => {\n        const currentIndex = values.allergis.foods.indexOf(value.value);\n        const newChecked = [...values.allergis.foods];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        //setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n        setValues({...values, allergis:{...values.allergis, foods:newChecked}})\n        logFunction(\"Food Allergie\")\n    };\n\n    \n    const handleToggleMedecin = (value) => () => {\n        const currentIndex = values.allergis.medcine.indexOf(value.value);\n        const newChecked = [...values.allergis.medcine];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        //setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n        setValues({...values, allergis:{...values.allergis, medcine:newChecked}});\n        logFunction(\"Medicine Allergie\");\n    };\n    //console.log(checkedFood)\n   // console.log(checkedMedecine)\n\n    const updateName = (e) => {\n       // setName(e.target.value);\n        setValues({...values, name:e.target.value})\n        logFunction(\"Patient name\")\n       }\nconsole.log(values)\n\n    const updateHeight = (e) => {\n       // setHeight(e.target.value);\n        setValues({...values, height:e.target.value})\n        logFunction(\"Patient height\")\n    }\n\n    const updateWeight = (e) => {\n        //setWeight(e.target.value);\n        setValues({...values, weight:e.target.value})\n        logFunction(\"Patient Weight\")\n    }\n\n    const updateDate = (date) => {\n        setDate(date)\n        setValues({...values, DateOfBirth:date});\n        logFunction(\"Date of birth\")\n    }\n\n    const updateSex = (event) => {\n       //setSex(event.target.value);\n        setValues({...values, sex:event.target.value});\n        logFunction(\"Patient sex\")\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('internalMedcine.PersonnalInformation')} <i style={{color:\"#0000ffbf\"}}>個人情報</i></h4></strong></Paper>\n                </Grid>\n                <Grid item xs={8}>\n\n                    <FormControl fullWidth className=''>\n                        <InputLabel htmlFor=\"name\">{t('internalMedcine.LastFirstname')} <i style={{color:\"#0000ffbf\"}}>/医療機関記入欄/生年月日（西暦)</i></InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            //values={name}\n                            defaultValue={values.name}\n                            onChange={updateName}\n                        />\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"yyyy/MM/dd\"\n                                value={values.DateOfBirth}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"height\">{t('internalMedcine.Height')}</InputLabel>\n                            <Input\n                                id=\"height\"\n                                type=\"number\"\n                                //values={height}\n                                defaultValue={values.height}\n                                onChange={updateHeight}\n                            />\n                        </FormControl>\n                        \n                    </Grid>\n\n                </Grid>\n                <Grid item xs={4}>\n                <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"weight\">{t('internalMedcine.Weight')}</InputLabel>\n                            <Input\n                                id=\"weight\"\n                                type=\"number\"\n                                //values={weight}\n                                defaultValue={values.weight}\n                                onChange={updateWeight}\n                            />\n                        </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Sex')}</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.sex}\n                            onChange={updateSex}\n                        >\n                            <MenuItem value=\"Male\">{t('internalMedcine.Male')}</MenuItem>\n                            <MenuItem value=\"Female\">{t('internalMedcine.Female')}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            \n            <Grid item xs={12}>\n                <Paper className={classes.paper}><strong><h4>{t('internalMedcine.Allergie')} <span style={{color:\"blue\"}}>/アレルギー</span></h4></strong></Paper>\n            </Grid>\n            <br />\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Food Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={2}>\n                        {foodAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleFood(value)}>\n                                    <ListItemIcon className={classes.ListItemIcon}>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.foods.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} >\n                                        {value.name}\n                                        <span style={{color:\"blue\"}}>{value.text}</span>\n                                    </ListItemText>\n                                    \n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Medicine Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={1} style={{paddingLeft: 62}}>\n                        {medecinesAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedecin(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.medcine.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} >\n                                        {value.name}\n                                        <span style={{color:\"blue\"}}>{value.text}</span>\n                                    </ListItemText>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n\n                    </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}