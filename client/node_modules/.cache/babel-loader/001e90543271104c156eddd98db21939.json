{"ast":null,"code":"import _classCallCheck from \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { defaults } from './utils.js';\nimport request from './request.js';\n\nvar getDefaults = function getDefaults() {\n  return {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: '/locales/add/{{lng}}/{{ns}}',\n    allowMultiLoading: false,\n    parse: function parse(data) {\n      return JSON.parse(data);\n    },\n    stringify: JSON.stringify,\n    parsePayload: function parsePayload(namespace, key, fallbackValue) {\n      return _defineProperty({}, key, fallbackValue || '');\n    },\n    request: request,\n    reloadInterval: false,\n    customHeaders: {},\n    queryStringParams: {},\n    crossDomain: false,\n    // used for XmlHttpRequest\n    withCredentials: false,\n    // used for XmlHttpRequest\n    overrideMimeType: false,\n    // used for XmlHttpRequest\n    requestOptions: {\n      // used for fetch\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'default'\n    }\n  };\n};\n\nvar Backend = /*#__PURE__*/function () {\n  function Backend(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Backend);\n\n    this.services = services;\n    this.options = options;\n    this.allOptions = allOptions;\n    this.type = 'backend';\n    this.init(services, options, allOptions);\n  }\n\n  _createClass(Backend, [{\n    key: \"init\",\n    value: function init(services) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults());\n      this.allOptions = allOptions;\n\n      if (this.options.reloadInterval) {\n        setInterval(function () {\n          return _this.reload();\n        }, this.options.reloadInterval);\n      }\n    }\n  }, {\n    key: \"readMulti\",\n    value: function readMulti(languages, namespaces, callback) {\n      var loadPath = this.options.loadPath;\n\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath(languages, namespaces);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, {\n        lng: languages.join('+'),\n        ns: namespaces.join('+')\n      });\n      this.loadUrl(url, callback, languages, namespaces);\n    }\n  }, {\n    key: \"read\",\n    value: function read(language, namespace, callback) {\n      var loadPath = this.options.loadPath;\n\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath([language], [namespace]);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, {\n        lng: language,\n        ns: namespace\n      });\n      this.loadUrl(url, callback, language, namespace);\n    }\n  }, {\n    key: \"loadUrl\",\n    value: function loadUrl(url, callback, languages, namespaces) {\n      var _this2 = this;\n\n      this.options.request(this.options, url, function (err, res) {\n        if (res && res.status >= 500 && res.status < 600) return callback('failed loading ' + url, true\n        /* retry */\n        );\n        if (res && res.status >= 400 && res.status < 500) return callback('failed loading ' + url, false\n        /* no retry */\n        );\n        if (err) return callback(err, false);\n        var ret, parseErr;\n\n        try {\n          ret = _this2.options.parse(res.data, languages, namespaces);\n        } catch (e) {\n          parseErr = 'failed parsing ' + url + ' to json';\n        }\n\n        if (parseErr) return callback(parseErr, false);\n        callback(null, ret);\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create(languages, namespace, key, fallbackValue) {\n      var _this3 = this;\n\n      if (typeof languages === 'string') languages = [languages];\n      var payload = this.options.parsePayload(namespace, key, fallbackValue);\n      languages.forEach(function (lng) {\n        var url = _this3.services.interpolator.interpolate(_this3.options.addPath, {\n          lng: lng,\n          ns: namespace\n        });\n\n        _this3.options.request(_this3.options, url, payload, function (data, res) {// TODO: if res.status === 4xx do log\n        });\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this4 = this;\n\n      var _this$services = this.services,\n          backendConnector = _this$services.backendConnector,\n          languageUtils = _this$services.languageUtils,\n          logger = _this$services.logger;\n      var currentLanguage = backendConnector.language;\n      if (currentLanguage && currentLanguage.toLowerCase() === 'cimode') return; // avoid loading resources for cimode\n\n      var toLoad = [];\n\n      var append = function append(lng) {\n        var lngs = languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(function (l) {\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n\n      append(currentLanguage);\n      if (this.allOptions.preload) this.allOptions.preload.forEach(function (l) {\n        return append(l);\n      });\n      toLoad.forEach(function (lng) {\n        _this4.allOptions.ns.forEach(function (ns) {\n          backendConnector.read(lng, ns, 'read', null, null, function (err, data) {\n            if (err) logger.warn(\"loading namespace \".concat(ns, \" for language \").concat(lng, \" failed\"), err);\n            if (!err && data) logger.log(\"loaded namespace \".concat(ns, \" for language \").concat(lng), data);\n            backendConnector.loaded(\"\".concat(lng, \"|\").concat(ns), err, data);\n          });\n        });\n      });\n    }\n  }]);\n\n  return Backend;\n}();\n\nBackend.type = 'backend';\nexport default Backend;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/node_modules/i18next-http-backend/lib/index.js"],"names":["defaults","request","getDefaults","loadPath","addPath","allowMultiLoading","parse","data","JSON","stringify","parsePayload","namespace","key","fallbackValue","reloadInterval","customHeaders","queryStringParams","crossDomain","withCredentials","overrideMimeType","requestOptions","mode","credentials","cache","Backend","services","options","allOptions","type","init","setInterval","reload","languages","namespaces","callback","url","interpolator","interpolate","lng","join","ns","loadUrl","language","err","res","status","ret","parseErr","e","payload","forEach","backendConnector","languageUtils","logger","currentLanguage","toLowerCase","toLoad","append","lngs","toResolveHierarchy","l","indexOf","push","preload","read","warn","log","loaded"],"mappings":"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","sourcesContent":["import { defaults } from './utils.js'\nimport request from './request.js'\n\nconst getDefaults = () => {\n  return {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: '/locales/add/{{lng}}/{{ns}}',\n    allowMultiLoading: false,\n    parse: data => JSON.parse(data),\n    stringify: JSON.stringify,\n    parsePayload: (namespace, key, fallbackValue) => ({ [key]: fallbackValue || '' }),\n    request,\n    reloadInterval: false,\n    customHeaders: {},\n    queryStringParams: {},\n    crossDomain: false, // used for XmlHttpRequest\n    withCredentials: false, // used for XmlHttpRequest\n    overrideMimeType: false, // used for XmlHttpRequest\n    requestOptions: { // used for fetch\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'default'\n    }\n  }\n}\n\nclass Backend {\n  constructor (services, options = {}, allOptions = {}) {\n    this.services = services\n    this.options = options\n    this.allOptions = allOptions\n    this.type = 'backend'\n    this.init(services, options, allOptions)\n  }\n\n  init (services, options = {}, allOptions = {}) {\n    this.services = services\n    this.options = defaults(options, this.options || {}, getDefaults())\n    this.allOptions = allOptions\n    if (this.options.reloadInterval) {\n      setInterval(() => this.reload(), this.options.reloadInterval)\n    }\n  }\n\n  readMulti (languages, namespaces, callback) {\n    var loadPath = this.options.loadPath\n    if (typeof this.options.loadPath === 'function') {\n      loadPath = this.options.loadPath(languages, namespaces)\n    }\n    const url = this.services.interpolator.interpolate(loadPath, { lng: languages.join('+'), ns: namespaces.join('+') })\n    this.loadUrl(url, callback, languages, namespaces)\n  }\n\n  read (language, namespace, callback) {\n    var loadPath = this.options.loadPath\n    if (typeof this.options.loadPath === 'function') {\n      loadPath = this.options.loadPath([language], [namespace])\n    }\n    const url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace })\n    this.loadUrl(url, callback, language, namespace)\n  }\n\n  loadUrl (url, callback, languages, namespaces) {\n    this.options.request(this.options, url, (err, res) => {\n      if (res && res.status >= 500 && res.status < 600) return callback('failed loading ' + url, true /* retry */)\n      if (res && res.status >= 400 && res.status < 500) return callback('failed loading ' + url, false /* no retry */)\n      if (err) return callback(err, false)\n\n      let ret, parseErr\n      try {\n        ret = this.options.parse(res.data, languages, namespaces)\n      } catch (e) {\n        parseErr = 'failed parsing ' + url + ' to json'\n      }\n      if (parseErr) return callback(parseErr, false)\n      callback(null, ret)\n    })\n  }\n\n  create (languages, namespace, key, fallbackValue) {\n    if (typeof languages === 'string') languages = [languages]\n    const payload = this.options.parsePayload(namespace, key, fallbackValue)\n    languages.forEach(lng => {\n      const url = this.services.interpolator.interpolate(this.options.addPath, { lng: lng, ns: namespace })\n      this.options.request(this.options, url, payload, (data, res) => {\n        // TODO: if res.status === 4xx do log\n      })\n    })\n  }\n\n  reload () {\n    const { backendConnector, languageUtils, logger } = this.services\n    const currentLanguage = backendConnector.language\n    if (currentLanguage && currentLanguage.toLowerCase() === 'cimode') return // avoid loading resources for cimode\n\n    const toLoad = []\n    const append = (lng) => {\n      const lngs = languageUtils.toResolveHierarchy(lng)\n      lngs.forEach(l => {\n        if (toLoad.indexOf(l) < 0) toLoad.push(l)\n      })\n    }\n\n    append(currentLanguage)\n\n    if (this.allOptions.preload) this.allOptions.preload.forEach((l) => append(l))\n\n    toLoad.forEach(lng => {\n      this.allOptions.ns.forEach(ns => {\n        backendConnector.read(lng, ns, 'read', null, null, (err, data) => {\n          if (err) logger.warn(`loading namespace ${ns} for language ${lng} failed`, err)\n          if (!err && data) logger.log(`loaded namespace ${ns} for language ${lng}`, data)\n\n          backendConnector.loaded(`${lng}|${ns}`, err, data)\n        })\n      })\n    })\n  }\n}\n\nBackend.type = 'backend'\n\nexport default Backend\n"]},"metadata":{},"sourceType":"module"}