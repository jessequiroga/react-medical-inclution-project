{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/ObstetricgynecologyForms/form1.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { ObstetricContext } from '../ObstetricgynecologyContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  },\n  gridList: {\n    width: 500,\n    height: 300,\n    textAlign: 'center',\n    margin: 10,\n    padding: 13\n  },\n  ListItemIcon: {\n    minWidth: 32\n  }\n}));\n\nconst CenteredGrid = () => {\n  const foodAlergie = [{\n    name: 'Fish Roe/魚卵',\n    value: 'Fish Roe'\n  }, {\n    name: 'Shellfish /貝類',\n    value: 'Shellfish'\n  }, {\n    name: 'Milk /甲殻類（エビ、カニ等)',\n    value: 'Milk'\n  }, {\n    name: 'Cheese /卵',\n    value: 'Cheese'\n  }, {\n    name: 'Buckwheat /魚卵',\n    value: 'Buckwheat'\n  }, {\n    name: 'Peanuts /貝類',\n    value: 'Peanuts'\n  }, {\n    name: 'Almonds /卵',\n    value: 'Almonds'\n  }, {\n    name: 'wheat /小麦',\n    value: 'wheat'\n  }, {\n    name: 'soy /大豆',\n    value: 'soy'\n  }, {\n    name: 'Kiwifruit /キウイ',\n    value: 'Kiwifruit'\n  }, {\n    name: 'Peaches /桃',\n    value: 'Peaches'\n  }, {\n    name: 'Yams /山芋',\n    value: 'Yams'\n  }, {\n    name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)/青魚\",\n    value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\"\n  }, {\n    name: \"Shrimp/Prawns/ Crabs/Lobsters/甲殻類（エビ、カニ等)/発熱\",\n    value: \"Shrimp/Prawns/Crabs/Lobsters\"\n  }];\n  const medecinesAlergie = [{\n    name: \"Alcohol /アルコール\",\n    value: \"Alcohol\"\n  }, {\n    name: \"fever reducer /解熱剤\",\n    value: \"fever reducer\"\n  }, {\n    name: \"pain killer /痛み止め\",\n    value: \"pain killer\"\n  }, {\n    name: \"antibiotics /抗生物質\",\n    value: \"antibiotics\"\n  }, {\n    name: \"medicine for stomach and bowels /胃腸薬\",\n    value: \"medicine for stomach and bowels\"\n  }, {\n    name: \"anesthetic /麻酔薬\",\n    value: \"antibiotics\"\n  }];\n  const [values, setValues] = useContext(ObstetricContext);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const classes = useStyles();\n  const [checkedFood, setCheckedFood] = React.useState([]);\n  const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) history.push(\"/login1\");\n  });\n  const authAxios = Axios.create({\n    baseURL: \"http://localhost:5000\",\n    headers: {\n      'x-auth-token': userData.token\n    }\n  });\n\n  const logFunction = async question => {\n    const loginfo = {\n      inteviewName: \"Obstetric and Gynecology form 1\",\n      //userName: userData.user.userName,\n      language: i18n.language,\n      contentSentence: question,\n      date: new Date(),\n      userId: userData.user.id\n    };\n    const loginInput = await authAxios.post(\"/logfile/insert\", loginfo);\n  };\n\n  const handleToggleFood = value => () => {\n    const currentIndex = values.allergis.foods.indexOf(value.value);\n    const newChecked = [...values.allergis.foods];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedFood({\n      allergis: { ...values.allergis,\n        foods: newChecked\n      }\n    });\n    setValues({ ...values,\n      allergis: { ...values.allergis,\n        foods: newChecked\n      }\n    });\n    logFunction(\"Food Allergie\");\n  };\n\n  const handleToggleMedecin = value => () => {\n    const currentIndex = values.allergis.medcine.indexOf(value.value);\n    const newChecked = [...values.allergis.medcine];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedMedecine({\n      allergis: { ...values.allergis,\n        medcine: newChecked\n      }\n    });\n    setValues({ ...values,\n      allergis: { ...values.allergis,\n        medcine: newChecked\n      }\n    });\n    logFunction(\"Medicine Allergie\");\n  };\n\n  const update = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    logFunction(\"Patient \" + [e.target.name]);\n  };\n\n  const updateDate = date => {\n    setValues({ ...values,\n      DateOfBirth: date\n    });\n    logFunction(\"Date of birth\");\n  };\n\n  console.log(values);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.PersonnalInformation'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, t('internalMedcine.LastFirstname'), \" /\\u533B\\u7642\\u6A5F\\u95A2\\u8A18\\u5165\\u6B04/\\u751F\\u5E74\\u6708\\u65E5\\uFF08\\u897F\\u66A6)\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    type: \"text\",\n    values: values.name,\n    defaultValue: values.name,\n    onChange: update,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    fullWidth: true,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: t('internalMedcine.Dateofbirth'),\n    format: \"yyyy/MM/dd\",\n    value: values.DateOfBirth,\n    onChange: updateDate,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 6,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Height')), /*#__PURE__*/React.createElement(Input, {\n    id: \"height\",\n    type: \"number\",\n    values: values.height,\n    defaultValue: values.height,\n    onChange: update,\n    name: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 6,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Weight')), /*#__PURE__*/React.createElement(Input, {\n    id: \"weight\",\n    type: \"number\",\n    values: values.weight,\n    defaultValue: values.weight,\n    onChange: update,\n    name: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, t('internalMedcine.Sex')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: values.sex,\n    onChange: update,\n    name: \"sex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Male')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, t('internalMedcine.Female'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 58\n    }\n  }, t('internalMedcine.Allergie'), \" /\\u30A2\\u30EC\\u30EB\\u30AE\\u30FC\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 62\n    }\n  }, \"Food Allergie\"))), /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, foodAlergie.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleFood(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: classes.ListItemIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.allergis.foods.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 62\n    }\n  }, \"Medicine Allergie\"))), /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 1,\n    style: {\n      paddingLeft: 62\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, medecinesAlergie.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleMedecin(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.allergis.medcine.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }));\n  }))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/ObstetricgynecologyForms/form1.js"],"names":["React","useEffect","useContext","makeStyles","Paper","Grid","useTranslation","FormControl","Input","InputLabel","DateFnsUtils","Checkbox","Select","MenuItem","MuiPickersUtilsProvider","KeyboardDatePicker","ObstetricContext","ListItem","ListItemIcon","ListItemText","GridList","UserContext","Axios","useHistory","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","gridList","width","height","margin","minWidth","CenteredGrid","foodAlergie","name","value","medecinesAlergie","values","setValues","t","i18n","classes","checkedFood","setCheckedFood","useState","checkedMedecine","setCheckedMedecine","userData","history","user","push","authAxios","create","baseURL","headers","token","logFunction","question","loginfo","inteviewName","language","contentSentence","date","Date","userId","id","loginInput","post","handleToggleFood","currentIndex","allergis","foods","indexOf","newChecked","splice","handleToggleMedecin","medcine","update","e","target","updateDate","DateOfBirth","console","log","weight","formControl","sex","map","labelId","undefined","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { ObstetricContext } from '../ObstetricgynecologyContext'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridList from '@material-ui/core/GridList';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n    gridList: {\n        width: 500,\n        height: 300,\n        textAlign: 'center',\n        margin:10,\n        padding:13\n      },\n      ListItemIcon: {\n          minWidth:32\n      }\n}));\n\nconst CenteredGrid = () => {\n    \n    const foodAlergie = [\n        { name: 'Fish Roe/魚卵', value: 'Fish Roe' },\n        { name: 'Shellfish /貝類', value: 'Shellfish' },\n        { name: 'Milk /甲殻類（エビ、カニ等)', value: 'Milk' },\n        { name: 'Cheese /卵', value: 'Cheese' },\n        { name: 'Buckwheat /魚卵', value: 'Buckwheat' },\n        { name: 'Peanuts /貝類', value: 'Peanuts' },\n        { name: 'Almonds /卵', value: 'Almonds' },\n        { name: 'wheat /小麦', value: 'wheat' },\n        { name: 'soy /大豆', value: 'soy' },\n        { name: 'Kiwifruit /キウイ', value: 'Kiwifruit' },\n        { name: 'Peaches /桃', value: 'Peaches' },\n        { name: 'Yams /山芋', value: 'Yams' },\n        { name: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)/青魚\", value: \"Blue-skin fish (Mackerel/ Salmon/ Whitebait/ Anchovies/ Sardines)\" },\n        { name: \"Shrimp/Prawns/ Crabs/Lobsters/甲殻類（エビ、カニ等)/発熱\", value: \"Shrimp/Prawns/Crabs/Lobsters\" },\n    ];\n\n    const medecinesAlergie = [\n        {name:\"Alcohol /アルコール\", value:\"Alcohol\"},\n        {name:\"fever reducer /解熱剤\", value:\"fever reducer\"},\n        {name:\"pain killer /痛み止め\", value:\"pain killer\"},\n        {name:\"antibiotics /抗生物質\", value:\"antibiotics\"},\n        {name:\"medicine for stomach and bowels /胃腸薬\", value:\"medicine for stomach and bowels\"},\n        {name:\"anesthetic /麻酔薬\", value:\"antibiotics\"}\n       ];\n\n    const [values, setValues] = useContext(ObstetricContext);\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const [checkedFood, setCheckedFood] = React.useState([]);\n    const [checkedMedecine, setCheckedMedecine] = React.useState([]);\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Obstetric and Gynecology form 1\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    } \n\n    const handleToggleFood = (value) => () => {\n        const currentIndex = values.allergis.foods.indexOf(value.value);\n        const newChecked = [...values.allergis.foods];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedFood({allergis:{...values.allergis, foods:newChecked}});\n        setValues({...values, allergis:{...values.allergis, foods:newChecked}});\n        logFunction(\"Food Allergie\")\n    };\n\n    \n    const handleToggleMedecin = (value) => () => {\n        const currentIndex = values.allergis.medcine.indexOf(value.value);\n        const newChecked = [...values.allergis.medcine];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedMedecine({allergis:{...values.allergis, medcine:newChecked}});\n        setValues({...values, allergis:{...values.allergis, medcine:newChecked}});\n        logFunction(\"Medicine Allergie\");\n    };\n\n   const update = (e) => {\n    setValues({...values, [e.target.name]:e.target.value});\n    logFunction(\"Patient \"+[e.target.name])\n   }\n\n    const updateDate = (date) => {\n        setValues({...values, DateOfBirth:date})\n        logFunction(\"Date of birth\")\n    }\n\n    console.log(values)\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h4>{t('internalMedcine.PersonnalInformation')}</h4></strong></Paper>\n                </Grid>\n                <Grid item xs={8}>\n\n                    <FormControl fullWidth className=''>\n                        <InputLabel htmlFor=\"name\">{t('internalMedcine.LastFirstname')} /医療機関記入欄/生年月日（西暦)</InputLabel>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            values={values.name}\n                            defaultValue={values.name}\n                            onChange={update}\n                            name=\"name\"\n                        />\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n\n                            <KeyboardDatePicker\n                                fullWidth\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label={t('internalMedcine.Dateofbirth')}\n                                format=\"yyyy/MM/dd\"\n                                value={values.DateOfBirth}\n                                onChange={updateDate}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n\n                        </Grid>\n\n                    </MuiPickersUtilsProvider>\n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                        <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"height\">{t('internalMedcine.Height')}</InputLabel>\n                            <Input\n                                id=\"height\"\n                                type=\"number\"\n                                values={values.height}\n                                defaultValue={values.height}\n                                onChange={update}\n                                name=\"height\"\n                            />\n                        </FormControl>\n                        \n                    </Grid>\n\n                </Grid>\n                <Grid item xs={4}>\n                <FormControl fullWidth xs={6} className=''>\n                            <InputLabel htmlFor=\"weight\">{t('internalMedcine.Weight')}</InputLabel>\n                            <Input\n                                id=\"weight\"\n                                type=\"number\"\n                                values={values.weight}\n                                defaultValue={values.weight}\n                                onChange={update}\n                                name=\"weight\"\n                            />\n                        </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Sex')}</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.sex}\n                            onChange={update}\n                            name=\"sex\"\n                        >\n                            <MenuItem value=\"Male\">{t('internalMedcine.Male')}</MenuItem>\n                            <MenuItem value=\"Female\">{t('internalMedcine.Female')}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            \n            <Grid item xs={12}>\n                <Paper className={classes.paper}><strong><h4>{t('internalMedcine.Allergie')} /アレルギー</h4></strong></Paper>\n            </Grid>\n            <br />\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Food Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={2}>\n                        {foodAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleFood(value)}>\n                                    <ListItemIcon className={classes.ListItemIcon}>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.foods.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n                </Grid>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper}><strong><h4>Medicine Allergie</h4></strong></Paper>\n                    <GridList cellHeight={10} className={classes.gridList} cols={1} style={{paddingLeft: 62}}>\n                        {medecinesAlergie.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedecin(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.allergis.medcine.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                \n\n                    </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}