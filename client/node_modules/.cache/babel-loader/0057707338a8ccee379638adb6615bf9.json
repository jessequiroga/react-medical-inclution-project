{"ast":null,"code":"import i18n from'i18next';import{initReactI18next}from'react-i18next';import Backend from'i18next-http-backend';import LanguageDetector from'i18next-browser-languagedetector';// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nvar languages=['en','ko','ch','po'];i18n// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({fallbackLng:'en',debug:true,whitelist:languages,interpolation:{escapeValue:false// not needed for react as it escapes by default\n}});export default i18n;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/i18n.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","languages","use","init","fallbackLng","debug","whitelist","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA;AACA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAlB,CAEAJ,IACE;AACA;AAFE,CAGDK,GAHH,CAGOH,OAHP,CAIE;AACA;AALF,CAMGG,GANH,CAMOF,gBANP,CAOE;AAPF,CAQGE,GARH,CAQOJ,gBARP,CASE;AACA;AAVF,CAWGK,IAXH,CAWQ,CACJC,WAAW,CAAE,IADT,CAEJC,KAAK,CAAE,IAFH,CAGJC,SAAS,CAAEL,SAHP,CAKJM,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AADP,CALX,CAXR,EAsBA,cAAeX,CAAAA,IAAf","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nconst languages = ['en', 'ko', 'ch', 'po']\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    whitelist: languages,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;"]},"metadata":{},"sourceType":"module"}