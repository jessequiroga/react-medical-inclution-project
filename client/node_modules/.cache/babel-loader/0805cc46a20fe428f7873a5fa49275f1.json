{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/form1.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridList: {\n    width: 1000,\n    textAlign: 'center',\n    margin: 10,\n    padding: 3\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  }\n}));\n\nconst CenteredGrid = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const problemtodays = [{\n    name: t('internalMedcine.Fever'),\n    text: '/発熱',\n    value: \"Fever\"\n  }, {\n    name: t('internalMedcine.Cough'),\n    text: '/咳',\n    value: \"Cough\"\n  }, {\n    name: t('internalMedcine.Runnynose'),\n    text: '/鼻水',\n    value: \"Runnynose\"\n  }, {\n    name: t('internalMedcine.Phlegm'),\n    text: '/痰',\n    value: \"Phlegm\"\n  }, {\n    name: t('internalMedcine.Difficultybreathing'),\n    text: '/息が苦しい',\n    value: \"Difficultybreathing\"\n  }, {\n    name: t('internalMedcine.Palpitation'),\n    text: '/動悸',\n    value: \"Palpitation\"\n  }, {\n    name: t('internalMedcine.Feelsulggish'),\n    text: ' /身体がだるい',\n    value: \"Feelsulggish\"\n  }, {\n    name: t('internalMedcine.Geteasilytired'),\n    text: '/疲れやすい',\n    value: \"Geteasilytired\"\n  }, {\n    name: t('internalMedcine.Shortnessof'),\n    text: '/息切れ',\n    value: \"shortness of breath\"\n  }, {\n    name: t('internalMedcine.Dizziness'),\n    text: ' /めまい',\n    value: \"Dizziness\"\n  }, {\n    name: t('internalMedcine.Lossappetite'),\n    text: ' /食欲がない',\n    value: \"Lossappetite\"\n  }, {\n    name: t('internalMedcine.Vomiting'),\n    text: '/嘔吐',\n    value: \"Vomiting\"\n  }, {\n    name: t('internalMedcine.Bloodystool'),\n    text: '/血便',\n    value: \"Bloodystool\"\n  }, {\n    name: t('internalMedcine.Frequent'),\n    text: '/頻尿',\n    value: \"frequenturination\"\n  }, {\n    name: t('internalMedcine.Bloodyurine'),\n    text: '/血尿',\n    value: \"Bloodyurine\"\n  }, {\n    name: t('internalMedcine.Weightloss'),\n    text: '/体重減少',\n    value: \"Weightloss\"\n  }, {\n    name: t('internalMedcine.Feelthirsty'),\n    text: '/喉が渇く',\n    value: \"Feelthirsty\"\n  }, {\n    name: t('internalMedcine.Hypertension'),\n    text: '/高血圧',\n    value: \"Hypertension\"\n  }, {\n    name: t('internalMedcine.Paralysis'),\n    text: '/ 麻痺',\n    value: \"Paralysis\"\n  }, {\n    name: t('internalMedcine.Swelling'),\n    text: '/むくみ',\n    value: \"Swelling\"\n  }, {\n    name: t('internalMedcine.Hives'),\n    text: '/じんましん',\n    value: \"Hives\"\n  }, {\n    name: t('internalMedcine.Insomnia'),\n    text: '/不眠症',\n    value: \"Insomnia\"\n  }, {\n    name: t('internalMedcine.Numbness'),\n    text: '/しびれ',\n    value: \"Numbness\"\n  }, {\n    name: t('internalMedcine.Nausea'),\n    text: '/吐き気',\n    value: \"Nausea\"\n  }, {\n    name: t('internalMedcine.Diarrhea'),\n    text: '/下痢',\n    value: \"Diarrhea\"\n  }, {\n    name: t('internalMedcine.Itchiness'),\n    text: '/かゆみ',\n    value: \"itchiness\"\n  }, {\n    name: t('internalMedcine.Pain'),\n    text: '/痛み',\n    value: \"Pain\"\n  }, {\n    name: t('internalMedcine.Other'),\n    text: '/その他：',\n    value: \"others\"\n  }];\n  const stools = [{\n    name: t('internalMedcine.Grayishwhite'),\n    text: '/ 灰白色',\n    value: \"Grayishwhite\"\n  }, {\n    name: t('internalMedcine.Brown'),\n    text: '/ 茶色',\n    value: \"Brown\"\n  }, {\n    name: t('internalMedcine.Black'),\n    text: '/黒色',\n    value: \"Black\"\n  }, {\n    name: t('internalMedcine.bloody'),\n    text: '/血便',\n    value: \"bloody\"\n  }, {\n    name: t('internalMedcine.watery'),\n    text: '/水様',\n    value: \"watery\"\n  }, {\n    name: t('internalMedcine.Soft'),\n    text: '/軟便',\n    value: \"Soft\"\n  }, {\n    name: t('internalMedcine.Hard'),\n    text: '/硬い便',\n    value: \"Hard\"\n  }];\n  const [values, setValues] = useContext(MedContext);\n  const classes = useStyles();\n  const [checkedProblemtoday, setCheckedProblemtoday] = React.useState([]);\n  const [checkedStool, setCheckedStool] = React.useState([]);\n  const [frequency, setFrequency] = React.useState('');\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) history.push(\"/login1\");\n  });\n  const authAxios = Axios.create({\n    baseURL: \"http://localhost:5000\",\n    headers: {\n      'x-auth-token': userData.token\n    }\n  });\n\n  const logFunction = async question => {\n    const loginfo = {\n      inteviewName: \"Internal Medcine form 2\",\n      //userName: userData.user.userName,\n      language: i18n.language,\n      contentSentence: question,\n      date: new Date(),\n      userId: userData.user.id\n    };\n    const loginInput = await authAxios.post(\"/logfile/insert\", loginfo);\n  };\n\n  const handleToggleProblemtoday = object => () => {\n    const currentIndex = values.problemtoday.indexOf(object.value);\n    const newChecked = [...values.problemtoday];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedProblemtoday(newChecked);\n    setValues({ ...values,\n      problemtoday: newChecked\n    });\n    logFunction(\"What is the problem today\");\n  };\n\n  const handleToggleStool = object => () => {\n    const currentIndex = values.stools.indexOf(object.value);\n    const newChecked = [...values.stools];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedStool(newChecked);\n    setValues({ ...values,\n      stools: newChecked\n    });\n    logFunction(\"How is your stool like\");\n  };\n\n  const updateFrequency = event => {\n    setFrequency(event.target.value);\n    setValues({ ...values,\n      stoolfrequency: event.target.value\n    });\n    logFunction(\"How is your stool frequency\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.problemtoday'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 110\n    }\n  }, \"/\\u4ECA\\u65E5\\u306F\\u3069\\u306E\\u3088\\u3046\\u306A\\u75C7\\u72B6\\u304C\\u3042\\u308A\\u307E\\u3059\\u304B\\u3002\\uFF08\\u8907\\u6570\\u3042\\u308B\\u65B9\\u306F\\u8907\\u6570\\u2611\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044.)\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    container: true,\n    style: {\n      height: 370,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, problemtodays.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleProblemtoday(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.problemtoday.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, value.name, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, value.text)));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 66\n    }\n  }, \"Check all that apply about your stool. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 109\n    }\n  }), \"/ \\u4FBF\\u306E\\u6027\\u72B6\\u306B\\u2611\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\")))), /*#__PURE__*/React.createElement(GridList, {\n    container: true,\n    style: {\n      height: 107,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, stools.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleStool(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.stools.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, value.name, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    }, value.text)));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 8,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, t('internalMedcine.Stoolfrequency'), \"/ \\u4E00\\u65E5\\u306E\\u6392\\u4FBF\\u56DE\\u6570\\uFF1A\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: values.stoolfrequency,\n    onChange: updateFrequency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, \"5\"))))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/Projeccts/react-medical-inclution-project/client/src/components/inteviewForms/form1.js"],"names":["React","useEffect","useState","useContext","useHistory","makeStyles","Grid","Paper","useTranslation","List","ListItem","ListItemIcon","ListItemText","Checkbox","GridList","FormControl","Select","InputLabel","MenuItem","MedContext","UserContext","Axios","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","t","i18n","problemtodays","name","text","value","stools","values","setValues","classes","checkedProblemtoday","setCheckedProblemtoday","checkedStool","setCheckedStool","frequency","setFrequency","userData","history","user","push","authAxios","create","baseURL","headers","token","logFunction","question","loginfo","inteviewName","language","contentSentence","date","Date","userId","id","loginInput","post","handleToggleProblemtoday","object","currentIndex","problemtoday","indexOf","newChecked","splice","handleToggleStool","updateFrequency","event","target","stoolfrequency","height","map","labelId","undefined","formControl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext }  from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MedContext } from '../internalMedContext';\nimport UserContext from '../context/UserContext';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n       \n        textAlign: 'center',\n        margin:10,\n        padding:3\n      },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\n\n\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const problemtodays = [\n        {name: t('internalMedcine.Fever'), text:'/発熱', value:\"Fever\"},\n        {name: t('internalMedcine.Cough'), text:'/咳', value:\"Cough\"},\n        {name: t('internalMedcine.Runnynose'), text:'/鼻水', value:\"Runnynose\"},\n        {name: t('internalMedcine.Phlegm'), text:'/痰', value:\"Phlegm\"},\n        {name: t('internalMedcine.Difficultybreathing'), text:'/息が苦しい', value:\"Difficultybreathing\"},\n        {name: t('internalMedcine.Palpitation'), text:'/動悸', value:\"Palpitation\"},\n        {name: t('internalMedcine.Feelsulggish'), text:' /身体がだるい', value:\"Feelsulggish\"},\n        {name: t('internalMedcine.Geteasilytired'), text:'/疲れやすい', value:\"Geteasilytired\"},\n        {name: t('internalMedcine.Shortnessof'), text:'/息切れ', value:\"shortness of breath\"},\n        {name: t('internalMedcine.Dizziness'), text:' /めまい', value:\"Dizziness\"},\n        {name: t('internalMedcine.Lossappetite'), text:' /食欲がない', value:\"Lossappetite\"},\n        {name: t('internalMedcine.Vomiting'), text:'/嘔吐', value:\"Vomiting\"},\n        {name: t('internalMedcine.Bloodystool'), text:'/血便', value:\"Bloodystool\"},\n        {name: t('internalMedcine.Frequent'), text:'/頻尿', value:\"frequenturination\"},\n        {name: t('internalMedcine.Bloodyurine'), text:'/血尿', value:\"Bloodyurine\"},\n        {name: t('internalMedcine.Weightloss'), text:'/体重減少', value:\"Weightloss\"},\n        {name: t('internalMedcine.Feelthirsty'), text:'/喉が渇く', value:\"Feelthirsty\"},\n        {name: t('internalMedcine.Hypertension'), text:'/高血圧', value:\"Hypertension\"},\n        {name: t('internalMedcine.Paralysis' ), text:'/ 麻痺', value:\"Paralysis\"},\n        {name: t('internalMedcine.Swelling'), text:'/むくみ', value:\"Swelling\"},\n        {name: t('internalMedcine.Hives'), text:'/じんましん', value:\"Hives\"},\n        {name: t('internalMedcine.Insomnia' ), text:'/不眠症', value:\"Insomnia\"},\n        {name: t('internalMedcine.Numbness'), text:'/しびれ', value:\"Numbness\"},\n        {name: t('internalMedcine.Nausea'), text:'/吐き気', value:\"Nausea\"},\n        {name: t('internalMedcine.Diarrhea'), text:'/下痢', value:\"Diarrhea\"},\n        {name: t('internalMedcine.Itchiness'), text:'/かゆみ', value:\"itchiness\"},\n        {name: t('internalMedcine.Pain'), text:'/痛み', value:\"Pain\"},\n        {name: t('internalMedcine.Other'), text:'/その他：', value:\"others\"},\n        \n       ]\n\n       const stools = [\n        {name: t('internalMedcine.Grayishwhite'), text:'/ 灰白色', value:\"Grayishwhite\"},\n        {name: t('internalMedcine.Brown'), text:'/ 茶色', value:\"Brown\"},\n        {name: t('internalMedcine.Black'), text:'/黒色', value:\"Black\"},\n        {name: t('internalMedcine.bloody'), text:'/血便', value:\"bloody\"},\n        {name: t('internalMedcine.watery'), text:'/水様', value:\"watery\"},\n        {name: t('internalMedcine.Soft'), text:'/軟便', value:\"Soft\"},\n        {name: t('internalMedcine.Hard'), text:'/硬い便', value:\"Hard\"},\n       ]\n    \n\n    const [values, setValues] = useContext(MedContext);\n    const classes = useStyles();\n    const [checkedProblemtoday, setCheckedProblemtoday] = React.useState([]);\n    const [checkedStool, setCheckedStool] = React.useState([]);\n    const [frequency, setFrequency] = React.useState('');\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) history.push(\"/login1\");\n    });\n\n    const authAxios = Axios.create({\n        baseURL: \"http://localhost:5000\",\n        headers: {\n          'x-auth-token': userData.token,\n        },\n      });\n\n    const logFunction = async (question) =>{\n        const loginfo = {\n            inteviewName: \"Internal Medcine form 2\",\n            //userName: userData.user.userName,\n            language: i18n.language,\n            contentSentence: question,\n            date: new Date,\n            userId: userData.user.id,\n          };\n          const loginInput = await authAxios.post(\n            \"/logfile/insert\",\n            loginfo\n          );\n    }  \n\n    const handleToggleProblemtoday = (object) => () => {\n        const currentIndex = values.problemtoday.indexOf(object.value);\n        const newChecked = [...values.problemtoday];\n        \n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedProblemtoday(newChecked);\n        setValues({...values, problemtoday:newChecked});\n        logFunction(\"What is the problem today\");\n    };\n\n    const handleToggleStool = (object) => () => {\n        const currentIndex = values.stools.indexOf(object.value);\n        const newChecked = [...values.stools];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setCheckedStool(newChecked);\n        setValues({...values, stools:newChecked});\n        logFunction(\"How is your stool like\");\n    };\n\n    const updateFrequency = (event) => {\n        setFrequency(event.target.value);\n        setValues({...values, stoolfrequency:event.target.value});\n        logFunction(\"How is your stool frequency\");\n    };\n\n    return (\n\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>{t('internalMedcine.problemtoday')}<br/><i style={{color:\"blue\"}}>/今日はどのような症状がありますか。（複数ある方は複数☑してください.)</i></h4></strong></Paper>\n                    </Grid>\n                    \n                    <Grid container spacing={3} style={{ padding: 20 }}>\n                    <GridList container style={{height:370, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {problemtodays.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleProblemtoday(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.problemtoday.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} >\n                                        {value.name}\n                                        <span style={{color:\"blue\"}}>{value.text}</span>\n                                    </ListItemText>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h4>Check all that apply about your stool. <br/>/ 便の性状に☑してください</h4></strong></Paper>\n                    </Grid>\n                        \n                    <GridList container style={{height:107, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {stools.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleStool(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.stools.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} >\n                                        {value.name}\n                                        <span style={{color:\"blue\"}}>{value.text}</span>\n                                    </ListItemText>\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n                    <Grid item xs={6}>\n                    <FormControl fullWidth xs={8} className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">{t('internalMedcine.Stoolfrequency')}/ 一日の排便回数：</InputLabel>\n                        <Select \n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={values.stoolfrequency}\n                            onChange={updateFrequency}\n                        >\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                            <MenuItem value={5}>5</MenuItem>\n                        </Select>\n                        </FormControl>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n\n            </div>\n        </div>\n\n    )\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}