{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form4.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { CardiologyContext } from '../context/cardiologyContext';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridList: {\n    width: 1000,\n    textAlign: 'center',\n    margin: 10,\n    padding: 5\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  }\n}));\n\nconst CenteredGrid = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const hadsurgerys = [{\n    name: t('internalMedcine.Eye') + \"/ 目\",\n    value: \"Eye\"\n  }, {\n    name: t('internalMedcine.Ear') + \"/ 耳\",\n    value: \"Ear\"\n  }, {\n    name: t('internalMedcine.Nose') + \"/ 鼻\",\n    value: \"Nose\"\n  }, {\n    name: t('internalMedcine.Mouth') + \"/ 口\",\n    value: \"Mouth\"\n  }, {\n    name: t('internalMedcine.Throat') + \"/ のど\",\n    value: \"Throat\"\n  }, {\n    name: t('internalMedcine.neck') + \"/ 乳房\",\n    value: \"Neck\"\n  }, {\n    name: t('internalMedcine.Brest') + \"/ 乳房\",\n    value: \"Brest\"\n  }, {\n    name: t('internalMedcine.Esophagus') + \"/ 食道\",\n    value: \"Esophagus\"\n  }, {\n    name: t('internalMedcine.Stomach') + \"/ 胃\",\n    value: \"Stomach\"\n  }, {\n    name: t('internalMedcine.Intestines') + \"/ 梅毒\",\n    value: \"Intestines\"\n  }, {\n    name: t('internalMedcine.Heart') + \"/ 心臓<\",\n    value: \"Heart\"\n  }, {\n    name: t('internalMedcine.Cecum') + \"/ 盲腸\",\n    value: \"Cecum\"\n  }, {\n    name: t('internalMedcine.Liver') + \"/ 肝臓\",\n    value: \"Liver\"\n  }, {\n    name: t('internalMedcine.Pancreas') + \"/ 膵臓\",\n    value: \"Pancreas\"\n  }, {\n    name: t('internalMedcine.kidney') + \"/ 腎臓\",\n    value: \"kidney\"\n  }, {\n    name: t('internalMedcine.Ovary') + \"/ 卵巣\",\n    value: \"Ovary\"\n  }, {\n    name: t('internalMedcine.Uterus') + \"/ 子宮\",\n    value: \"Uterus\"\n  }, {\n    name: t('internalMedcine.Upperlowerlimb') + \"/ 上下肢\",\n    value: \"EUpperlowerlimbye\"\n  }, {\n    name: t('internalMedcine.Others') + \"/ その他\",\n    value: \"Others\"\n  }];\n  const onmedications = [{\n    name: t('internalMedcine.Coldmedicine') + \"/ かぜ薬\",\n    value: \"Coldmedicine\"\n  }, {\n    name: t('internalMedcine.Feverreducer') + \"/ 朝解熱剤\",\n    value: \"Feverreducer\"\n  }, {\n    name: t('internalMedcine.Painkiller') + \"/ 痛み止め\",\n    value: \"Painkiller\"\n  }, {\n    name: t('internalMedcine.Anti-suppuration') + \"/ 化膿止め\",\n    value: \"Anti-suppuration\"\n  }, {\n    name: t('internalMedcine.Antibiotics') + \"/ 化膿止め\",\n    value: \"Antibiotics\"\n  }];\n  const ondoctorcares = [{\n    name: t('internalMedcine.bronchialasthma') + \"/ 気管支喘息 /発熱\",\n    value: \"bronchialasthma\"\n  }, {\n    name: t('internalMedcine.highbloodpressure') + \"/ 絶高血圧\",\n    value: \"highbloodpressure\"\n  }, {\n    name: t('internalMedcine.Diabetesmellitus') + \"/ 糖尿病\",\n    value: \"Diabetesmellitus\"\n  }, {\n    name: t('internalMedcine.Tuberculosis') + \"/ 結核\",\n    value: \"Tuberculosis\"\n  }, {\n    name: t('internalMedcine.Hearttrouble') + \"/ 心臓病\",\n    value: \"Hearttrouble\"\n  }, {\n    name: t('internalMedcine.HepatitisB') + \"/ Ｂ型肝炎\",\n    value: \"HepatitisB\"\n  }, {\n    name: t('internalMedcine.epatitisC') + \"/ Ｃ型肝炎\",\n    value: \"epatitisC\"\n  }, {\n    name: t('internalMedcine.collagenConnectiveTissuedisease') + \"/ 膠原病\",\n    value: \"collagenConnectiveTissuedisease\"\n  }, {\n    name: t('internalMedcine.Thyroiddisease') + \"/ 甲状腺の病気\",\n    value: \"Thyroiddisease\"\n  }, {\n    name: t('internalMedcine.Cancertumor') + \"/ 血液の病気\",\n    value: \"Cancertumor\"\n  }, {\n    name: t('internalMedcine.glaucoma') + \"/ 緑内障\",\n    value: \"glaucoma\"\n  }, {\n    name: t('internalMedcine.Gastrointestinaldisorder') + \"/ 胃腸の病気\",\n    value: \"BlooGastrointestinaldisorderddisease\"\n  }, {\n    name: t('internalMedcine.Gonorrhea') + \"/ 淋病\",\n    value: \"Gonorrhea\"\n  }, {\n    name: t('internalMedcine.Syphilis') + \"/ 梅毒\",\n    value: \"Syphilis\"\n  }];\n  const [values, setValues] = useContext(CardiologyContext);\n  const classes = useStyles();\n\n  const handleToggleHadsurgerysType = object => () => {\n    const currentIndex = values.hadsurgerys.indexOf(object.value);\n    const newChecked = [...values.hadsurgerys];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      hadsurgerys: newChecked\n    });\n  };\n\n  const handleChangeHadsurgerys = event => {\n    setValues({ ...values,\n      hadsurgery: event.target.value\n    });\n  };\n\n  const handleToggleMedicationType = object => () => {\n    const currentIndex = values.onmedications.indexOf(object.value);\n    const newChecked = [...values.onmedications];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      onmedications: newChecked\n    });\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      onMedication: event.target.value\n    });\n  };\n\n  const handleToggleDoctorcaresType = object => () => {\n    const currentIndex = values.doctorCare.indexOf(object.value);\n    const newChecked = [...values.doctorCare];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      doctorCare: newChecked\n    });\n  };\n\n  const handleChangeDoctorcare = event => {\n    setValues({ ...values,\n      doctorcare: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.currentlyonmedication'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 111\n    }\n  }), \"/\\u73FE\\u5728\\u4F55\\u304B\\u85AC\\u3092\\u98F2\\u3093\\u3067\\u3044\\u307E\\u3059\\u304B\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    value: values.onMedication,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 64\n      }\n    }),\n    label: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 63\n      }\n    }),\n    label: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, values.onMedication === 'Yes' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    style: {\n      marginLeft: -148,\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 75\n    }\n  }, t('internalMedcine.currentlyonmedicationyesno'))), /*#__PURE__*/React.createElement(GridList, {\n    style: {\n      height: 120,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, onmedications.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleMedicationType(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.onmedications.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \" ' \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.underdoctorcare'), \"? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 106\n    }\n  }), \"/\\u73FE\\u5728\\u6CBB\\u7642\\u3057\\u3066\\u3044\\u308B\\u75C5\\u6C17\\u3001\\u307E\\u305F\\u306F\\u904E\\u53BB\\u306B\\u6CBB\\u7642\\u3057\\u3066\\u3044\\u305F\\u3053\\u3068\\u306F\\u3042\\u308A\\u307E\\u3059\\u304B\\uFF1F\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    value: values.doctorcare,\n    onChange: handleChangeDoctorcare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 64\n      }\n    }),\n    label: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 63\n      }\n    }),\n    label: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, values.doctorcare === 'Yes' ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    container: true,\n    style: {\n      marginTop: -25,\n      lineHeight: 2,\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 97\n    }\n  }, t('internalMedcine.currentlyonmedicationyesno'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 155\n    }\n  }), \"/\\u300C\\u306F\\u3044\\u300D\\u306B\\u2611\\u3057\\u305F\\u4EBA\\u306F\\u3001\\u75BE\\u60A3\\u540D\\u30EA\\u30B9\\u30C8\\u304B\\u3089\\u9078\\u629E\\u3057\\u3001\\u6CBB\\u7642\\u3057\\u3066\\u3044\\u305F\\u533B\\u7642\\u6A5F\\u95A2\\u540D\\u3092\\u66F8\\u3044\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\")), /*#__PURE__*/React.createElement(GridList, {\n    style: {\n      height: 200,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, ondoctorcares.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleDoctorcaresType(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.doctorCare.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, \" ' \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 62\n    }\n  }, t('internalMedcine.hadsurgery'), \"? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 101\n    }\n  }), \"/\\u73FE\\u5728\\u6CBB\\u7642\\u3057\\u3066\\u3044\\u308B\\u75C5\\u6C17\\u3001\\u307E\\u305F\\u306F\\u904E\\u53BB\\u306B\\u6CBB\\u7642\\u3057\\u3066\\u3044\\u305F\\u3053\\u3068\\u306F\\u3042\\u308A\\u307E\\u3059\\u304B\\uFF1F\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    value: values.hadsurgery,\n    onChange: handleChangeHadsurgerys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 64\n      }\n    }),\n    label: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 63\n      }\n    }),\n    label: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, values.hadsurgery === 'Yes' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    style: {\n      marginLeft: -148,\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 79\n    }\n  }, t('internalMedcine.currentlyonmedicationyesno'))), /*#__PURE__*/React.createElement(GridList, {\n    style: {\n      height: 233,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, hadsurgerys.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleHadsurgerysType(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.hadsurgerys.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, \" ' \")))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form4.js"],"names":["React","useState","useContext","makeStyles","Radio","RadioGroup","FormControlLabel","FormControl","Grid","Paper","useTranslation","ListItem","ListItemIcon","ListItemText","Checkbox","GridList","FormLabel","CardiologyContext","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","t","i18n","hadsurgerys","name","value","onmedications","ondoctorcares","values","setValues","classes","handleToggleHadsurgerysType","object","currentIndex","indexOf","newChecked","push","splice","handleChangeHadsurgerys","event","hadsurgery","target","handleToggleMedicationType","handleChange","onMedication","handleToggleDoctorcaresType","doctorCare","handleChangeDoctorcare","doctorcare","marginLeft","fontSize","height","map","labelId","undefined","lineHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrCC,EAAAA,QAAQ,EAAE;AACND,IAAAA,KAAK,EAAE,IADD;AAGNE,IAAAA,SAAS,EAAE,QAHL;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,OAAO,EAAE;AALH,GAJ2B;AAWrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADT,GAX6B;AAcrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,CADD;AAEVG,IAAAA,YAAY,EAAEZ,KAAK,CAACS,OAAN,CAAc,CAAd;AAFJ,GAduB;AAkBrCI,EAAAA,KAAK,EAAE;AACHP,IAAAA,OAAO,EAAEN,KAAK,CAACS,OAAN,CAAc,CAAd,CADN;AAEHL,IAAAA,SAAS,EAAE,QAFR;AAGHU,IAAAA,KAAK,EAAE;AAHJ;AAlB8B,CAAZ,CAAD,CAA5B;;AAwBA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAc1B,cAAc,EAAlC;AAEA,QAAM2B,WAAW,GAAG,CAChB;AAACC,IAAAA,IAAI,EAAEH,CAAC,CAAC,qBAAD,CAAD,GAA0B,KAAjC;AAAwCI,IAAAA,KAAK,EAAC;AAA9C,GADgB,EAEhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,qBAAD,CAAD,GAA0B,KAAjC;AAAwCI,IAAAA,KAAK,EAAC;AAA9C,GAFgB,EAGhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,sBAAD,CAAD,GAA2B,KAAlC;AAAyCI,IAAAA,KAAK,EAAC;AAA/C,GAHgB,EAIhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,KAAnC;AAA0CI,IAAAA,KAAK,EAAC;AAAhD,GAJgB,EAKhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,wBAAD,CAAD,GAA6B,MAApC;AAA4CI,IAAAA,KAAK,EAAC;AAAlD,GALgB,EAMhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,sBAAD,CAAD,GAA2B,MAAlC;AAA0CI,IAAAA,KAAK,EAAC;AAAhD,GANgB,EAOhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,MAAnC;AAA2CI,IAAAA,KAAK,EAAC;AAAjD,GAPgB,EAQhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,2BAAD,CAAD,GAAgC,MAAvC;AAA+CI,IAAAA,KAAK,EAAC;AAArD,GARgB,EAShB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,yBAAD,CAAD,GAA8B,KAArC;AAA4CI,IAAAA,KAAK,EAAC;AAAlD,GATgB,EAUhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,4BAAD,CAAD,GAAiC,MAAxC;AAAgDI,IAAAA,KAAK,EAAC;AAAtD,GAVgB,EAWhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,OAAnC;AAA4CI,IAAAA,KAAK,EAAC;AAAlD,GAXgB,EAYhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,MAAnC;AAA2CI,IAAAA,KAAK,EAAC;AAAjD,GAZgB,EAahB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,MAAnC;AAA2CI,IAAAA,KAAK,EAAC;AAAjD,GAbgB,EAchB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,0BAAD,CAAD,GAA+B,MAAtC;AAA8CI,IAAAA,KAAK,EAAC;AAApD,GAdgB,EAehB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,wBAAD,CAAD,GAA6B,MAApC;AAA4CI,IAAAA,KAAK,EAAC;AAAlD,GAfgB,EAgBhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,uBAAD,CAAD,GAA4B,MAAnC;AAA2CI,IAAAA,KAAK,EAAC;AAAjD,GAhBgB,EAiBhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,wBAAD,CAAD,GAA6B,MAApC;AAA4CI,IAAAA,KAAK,EAAC;AAAlD,GAjBgB,EAkBhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,gCAAD,CAAD,GAAqC,OAA5C;AAAqDI,IAAAA,KAAK,EAAC;AAA3D,GAlBgB,EAmBhB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,wBAAD,CAAD,GAA6B,OAApC;AAA6CI,IAAAA,KAAK,EAAC;AAAnD,GAnBgB,CAApB;AAsBA,QAAMC,aAAa,GAAG,CAClB;AAACF,IAAAA,IAAI,EAAEH,CAAC,CAAC,8BAAD,CAAD,GAAmC,OAA1C;AAAmDI,IAAAA,KAAK,EAAC;AAAzD,GADkB,EAElB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,8BAAD,CAAD,GAAmC,QAA1C;AAAoDI,IAAAA,KAAK,EAAC;AAA1D,GAFkB,EAGlB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,4BAAD,CAAD,GAAiC,QAAxC;AAAkDI,IAAAA,KAAK,EAAC;AAAxD,GAHkB,EAIlB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,kCAAD,CAAD,GAAuC,QAA9C;AAAwDI,IAAAA,KAAK,EAAC;AAA9D,GAJkB,EAKlB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,6BAAD,CAAD,GAAkC,QAAzC;AAAmDI,IAAAA,KAAK,EAAC;AAAzD,GALkB,CAAtB;AAQG,QAAME,aAAa,GAAG,CACrB;AAACH,IAAAA,IAAI,EAAEH,CAAC,CAAC,iCAAD,CAAD,GAAsC,aAA7C;AAA4DI,IAAAA,KAAK,EAAC;AAAlE,GADqB,EAErB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,mCAAD,CAAD,GAAwC,QAA/C;AAAyDI,IAAAA,KAAK,EAAC;AAA/D,GAFqB,EAGrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,kCAAD,CAAD,GAAuC,OAA9C;AAAuDI,IAAAA,KAAK,EAAC;AAA7D,GAHqB,EAIrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,8BAAD,CAAD,GAAmC,MAA1C;AAAkDI,IAAAA,KAAK,EAAC;AAAxD,GAJqB,EAKrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,8BAAD,CAAD,GAAmC,OAA1C;AAAmDI,IAAAA,KAAK,EAAC;AAAzD,GALqB,EAMrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,4BAAD,CAAD,GAAiC,QAAxC;AAAkDI,IAAAA,KAAK,EAAC;AAAxD,GANqB,EAOrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,2BAAD,CAAD,GAAgC,QAAvC;AAAiDI,IAAAA,KAAK,EAAC;AAAvD,GAPqB,EAQrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,iDAAD,CAAD,GAAsD,OAA7D;AAAsEI,IAAAA,KAAK,EAAC;AAA5E,GARqB,EASrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,gCAAD,CAAD,GAAqC,UAA5C;AAAwDI,IAAAA,KAAK,EAAC;AAA9D,GATqB,EAUrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,6BAAD,CAAD,GAAkC,SAAzC;AAAoDI,IAAAA,KAAK,EAAC;AAA1D,GAVqB,EAWrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,0BAAD,CAAD,GAA+B,OAAtC;AAA+CI,IAAAA,KAAK,EAAC;AAArD,GAXqB,EAYrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,0CAAD,CAAD,GAA+C,SAAtD;AAAiEI,IAAAA,KAAK,EAAC;AAAvE,GAZqB,EAarB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,2BAAD,CAAD,GAAgC,MAAvC;AAA+CI,IAAAA,KAAK,EAAC;AAArD,GAbqB,EAcrB;AAACD,IAAAA,IAAI,EAAEH,CAAC,CAAC,0BAAD,CAAD,GAA+B,MAAtC;AAA8CI,IAAAA,KAAK,EAAC;AAApD,GAdqB,CAAtB;AAiBH,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBzC,UAAU,CAACe,iBAAD,CAAtC;AACA,QAAM2B,OAAO,GAAG1B,SAAS,EAAzB;;AAIA,QAAM2B,2BAA2B,GAAIC,MAAD,IAAY,MAAM;AAClD,UAAMC,YAAY,GAAGL,MAAM,CAACL,WAAP,CAAmBW,OAAnB,CAA2BF,MAAM,CAACP,KAAlC,CAArB;AACA,UAAMU,UAAU,GAAG,CAAC,GAAGP,MAAM,CAACL,WAAX,CAAnB;;AAEA,QAAIU,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,MAAM,CAACP,KAAvB;AACH,KAFD,MAEO;AACHU,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDJ,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYL,MAAAA,WAAW,EAACY;AAAxB,KAAD,CAAT;AACH,GAXD;;AAaA,QAAMG,uBAAuB,GAAIC,KAAD,IAAW;AACvCV,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYY,MAAAA,UAAU,EAACD,KAAK,CAACE,MAAN,CAAahB;AAApC,KAAD,CAAT;AACH,GAFD;;AAKA,QAAMiB,0BAA0B,GAAIV,MAAD,IAAY,MAAM;AACjD,UAAMC,YAAY,GAAGL,MAAM,CAACF,aAAP,CAAqBQ,OAArB,CAA6BF,MAAM,CAACP,KAApC,CAArB;AACA,UAAMU,UAAU,GAAG,CAAC,GAAGP,MAAM,CAACF,aAAX,CAAnB;;AAEA,QAAIO,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,MAAM,CAACP,KAAvB;AACH,KAFD,MAEO;AACHU,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDJ,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYF,MAAAA,aAAa,EAACS;AAA1B,KAAD,CAAT;AACH,GAXD;;AAaA,QAAMQ,YAAY,GAAIJ,KAAD,IAAW;AAC5BV,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYgB,MAAAA,YAAY,EAACL,KAAK,CAACE,MAAN,CAAahB;AAAtC,KAAD,CAAT;AACH,GAFD;;AAIA,QAAMoB,2BAA2B,GAAIb,MAAD,IAAY,MAAM;AAClD,UAAMC,YAAY,GAAGL,MAAM,CAACkB,UAAP,CAAkBZ,OAAlB,CAA0BF,MAAM,CAACP,KAAjC,CAArB;AACA,UAAMU,UAAU,GAAG,CAAC,GAAGP,MAAM,CAACkB,UAAX,CAAnB;;AAEA,QAAIb,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,MAAM,CAACP,KAAvB;AACH,KAFD,MAEO;AACHU,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDJ,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYkB,MAAAA,UAAU,EAACX;AAAvB,KAAD,CAAT;AACH,GAXD;;AAaA,QAAMY,sBAAsB,GAAIR,KAAD,IAAW;AACtCV,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYoB,MAAAA,UAAU,EAACT,KAAK,CAACE,MAAN,CAAahB;AAApC,KAAD,CAAT;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACxB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEmB,OAAO,CAACZ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,CAAC,CAAC,uCAAD,CAAN,oBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjD,oFAAR,CAAjC,CADJ,CADJ,eAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,GAAG,MAAf;AAAgB,kBAAW,QAA3B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAmD,IAAA,KAAK,EAAEO,MAAM,CAACgB,YAAjE;AAA+E,IAAA,QAAQ,EAAED,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAA8B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,IAAxB;AAA6B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAiD,IAAA,KAAK,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADA,CALJ,eAeI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,MAAM,CAACgB,YAAP,KAAwB,KAAxB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACK,MAAAA,UAAU,EAAC,CAAC,GAAb;AAAkBC,MAAAA,QAAQ,EAAC;AAA3B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS7B,CAAC,CAAC,4CAAD,CAAV,CAAlD,CADA,eAEA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE,GAAV;AAAexC,MAAAA,OAAO,EAAE;AAAxB,KAAjB;AAA+C,IAAA,UAAU,EAAE,EAA3D;AAA+D,IAAA,SAAS,EAAEmB,OAAO,CAACtB,QAAlF;AAA4F,IAAA,IAAI,EAAE,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCkB,aAAa,CAAC0B,GAAd,CAAmB3B,KAAD,IAAW;AAC1B,UAAM4B,OAAO,GAAI,uBAAsB5B,KAAK,CAACD,IAAK,EAAlD;AAEA,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEC,KAAK,CAACD,IAArB;AAA2B,MAAA,IAAI,EAAE8B,SAAjC;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,MAAM,MAAxD;AAAyD,MAAA,OAAO,EAAEZ,0BAA0B,CAACjB,KAAD,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEG,MAAM,CAACF,aAAP,CAAqBQ,OAArB,CAA6BT,KAAK,CAACA,KAAnC,MAA8C,CAAC,CAF5D;AAGI,MAAA,QAAQ,EAAE,CAAC,CAHf;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,UAAU,EAAE;AAAE,2BAAmB4B;AAArB,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAUI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,EAAG,GAAE5B,KAAK,CAACD,IAAK,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAeH,GAlBA,CADD,CAFA,CADH,gBA0BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA3BZ,CADA,CAfJ,eAgDI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEM,OAAO,CAACZ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,CAAC,CAAC,iCAAD,CAAN,qBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C,sMAAR,CAAjC,CADJ,CAhDJ,eAmDI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,GAAG,MAAf;AAAgB,kBAAW,QAA3B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAmD,IAAA,KAAK,EAAEO,MAAM,CAACoB,UAAjE;AAA6E,IAAA,QAAQ,EAAED,sBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAA8B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,IAAxB;AAA6B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAiD,IAAA,KAAK,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADA,CAnDJ,eA4DI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,MAAM,CAACoB,UAAP,KAAsB,KAAtB,gBACG,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,KAAK,EAAE;AAAChC,MAAAA,SAAS,EAAC,CAAC,EAAZ;AAAgBuC,MAAAA,UAAU,EAAC,CAA3B;AAA8BL,MAAAA,QAAQ,EAAC;AAAvC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS7B,CAAC,CAAC,4CAAD,CAAV,oBAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1D,wQAAxE,CADA,eAEA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE,GAAV;AAAexC,MAAAA,OAAO,EAAE;AAAxB,KAAjB;AAA+C,IAAA,UAAU,EAAE,EAA3D;AAA+D,IAAA,SAAS,EAAEmB,OAAO,CAACtB,QAAlF;AAA4F,IAAA,IAAI,EAAE,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCmB,aAAa,CAACyB,GAAd,CAAmB3B,KAAD,IAAW;AAC1B,UAAM4B,OAAO,GAAI,uBAAsB5B,KAAK,CAACD,IAAK,EAAlD;AAEA,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEC,KAAK,CAACD,IAArB;AAA2B,MAAA,IAAI,EAAE8B,SAAjC;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,MAAM,MAAxD;AAAyD,MAAA,OAAO,EAAET,2BAA2B,CAACpB,KAAD,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEG,MAAM,CAACkB,UAAP,CAAkBZ,OAAlB,CAA0BT,KAAK,CAACA,KAAhC,MAA2C,CAAC,CAFzD;AAGI,MAAA,QAAQ,EAAE,CAAC,CAHf;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,UAAU,EAAE;AAAE,2BAAmB4B;AAArB,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAUI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,EAAG,GAAE5B,KAAK,CAACD,IAAK,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAeH,GAlBA,CADD,CAFA,CADH,gBA0BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA3BZ,CADA,CA5DJ,eA6FI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEM,OAAO,CAACZ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,CAAC,CAAC,4BAAD,CAAN,qBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,sMAAR,CAAjC,CADJ,CA7FJ,eAgGI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,GAAG,MAAf;AAAgB,kBAAW,QAA3B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAmD,IAAA,KAAK,EAAEO,MAAM,CAACY,UAAjE;AAA6E,IAAA,QAAQ,EAAEF,uBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAA8B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,IAAxB;AAA6B,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAiD,IAAA,KAAK,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADA,CAhGJ,eAyGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACY,UAAP,KAAsB,KAAtB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACS,MAAAA,UAAU,EAAC,CAAC,GAAb;AAAkBC,MAAAA,QAAQ,EAAC;AAA3B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS7B,CAAC,CAAC,4CAAD,CAAV,CAAlD,CADJ,eAEA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE,GAAV;AAAexC,MAAAA,OAAO,EAAE;AAAxB,KAAjB;AAA+C,IAAA,UAAU,EAAE,EAA3D;AAA+D,IAAA,SAAS,EAAEmB,OAAO,CAACtB,QAAlF;AAA4F,IAAA,IAAI,EAAE,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCe,WAAW,CAAC6B,GAAZ,CAAiB3B,KAAD,IAAW;AACxB,UAAM4B,OAAO,GAAI,uBAAsB5B,KAAK,CAACD,IAAK,EAAlD;AACD,wBACK,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEC,KAAK,CAACD,IAArB;AAA2B,MAAA,IAAI,EAAE8B,SAAjC;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,MAAM,MAAxD;AAAyD,MAAA,OAAO,EAAEvB,2BAA2B,CAACN,KAAD,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEG,MAAM,CAACL,WAAP,CAAmBW,OAAnB,CAA2BT,KAAK,CAACA,KAAjC,MAA4C,CAAC,CAF1D;AAGI,MAAA,QAAQ,EAAE,CAAC,CAHf;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,UAAU,EAAE;AAAE,2BAAmB4B;AAArB,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAUI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,EAAG,GAAE5B,KAAK,CAACD,IAAK,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADL;AAeF,GAjBA,CADD,CAFA,CADH,gBAyBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA1BZ,CADA,CAzGJ,CADJ,CADJ;AA6IH,CAzPD;;AA0PA,eAAeJ,YAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { CardiologyContext } from '../context/cardiologyContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n\n    const hadsurgerys = [\n        {name: t('internalMedcine.Eye') +\"/ 目\", value:\"Eye\"},\n        {name: t('internalMedcine.Ear') +\"/ 耳\", value:\"Ear\"},\n        {name: t('internalMedcine.Nose') +\"/ 鼻\", value:\"Nose\"},\n        {name: t('internalMedcine.Mouth') +\"/ 口\", value:\"Mouth\"},\n        {name: t('internalMedcine.Throat') +\"/ のど\", value:\"Throat\"},\n        {name: t('internalMedcine.neck') +\"/ 乳房\", value:\"Neck\"},\n        {name: t('internalMedcine.Brest') +\"/ 乳房\", value:\"Brest\"},\n        {name: t('internalMedcine.Esophagus') +\"/ 食道\", value:\"Esophagus\"},\n        {name: t('internalMedcine.Stomach') +\"/ 胃\", value:\"Stomach\"},\n        {name: t('internalMedcine.Intestines') +\"/ 梅毒\", value:\"Intestines\"},\n        {name: t('internalMedcine.Heart') +\"/ 心臓<\", value:\"Heart\"},\n        {name: t('internalMedcine.Cecum') +\"/ 盲腸\", value:\"Cecum\"},\n        {name: t('internalMedcine.Liver') +\"/ 肝臓\", value:\"Liver\"},\n        {name: t('internalMedcine.Pancreas') +\"/ 膵臓\", value:\"Pancreas\"},\n        {name: t('internalMedcine.kidney') +\"/ 腎臓\", value:\"kidney\"},\n        {name: t('internalMedcine.Ovary') +\"/ 卵巣\", value:\"Ovary\"},\n        {name: t('internalMedcine.Uterus') +\"/ 子宮\", value:\"Uterus\"},\n        {name: t('internalMedcine.Upperlowerlimb') +\"/ 上下肢\", value:\"EUpperlowerlimbye\"},\n        {name: t('internalMedcine.Others') +\"/ その他\", value:\"Others\"}\n       ]\n\n    const onmedications = [\n        {name: t('internalMedcine.Coldmedicine') +\"/ かぜ薬\", value:\"Coldmedicine\"},\n        {name: t('internalMedcine.Feverreducer') +\"/ 朝解熱剤\", value:\"Feverreducer\"},\n        {name: t('internalMedcine.Painkiller') +\"/ 痛み止め\", value:\"Painkiller\"},\n        {name: t('internalMedcine.Anti-suppuration') +\"/ 化膿止め\", value:\"Anti-suppuration\"},\n        {name: t('internalMedcine.Antibiotics') +\"/ 化膿止め\", value:\"Antibiotics\"}\n       ]\n\n       const ondoctorcares = [\n        {name: t('internalMedcine.bronchialasthma') +\"/ 気管支喘息 /発熱\", value:\"bronchialasthma\"},\n        {name: t('internalMedcine.highbloodpressure') +\"/ 絶高血圧\", value:\"highbloodpressure\"},\n        {name: t('internalMedcine.Diabetesmellitus') +\"/ 糖尿病\", value:\"Diabetesmellitus\"},\n        {name: t('internalMedcine.Tuberculosis') +\"/ 結核\", value:\"Tuberculosis\"},\n        {name: t('internalMedcine.Hearttrouble') +\"/ 心臓病\", value:\"Hearttrouble\"},\n        {name: t('internalMedcine.HepatitisB') +\"/ Ｂ型肝炎\", value:\"HepatitisB\"},\n        {name: t('internalMedcine.epatitisC') +\"/ Ｃ型肝炎\", value:\"epatitisC\"},\n        {name: t('internalMedcine.collagenConnectiveTissuedisease') +\"/ 膠原病\", value:\"collagenConnectiveTissuedisease\"},\n        {name: t('internalMedcine.Thyroiddisease') +\"/ 甲状腺の病気\", value:\"Thyroiddisease\"},\n        {name: t('internalMedcine.Cancertumor') +\"/ 血液の病気\", value:\"Cancertumor\"},\n        {name: t('internalMedcine.glaucoma') +\"/ 緑内障\", value:\"glaucoma\"},\n        {name: t('internalMedcine.Gastrointestinaldisorder') +\"/ 胃腸の病気\", value:\"BlooGastrointestinaldisorderddisease\"},\n        {name: t('internalMedcine.Gonorrhea') +\"/ 淋病\", value:\"Gonorrhea\"},\n        {name: t('internalMedcine.Syphilis') +\"/ 梅毒\", value:\"Syphilis\"}\n       ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n    \n\n    const handleToggleHadsurgerysType = (object) => () => {\n        const currentIndex = values.hadsurgerys.indexOf(object.value);\n        const newChecked = [...values.hadsurgerys];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, hadsurgerys:newChecked})\n    };\n\n    const handleChangeHadsurgerys = (event) => {\n        setValues({...values, hadsurgery:event.target.value})\n    };\n\n\n    const handleToggleMedicationType = (object) => () => {\n        const currentIndex = values.onmedications.indexOf(object.value);\n        const newChecked = [...values.onmedications];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, onmedications:newChecked})\n    };\n\n    const handleChange = (event) => {\n        setValues({...values, onMedication:event.target.value})\n    };\n\n    const handleToggleDoctorcaresType = (object) => () => {\n        const currentIndex = values.doctorCare.indexOf(object.value);\n        const newChecked = [...values.doctorCare];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, doctorCare:newChecked})\n    };\n\n    const handleChangeDoctorcare = (event) => {\n        setValues({...values, doctorcare:event.target.value})\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} style={{ padding: 20 }}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.currentlyonmedication')} <br />/現在何か薬を飲んでいますか</h5></strong></Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.onMedication} onChange={handleChange}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n\n                <Grid>\n                <div>\n                    {values.onMedication === 'Yes' ? (\n                        <div>\n                        <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {onmedications.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleMedicationType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.onmedications.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.underdoctorcare')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.doctorcare} onChange={handleChangeDoctorcare}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.doctorcare === 'Yes' ? (\n                        <Grid container item xs={12}>\n                        <FormLabel container style={{marginTop:-25, lineHeight:2, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')} <br/>/「はい」に☑した人は、疾患名リストから選択し、治療していた医療機関名を書いてください。</strong></FormLabel>\n                        <GridList style={{ height: 200, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {ondoctorcares.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleDoctorcaresType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.doctorCare.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </Grid>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}><strong><h5>{t('internalMedcine.hadsurgery')}? <br />/現在治療している病気、または過去に治療していたことはありますか？</h5></strong></Paper>\n                </Grid>\n                <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    \n                    <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={values.hadsurgery} onChange={handleChangeHadsurgerys}>\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                    </RadioGroup>\n                </FormControl>\n                </Grid>\n                <Grid>\n                <div>\n                    {values.hadsurgery === 'Yes' ? (\n                        <div>\n                            <FormLabel style={{marginLeft:-148, fontSize:18}}><strong>{t('internalMedcine.currentlyonmedicationyesno')}</strong></FormLabel>\n                        <GridList style={{ height: 233, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {hadsurgerys.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n                           return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleHadsurgerysType(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.hadsurgerys.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                        </GridList>\n                        </div>\n                    ) : (\n                            <nav> &apos; </nav>\n                        )}\n                </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}