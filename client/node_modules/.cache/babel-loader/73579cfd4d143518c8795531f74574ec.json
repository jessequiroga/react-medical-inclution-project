{"ast":null,"code":"var _jsxFileName = \"/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form3.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { CardiologyContext } from '../context/cardiologyContext';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridList: {\n    width: 1000,\n    textAlign: 'center',\n    margin: 10,\n    padding: 5\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: 'black'\n  }\n}));\n\nconst CenteredGrid = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const symptomoccurs = [{\n    name: t('internalMedcine.Morning') + \"/ 朝\",\n    value: \"Morning\"\n  }, {\n    name: t('internalMedcine.Daytime') + \"/ 昼\",\n    value: \"Daytime\"\n  }, {\n    name: t('internalMedcine.Evening') + \"/ 夕方\",\n    value: \"Evening\"\n  }, {\n    name: t('internalMedcine.Whileinbed') + \"/ 就寝中\",\n    value: \"Whileinbed\"\n  }, {\n    name: t('internalMedcine.Whenwakingup') + \"/ 朝\",\n    value: \"Whenwakingup\"\n  }, {\n    name: t('internalMedcine.Irregular') + \"/ 朝\",\n    value: \"Irregular\"\n  }, {\n    name: t('internalMedcine.Other') + \"/ 朝\",\n    value: \"Other\"\n  }];\n  const symptomlikes = [{\n    name: t('internalMedcine.Constant') + \"/ 絶え間なく、続いている\",\n    value: \"Constant\"\n  }, {\n    name: t('internalMedcine.symptomcomesgoes') + \"/ 症状が出たり消えたりしている\",\n    value: \"symptomcomesgoes\"\n  }, {\n    name: t('internalMedcine.symptomgraduallyworsening') + \"/ 絶え間なく、続いている\",\n    value: \"symptomgraduallyworsening\"\n  }, {\n    name: t('internalMedcine.Other') + \"/ その他\",\n    value: \"Other\"\n  }];\n  const [values, setValues] = useContext(CardiologyContext);\n  const classes = useStyles();\n\n  const handleToggleSymptomlikes = object => () => {\n    const currentIndex = values.symptomlike.indexOf(object.value);\n    const newChecked = [...values.symptomlike];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      symptomlike: newChecked\n    });\n  };\n\n  const handleToggleSymptomoccurs = object => () => {\n    const currentIndex = values.symptomoccur.indexOf(object.value);\n    const newChecked = [...values.symptomoccur];\n\n    if (currentIndex === -1) {\n      newChecked.push(object.value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setValues({ ...values,\n      symptomoccur: newChecked\n    });\n  };\n\n  const updateFrequency = event => {\n    setValues({ ...values,\n      scale1to10: event.target.value\n    });\n  };\n\n  const updateDate = date => {\n    setValues({ ...values,\n      symptomstart: date\n    });\n  };\n\n  const updateTime = time => {\n    setValues({ ...values,\n      symtomstarttime: time\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.symptomoccur'), \"? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 107\n    }\n  }), \"/\\u75C7\\u72B6\\u306F\\u3044\\u3064\\u9803\\u8D77\\u3053\\u308A\\u307E\\u3059\\u304B\\uFF1F\")))), /*#__PURE__*/React.createElement(GridList, {\n    style: {\n      height: 120,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, symptomoccurs.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleSymptomoccurs(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.symptomoccur.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.symptomlike'), \"? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 106\n    }\n  }), \"/\\u75C7\\u72B6\\u306F\\u3069\\u306E\\u3088\\u3046\\u306A\\u6027\\u8CEA\\u3092\\u6301\\u3063\\u3066\\u3044\\u307E\\u3059\\u304B\")))), /*#__PURE__*/React.createElement(GridList, {\n    style: {\n      height: 90,\n      padding: 20\n    },\n    cellHeight: 10,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, symptomlikes.map(value => {\n    const labelId = `checkbox-list-label-${value.name}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value.name,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggleSymptomlikes(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: values.symptomlike.indexOf(value.value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.scale1to10'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 103\n    }\n  }), \"/\\u305D\\u306E\\u75C7\\u72B6\\u306E\\u7A0B\\u5EA6\\u3092\\u6570\\u5B57\\u3067\\u8868\\u3059\\u3068\\u3001\\u3069\\u306E\\u3050\\u3089\\u3044\\u3067\\u3059\\u304B\\uFF1F\\u4E0B\\u306E\\u6570\\u5B57\\u304B\\u3089\\u9078\\u3073\\u306A\\u3055\\u3044\\u3002\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    xs: 8,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: values.scale1to10,\n    onChange: updateFrequency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"5\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 66\n    }\n  }, t('internalMedcine.symptomstart'), \"?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 106\n    }\n  }), \" /\\u3053\\u306E\\u75C7\\u72B6\\u306F\\u3044\\u3064\\u304B\\u3089\\u3042\\u308A\\u307E\\u3059\\u304B\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    xs: 8,\n    fullWidth: true,\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: t('internalMedcine.Dateofbirth'),\n    format: \"MM/dd/yyyy\",\n    value: values.symptomstart,\n    onChange: updateDate,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    xs: 8,\n    fullWidth: true,\n    margin: \"normal\",\n    id: \"time-picker\",\n    label: \"Time picker\",\n    value: values.symtomstarttime,\n    onChange: updateTime,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default CenteredGrid;","map":{"version":3,"sources":["/Users/etl/Documents/react-medical-inclution-project/src/components/CardiologyForms/form3.js"],"names":["React","useState","useContext","makeStyles","Grid","Paper","useTranslation","ListItem","ListItemIcon","ListItemText","Checkbox","GridList","FormControl","MenuItem","InputLabel","Select","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","CardiologyContext","useStyles","theme","root","width","gridList","textAlign","margin","padding","button","marginRight","spacing","instructions","marginTop","marginBottom","paper","color","CenteredGrid","t","i18n","symptomoccurs","name","value","symptomlikes","values","setValues","classes","handleToggleSymptomlikes","object","currentIndex","symptomlike","indexOf","newChecked","push","splice","handleToggleSymptomoccurs","symptomoccur","updateFrequency","event","scale1to10","target","updateDate","date","symptomstart","updateTime","time","symtomstarttime","height","map","labelId","undefined","formControl"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport GridList from '@material-ui/core/GridList';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { CardiologyContext } from '../context/cardiologyContext'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    gridList: {\n        width: 1000,\n\n        textAlign: 'center',\n        margin: 10,\n        padding: 5\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'black',\n    },\n}));\n\nconst CenteredGrid = () => {\n    const { t, i18n } = useTranslation();\n    const symptomoccurs = [\n        { name: t('internalMedcine.Morning') + \"/ 朝\", value: \"Morning\" },\n        { name: t('internalMedcine.Daytime') + \"/ 昼\", value: \"Daytime\" },\n        { name: t('internalMedcine.Evening') + \"/ 夕方\", value: \"Evening\" },\n        { name: t('internalMedcine.Whileinbed') + \"/ 就寝中\", value: \"Whileinbed\" },\n        { name: t('internalMedcine.Whenwakingup') + \"/ 朝\", value: \"Whenwakingup\" },\n        { name: t('internalMedcine.Irregular') + \"/ 朝\", value: \"Irregular\" },\n        { name: t('internalMedcine.Other') + \"/ 朝\", value: \"Other\" },\n    ]\n\n    const symptomlikes = [\n        { name: t('internalMedcine.Constant') + \"/ 絶え間なく、続いている\", value: \"Constant\" },\n        { name: t('internalMedcine.symptomcomesgoes') + \"/ 症状が出たり消えたりしている\", value: \"symptomcomesgoes\" },\n        { name: t('internalMedcine.symptomgraduallyworsening') + \"/ 絶え間なく、続いている\", value: \"symptomgraduallyworsening\" },\n        { name: t('internalMedcine.Other') + \"/ その他\", value: \"Other\" },\n    ]\n\n    const [values, setValues] = useContext(CardiologyContext);\n    const classes = useStyles();\n    \n\n    const handleToggleSymptomlikes = (object) => () => {\n        const currentIndex = values.symptomlike.indexOf(object.value);\n        const newChecked = [...values.symptomlike];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomlike:newChecked})\n    };\n\n    const handleToggleSymptomoccurs = (object) => () => {\n        const currentIndex = values.symptomoccur.indexOf(object.value);\n        const newChecked = [...values.symptomoccur];\n\n        if (currentIndex === -1) {\n            newChecked.push(object.value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setValues({...values, symptomoccur:newChecked})\n    };\n    const updateFrequency = (event) => {\n        setValues({...values, scale1to10:event.target.value});\n    };\n\n    const updateDate = (date) => {\n        setValues({...values, symptomstart:date})\n    }\n    const updateTime = (time) => {\n        setValues({...values, symtomstarttime:time})\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={3} style={{ padding: 20 }}>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomoccur')}? <br />/症状はいつ頃起こりますか？</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 120, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomoccurs.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomoccurs(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomoccur.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomlike')}? <br />/症状はどのような性質を持っていますか</h5></strong></Paper>\n                    </Grid>\n\n                    <GridList style={{ height: 90, padding: 20 }} cellHeight={10} className={classes.gridList} cols={3}>\n                        {symptomlikes.map((value) => {\n                            const labelId = `checkbox-list-label-${value.name}`;\n\n                            return (\n                                <ListItem key={value.name} role={undefined} dense button onClick={handleToggleSymptomlikes(value)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={values.symptomlike.indexOf(value.value) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.name}`} />\n\n                                </ListItem>\n                            );\n                        })}\n                    </GridList>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.scale1to10')}<br />/その症状の程度を数字で表すと、どのぐらいですか？下の数字から選びなさい。</h5></strong></Paper>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <FormControl fullWidth xs={8} className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Select</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={values.scale1to10}\n                                onChange={updateFrequency}\n                            >\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={3}>3</MenuItem>\n                                <MenuItem value={4}>4</MenuItem>\n                                <MenuItem value={5}>5</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><strong><h5>{t('internalMedcine.symptomstart')}?<br /> /この症状はいつからありますか</h5></strong></Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                            <Grid container justify=\"space-around\">\n\n                                <KeyboardDatePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"date-picker-dialog\"\n                                    label={t('internalMedcine.Dateofbirth')}\n                                    format=\"MM/dd/yyyy\"\n                                    value={values.symptomstart}\n                                    onChange={updateDate}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                                <KeyboardTimePicker\n                                    xs={8}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    id=\"time-picker\"\n                                    label=\"Time picker\"\n                                    value={values.symtomstarttime}\n                                    onChange={updateTime}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change time',\n                                    }} />\n                            </Grid>\n\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </div>\n    );\n}\nexport default CenteredGrid;"]},"metadata":{},"sourceType":"module"}